{"version":3,"sources":["Exploration.ts","dark.ts","InputBit.ts","OutputBit.ts","Adder.ts","Wire.ts","Gates.ts","Display.ts","AdderExploration.ts","AdderFailExploration.ts","Text.ts","BinaryExploration.ts","ChoiceGate.ts","UserGates.ts","AnswerChecker.ts","ChoiceExploration.ts","Clock.ts","ClockExploration.ts","RegisterBit.ts","Subtractor.ts","DividerExploration.ts","FullAdderGates.ts","FullSubtractorGates.ts","GateExploration.ts","HalfAdderBuild.ts","MakeALUExploration.ts","MultiplierExploration.ts","MultiplierNaiveExploration.ts","OnesComplementExploration.ts","RegisterExploration.ts","SignMagnitudeExploration.ts","SubtractorExploration.ts","TwosCompAdderExploration.ts","main.ts","../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["// Exploration.ts\n//\n// This might be something a little more interesting\n\nimport Component, {StateObject} from './Component';\n\nclass Exploration {\n    public canvas: HTMLCanvasElement;\n    public context: CanvasRenderingContext2D;\n    public components: Array<Component>;\n    // The idea is that all components update their state recursively starting here\n    public outputComponents: Array<Component>;\n\n    public animated: boolean = false; // assume not unless proven otherwise\n\n    public paused: boolean = false;\n    public updateTime: number = 1000;\n    public lastUpdated: number = Date.now();\n    public animationFrame: any;\n\n    // Can possibly have an afterRender property\n    public afterRender: (() => void) | null | undefined;\n\n    constructor(canvas: HTMLCanvasElement, width: number = 400, height: number = 400) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d')!;\n        this.components = [];\n        this.outputComponents = [];\n\n        // sizing\n        canvas.width = width;\n        canvas.height = height;\n\n        // TS-safe way of putting a random debug name\n        let id = Math.floor(Math.random() * 1e6);\n        Object.defineProperty(window, \"exploration\" + id, {\n            value: this,\n        });\n        console.log(id, this);\n    }\n\n    // todo: addComponent() maybe?\n\n    render(isDark: boolean) {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        for (let i = 0; i < this.components.length; i++) {\n            this.context.save();\n            // render wires first\n            const comp = this.components[i];\n            for (let j = 0; j < comp.inputWires.length; j++) {\n                const position = {\n                    x: comp.position.x + comp.inputSockets[j].x,\n                    y: comp.position.y + comp.inputSockets[j].y,\n                };\n                comp.inputWires[j]?.render(this.context, position, isDark);\n            }\n            this.components[i].render(this.context, isDark);\n            this.context.restore();\n        }\n\n        if (typeof this.afterRender === \"function\") {\n            this.afterRender();\n        }\n    }\n\n    onClick(canvasX: number, canvasY: number) {\n        let needsUpdate: boolean = false;\n        for (let i = 0; i < this.components.length; i++) {\n            const component = this.components[i];\n            const offsetX = canvasX - component.position.x;\n            const offsetY = canvasY - component.position.y;\n            if (Math.abs(offsetX) < component.size.x/2 && Math.abs(offsetY) < component.size.y/2 && component.onClick) {\n                needsUpdate ||= component.onClick(offsetX, offsetY);\n            }\n        }\n\n        if (needsUpdate && !this.animated) {\n            // Non-animated ones re-update the whole tree\n            this.update();\n        }\n    }\n\n    pause() {\n        this.paused = true;\n        cancelAnimationFrame(this.animationFrame);\n    }\n\n    resume() {\n        this.paused = false;\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    updateLoop() {\n        // Not paused or turned off, and been long enough since last update\n        if (!this.paused && this.updateTime > 0 && Date.now() - this.lastUpdated > this.updateTime) {\n            this.update();\n        }\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    update() {\n        // call beforeUpdate if needed\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            if (typeof comp.beforeUpdate === \"function\") {\n                comp.beforeUpdate();\n            }\n        }\n\n        // Recursively loop backwards through the tree\n        // stores a hash of component indices because we have to check the same component multiple times\n        // We hash anything that is listed as an output component\n\n        const visitedNodes: {[i: number]: boolean} = {};\n        const savedState = [];\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            const comp = this.outputComponents[i];\n            let old: boolean[] = [];\n            for (let j = 0; j < comp.state.bits.length; j++) {\n                old.push(comp.state.bits[j]);\n            }\n            savedState.push({bits: old});\n        }\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            this.updateComponent(this.outputComponents[i], visitedNodes, savedState);\n        }\n\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            //console.log(\"After Update: \", this.outputComponents[i].position, savedState[i].bits, this.outputComponents[i].state.bits)\n        }\n\n        //console.warn(\"UPDATE FINISHED\");\n\n        this.lastUpdated = Date.now();\n    }\n\n    updateComponent(component: Component,\n        visitedNodes: {[i: number]: boolean},\n        savedState: StateObject[]) {\n        let index = this.components.indexOf(component); // if this gets too slow I can add IDs\n        if (!visitedNodes[index]) {\n            visitedNodes[index] = true; // prevents infinite loops, although cyclic explorations are invalid anyway\n            // has not been visited, so we need to evaluate it\n            //console.log(\"visiting \" + String(index), component);\n            let parentBits = [];\n            for (let i = 0; i < component.inputWires.length; i++) {\n                const wire = component.inputWires[i];\n                if (wire) {\n                    const to = wire.toComponent;\n                    if (!to) {\n                        parentBits.push(false); // null = 0\n                    } else {\n                        this.updateComponent(wire.toComponent, visitedNodes, savedState);\n\n\n                        // all we need is this one bit\n                        // (note: null or missing wires give a 0)\n                        // did we save it?\n                        const ocIndex = this.outputComponents.indexOf(to);\n                        if (ocIndex >= 0) {\n                            //console.log(\"Using saved state\", ocIndex, savedState[ocIndex].bits);\n                            // Use the stored state instead of updating immediately\n                            parentBits.push(savedState[ocIndex].bits[wire.toOutput]);\n                        } else {\n                            parentBits.push(to.state.bits[wire.toOutput]);\n                        }\n                    }\n                } else {\n                    // no wire = 0\n                    parentBits.push(false);\n                }\n            }\n            // Update the component's state.\n            component.state.bits = component.evaluate(parentBits);\n        }\n    }\n};\n\nexport default Exploration;\n","// dark.ts\n\n// order of params is important here\nfunction getBitColor(bit: boolean, dark: boolean) {\n    if (dark) {\n        return bit ? \"#00aa00\" : \"#770000\";\n    } else {\n        return bit ? \"#33ff33\" : \"#990000\";\n    }\n}\n\nfunction getApplianceColor(dark: boolean) {\n    return dark ? \"#333333\" : \"#cccccc\";\n}\n\nfunction getStrokeColor(dark: boolean) {\n    return dark ? \"#aaa\" : \"#222\";\n}\n\nfunction getTextColor(dark: boolean) {\n    return dark ? \"#888\" : \"#333\";\n}\n\nexport {getBitColor, getApplianceColor, getStrokeColor, getTextColor};\n","// InputBit.ts\n// Can be clicked to change state\n\nimport Component from './Component';\nimport { getBitColor, getStrokeColor } from './dark';\n\nclass InputBit implements Component {\n    state: {bits: boolean[], active: boolean};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: [];\n    inputWires: [];\n    outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    constructor(x: number, y: number, value: boolean = false, size: number = 20) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            active: value,\n            bits: [value],\n        };\n\n        this.inputSockets = []; // it is input, it needs no input from elsewhere\n        this.inputWires = [];\n        this.outputSockets = [\n            {x: 0, y: 0}\n        ];\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        if (this.state.active !== this.state.bits[0]) {\n            // panic\n            throw new Error(\"[InputBit.render] State does not match bit array\");\n        }\n        ctx.fillStyle = getBitColor(this.state.active, isDark);\n        ctx.strokeStyle = \"2px solid \" + getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.size.x / 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n    };\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        console.log(\"[InputBit] clicked\");\n        this.state.active = !this.state.active;\n        this.state.bits[0] = this.state.active;\n        // bits will be updated when everything is\n        return true;\n    };\n\n    evaluate(_: boolean[]): boolean[] {\n        return [this.state.active];\n    }\n}\n\nexport default InputBit;\n","// OutputBit.ts\n// Need a good way to distinguish from InputBits\n\nimport Component from './Component';\nimport { getBitColor } from './dark';\nimport Wire from './Wire';\n\nclass OutputBit implements Component {\n    state: { bits: boolean[] };\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: Wire[];\n    beforeUpdate: undefined;\n\n    constructor(x: number, y: number, size: number = 20) {\n        this.position = { x: x, y: y };\n        this.size = { x: size, y: size };\n        this.state = { bits: [false] };\n\n        this.inputSockets = [{x: 0, y: 0}];\n        // this might be convenient\n        this.outputSockets = [{x: 0, y: 0}];\n        this.inputWires = [];\n    }\n    render(ctx: CanvasRenderingContext2D, isDark: boolean): void {\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(left, top, this.size.x, this.size.y);\n        ctx.fillStyle = getBitColor(this.state.bits[0], isDark);\n        ctx.fillRect(\n            left + this.size.x * 0.1,\n            top + this.size.y * 0.1,\n            this.size.x * 0.8,\n            this.size.y * 0.8\n        );\n    };\n    onClick: undefined;\n    evaluate(bits: boolean[]): boolean[] {\n        //console.log(bits);\n        //console.log(\"evaluating\", this.position);\n        return bits;\n    };\n}\n\nexport default OutputBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport { getBitColor, getStrokeColor, getTextColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Adder implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        // carry input\n        this.inputSockets.push({\n            x: this.size.x * 3/8,\n            y: 0,\n        });\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = isDark ? \"#333333\" : \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = isDark ? \"#223388\" : \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            /*ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x, this.position.y + socket.y - 15);*/\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = isDark ? \"#666666\" : \"#333333\";\n            ctx.strokeStyle = getBitColor(this.state.bits[i], isDark);\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += ((wire1 && wire1.toComponent.state.bits[wire1.toOutput]) ? 1 : 0) * (1 << i);\n            num2 += ((wire2 && wire2.toComponent.state.bits[wire2.toOutput]) ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = getTextColor(isDark);\n        ctx.fillText(String(num1) + \" + \" + String(num2), this.position.x, this.position.y);\n\n        const carryWire = this.inputWires[2*this.numBits];\n        if (carryWire && carryWire.get()) {\n            ctx.font = Math.round(textSize*0.5) + \"px monospace\";\n            ctx.fillText(\"(+1 carry in)\", this.position.x, this.position.y + this.size.y*0.25);\n        }\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        // add plus the carry\n        const answer = num1 + num2 + (bits[2*this.numBits] ? 1 : 0);\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) > 0;\n        }\n        if (this.position.x === 430 && this.numBits === 4) console.log(\"Adder gives \", answerBits, \"with input\", bits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        let inputs = [];\n        for (let i = 0; i <= 2*this.numBits; i++) {\n            const wire = this.inputWires[i];\n            inputs.push(wire ? wire.get() : false);\n        }\n        console.log(\"num inputs: \", inputs.length);\n        this.state.bits = this.evaluate(inputs);\n    }\n}\n\nexport default Adder;\n","// Wire.ts\n\nimport Component from \"./Component\"\n\ntype WireOptions = {color?: string, darkColor?: string};\n\n// not sure a wire really is a component but it uses them\nclass Wire {\n    // I use \"from\" and \"to\" because \"input\" and \"output\" are ambiguous\n    toComponent: Component;\n    toOutput: number;\n\n    color: string | undefined;\n    darkColor: string | undefined;\n\n    // in case you want the wire to bend\n    waypoints: Array<{x: number, y: number, node?: boolean}> = [];\n\n    constructor(\n        to: Component,\n        toOutput: number,\n        waypoints: {x: number, y: number, node?: boolean}[] = [],\n        options: WireOptions = {}\n    ) {\n        this.toComponent = to;\n        this.toOutput = toOutput;\n        this.waypoints = waypoints;\n\n        this.color = options.color;\n        this.darkColor = options.darkColor;\n    }\n\n    get(): boolean {\n        // empty wire is zero\n        if (!this.toComponent) return false;\n        // coerce undefined to false\n        return this.toComponent.state.bits[this.toOutput] || false;\n    }\n\n    addWaypoint(x: number, y: number) {\n        this.waypoints.push({x: x, y: y});\n    }\n\n    render(ctx: CanvasRenderingContext2D, from: {x: number, y: number}, isDark: boolean) {\n        if (!this.toComponent) return;\n        ctx.save();\n        if (isDark && this.darkColor) {\n            ctx.strokeStyle = this.darkColor;\n        } else if (this.color) {\n            ctx.strokeStyle = this.color;\n        } else {\n            ctx.strokeStyle = (isDark ? \"#606468\" : \"#333\");\n        }\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        for (let i = 0; i < this.waypoints.length; i++) {\n            ctx.lineTo(this.waypoints[i].x, this.waypoints[i].y);\n        }\n        const endOffset = this.toComponent.outputSockets[this.toOutput];\n        ctx.lineTo(endOffset.x + this.toComponent.position.x, endOffset.y + this.toComponent.position.y);\n        ctx.stroke();\n\n        ctx.lineWidth = 6;\n        for (let i = 0; i < this.waypoints.length; i++) {\n            if (this.waypoints[i].node) {\n                ctx.beginPath();\n                ctx.arc(this.waypoints[i].x, this.waypoints[i].y, 1, 0, 2*Math.PI);\n                ctx.stroke();\n            }\n        }\n        ctx.restore();\n    }\n}\n\nexport default Wire;\n","// Gates.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nabstract class Gate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number, rotation: number, bits: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.2*sine),\n                },\n                {\n                    x: size * (0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.2*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.4*sine,\n                y: size * 0.4*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    beforeUpdate: undefined;\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        return false;\n    };\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#ccc\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        this.drawGate(ctx);\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.6) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    }\n\n    abstract evaluate(bits: boolean[]): boolean[];\n}\n\nclass AndGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"&\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.moveTo(this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.lineTo(this.size.x * 0.4, 0);\n        ctx.arc(0, 0, this.size.x * 0.4, 0, Math.PI);\n        ctx.lineTo(-this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] && bits[1]];\n    };\n}\n\nclass OrGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"O\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] || bits[1]];\n    };\n}\n\nclass XorGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"X\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        // do the or's path...\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n        // and the extra thing\n        ctx.beginPath();\n        ctx.moveTo(s * -0.4, s * -0.5);\n        ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n        ctx.stroke();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] !== bits[1]];\n    };\n}\n\nclass Not extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 1);\n    }\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, s * -0.5);\n        ctx.lineTo(0, 0);\n        ctx.stroke();\n        // triangle for the not\n        ctx.beginPath();\n        ctx.moveTo(0, s * 0.2);\n        ctx.lineTo(s * -0.25, s * -0.35);\n        ctx.lineTo(s * 0.25, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        Gate.prototype.render.call(this, ctx, isDark);\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [!bits[0]];\n    };\n}\n\nexport {AndGate, OrGate, XorGate, Not};\n","// Display.ts\n//\n// Given a set of bits, displays its value as a signed or unsigned integer.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\ntype DisplaySigned = (boolean | \"signmag\" | \"1comp\" | \"2comp\");\n\nclass Display implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public signed: DisplaySigned;\n    public components: Component[];\n    beforeUpdate: undefined;\n\n    // I think this only works on components with exactly 1 output\n    constructor(x: number, y: number, components: Component[], signed: DisplaySigned = false, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size * 2,\n            y: size\n        };\n        this.signed = signed;\n        this.components = components;\n\n        this.state = {\n            // unused\n            bits: [],\n        };\n        // unused, it doesn't use wires because they make visual clutter\n        this.inputSockets = [];\n        this.outputSockets = [];\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    getValue() {\n        let totalValue: number = 0;\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            const value = (comp.state.bits[0] ? 1 : 0) << i;\n            // use 2's complement if signed on the last bit\n            if (i == this.components.length - 1) {\n                if (this.signed === \"signmag\") {\n                    // MSB flips sign if on\n                    totalValue *= (value == 0) ? 1 : -1;\n                } else if (this.signed === \"1comp\") {\n                    // 1's complement is equivalent to MSB value -2^n+1\n                    totalValue -= (value ? value - 1 : 0);\n                } else if (this.signed === true || this.signed === \"2comp\") {\n                    // 2's complement is equivalent to MSB value -2^n\n                    totalValue -= value;\n                } else {\n                    // unsigned\n                    totalValue += value;\n                }\n            } else {\n                // all other bits are normal\n                totalValue += value;\n            }\n        }\n        let displayText = String(totalValue);\n        // negative zero\n        if (displayText === \"0\" && this.components[this.components.length - 1].state.bits[0]) {\n            displayText = \"-0\";\n        }\n        return displayText;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#cccccc\";\n        ctx.strokeStyle = isDark ? \"#999\" : \"#000\";\n        ctx.beginPath();\n        ctx.moveTo(left,               top);\n        ctx.lineTo(left + this.size.x, top);\n        ctx.lineTo(left + this.size.x, top + this.size.y);\n        ctx.lineTo(left,               top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // get the state\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.font = Math.round(this.size.y*4/5) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#909396\" : \"#000\";\n\n\n        ctx.fillText(this.getValue(), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(_: boolean[]): boolean[] {\n        return [];\n    }\n}\n\nexport default Display;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 640, 400);\n\n        const adder = new Adder(520, 200, 4);\n        this.components.push(adder);\n\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: bit.position.x + 12.5, y: 120 - i*20},\n                {x: bit.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit);\n\n            const bit2 = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bit2, 0, [\n                {x: bit2.position.x - 12.5, y: 120 - i*20},\n                {x: bit2.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit2);\n        }\n\n        for (let i = 0; i < 5; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 300);\n            output.inputWires.push(new Wire(adder, i, []));\n            this.components.push(output);\n            this.outputComponents.push(output);\n        }\n\n        // colors are nice\n        const blue = {color: \"rgba(96,96,160,1)\"};\n\n        const fakeCarry = new InputBit(370, 200, false, 20);\n        this.components.push(fakeCarry);\n\n        let rightInputA = [];\n        let rightInputB = [];\n        let rightOutput = [];\n        let carryOuts = [];\n        for (let i = 0; i < 4; i++) {\n            const bitA = new InputBit(290 - i*70, 30);\n            rightInputA.push(bitA);\n\n            const bitB = new InputBit(bitA.position.x + 40, 90);\n            rightInputB.push(bitB);\n\n            // full adder\n            const x1 = (bitA.position.x + bitB.position.x)/2;\n            const y1 = bitB.position.y + 60;\n            const and = new AndGate(x1 - 18, y1, 24, 0);\n            and.inputWires.push(new Wire(bitA, 0, []));\n            and.inputWires.push(new Wire(bitB, 0, []));\n            const xor = new XorGate(x1 + 18, y1, 24, 0);\n            xor.inputWires.push(new Wire(bitA, 0, []));\n            xor.inputWires.push(new Wire(bitB, 0, []));\n\n            const outBit = new OutputBit(x1, 300, 20);\n            rightOutput.push(outBit);\n\n            if (i >= 0) {\n                const previous = (i == 0) ? fakeCarry : carryOuts[i-1];\n                // need a second phase of the adder\n                const and2 = new AndGate(x1, y1 + 50, 24, 0);\n                and2.inputWires.push(new Wire(xor, 0, []));\n                and2.inputWires.push(new Wire(previous, 0, [\n                    {x: and2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const xor2 = new XorGate(x1 + 20, y1 + 80, 24, 0);\n                xor2.inputWires.push(new Wire(xor, 0, []));\n                xor2.inputWires.push(new Wire(previous, 0, [\n                    {x: xor2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const or2 = new OrGate(x1 - 15, y1 + 80, 24, 0);\n                or2.inputWires.push(new Wire(and, 0, []));\n                or2.inputWires.push(new Wire(and2, 0, []));\n\n                carryOuts[i] = or2;\n                outBit.inputWires.push(new Wire(xor2, 0, []));\n                this.components.push(or2, and2, xor2);\n            } else {\n                carryOuts[i] = and;\n                outBit.inputWires.push(new Wire(xor, 0, []));\n            }\n\n            this.components.push(and, xor, outBit);\n        }\n\n        const finalCarry = new OutputBit(30, 250, 20);\n        finalCarry.inputWires.push(new Wire(carryOuts[3], 0, []));\n        rightOutput.push(finalCarry);\n\n        this.components.push(finalCarry, ...rightInputA, ...rightInputB);\n\n        const displayA = new Display(35, 30, rightInputA);\n        const displayB = new Display(35, 90, rightInputB);\n        const displayResult = new Display(200, 350, rightOutput, false, 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...rightOutput);\n    }\n}\n\nexport default AdderExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderFailExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 170, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 105 - i*15;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: 105 - i*15},\n                {x: bitA.position.x, y: 105 - i*15},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: 105 - i*15},\n                {x: bitB.position.x, y: 105 - i*15},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"signmag\");\n        const displayB = new Display(365, 30, inputB, \"signmag\");\n        const displayResult = new Display(200, 350, outputBits, \"signmag\", 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default AdderFailExploration;\n","// Text.ts\n//\n// Simple text display\n\nimport Component from './Component';\n\ninterface TextOptions {\n    color?: string | (() => string);\n}\n\nclass Text implements Component {\n    state = {bits: []};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets = [];\n    outputSockets = [];\n    inputWires = [];\n    onClick = undefined;\n    evaluate = () => [];\n    beforeUpdate = undefined;\n\n    text: string | (() => string);\n    options: TextOptions;\n\n    constructor(x: number, y: number, size: number, text: string | (() => string), options: TextOptions = {}) {\n        this.position = {x: x, y: y};\n        this.size = {x: 0, y: size};\n        this.text = text;\n        this.options = options;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n        const message = (typeof this.text === \"function\" ? this.text() : this.text);\n        ctx.font = `${this.size.y}px monospace`;\n        // if function, call it; if string, use it; if undefined, default to #333\n        ctx.fillStyle = (\n            typeof this.options.color === \"function\" ? this.options.color() :\n            typeof this.options.color === \"string\" ? this.options.color :\n            (isDark ? \"#909396\" : \"#333\"));\n        // positioning\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(message, this.position.x, this.position.y);\n        ctx.restore();\n    }\n}\n\nexport default Text;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass BinaryExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30, String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, false, 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default BinaryExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport { getApplianceColor, getStrokeColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass ChoiceGate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size*2,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n        const offset = size * 0.5;\n        this.inputSockets = [\n            {x: -this.size.x * 1/3, y: 0},\n            {x: -offset, y: -this.size.y/2},\n            {x: +offset, y: -this.size.y/2}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.strokeStyle = getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.size.x*1.0, 0);\n        ctx.lineTo(this.size.x*0.67, this.size.y);\n        ctx.lineTo(this.size.x*0.33, this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // red input\n        const sx = this.size.x;\n        ctx.fillStyle = \"rgb(0, 204, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.25, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n        ctx.fillStyle = \"rgb(153, 0, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.75, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] ? bits[1] : bits[2]];\n    }\n}\n\nexport default ChoiceGate;\n","// NotSwitch.ts\n//\n// Switch between NOT gate and simple wire\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\n// NOTE: Make this abstract\n\nabstract class UserGate implements Component {\n    public state: {\n        bits: boolean[],\n        whichGate: number,\n    };\n    public numGates: number;\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    constructor(x: number, y: number, size: number, rotation: number, bits: number, numGates: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        };\n        this.numGates = numGates;\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.15*sine),\n                },\n                {\n                    x: size * (0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.15*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.5*sine,\n                y: size * 0.5*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    onClick(offsetX: number, offsetY: number): boolean {\n        // rotate them\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // the sizes are both the same\n        const realX = (offsetX * cosine + offsetY * sine) / this.size.x;\n        const realY = (offsetY * cosine - offsetY * sine) / this.size.y;\n        if (-0.3 < realY && realY < 0.3) {\n            if (-0.5 < realX && realX < -0.3) {\n                this.state.whichGate = (this.state.whichGate - 1 + this.numGates) % this.numGates;\n                return true;\n            }\n            if (0.3 < realX && realX < 0.5) {\n                this.state.whichGate = (this.state.whichGate + 1) % this.numGates;\n                return true;\n            }\n        }\n        return false;\n    };\n    beforeUpdate: undefined;\n\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#222\" : \"#ddd\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        // this is new\n        const sx = this.size.x, sy = this.size.y;\n        ctx.beginPath();\n        ctx.moveTo(0,        sy * -0.5);\n        ctx.lineTo(sx *  0.4, sy * -0.5);\n        ctx.arcTo (sx *  0.5, sy * -0.5, sx *  0.5, sy * -0.4, sy * 0.1);\n        ctx.lineTo(sx *  0.5, sy *  0.4);\n        ctx.arcTo (sx *  0.5, sy *  0.5, sx *  0.4, sy *  0.5, sy * 0.1);\n        ctx.lineTo(sx * -0.4, sy *  0.5);\n        ctx.arcTo (sx * -0.5, sy *  0.5, sx * -0.5, sy *  0.4, sy * 0.1);\n        ctx.lineTo(sx * -0.5, sy * -0.4);\n        ctx.arcTo (sx * -0.5, sy * -0.5, sx * -0.4, sy * -0.5, sy * 0.1);\n        ctx.closePath();\n\n        ctx.stroke();\n        ctx.fill();\n\n        this.drawGate(ctx);\n\n        // arrow buttons\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.beginPath();\n        ctx.moveTo(sx * 0.5, 0);\n        ctx.lineTo(sx * 0.3, sy * -0.3);\n        ctx.lineTo(sx * 0.3, sy * +0.3);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.moveTo(sx * -0.5, 0);\n        ctx.lineTo(sx * -0.3, sy * -0.3);\n        ctx.lineTo(sx * -0.3, sy * +0.3);\n        ctx.fill();\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.4) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    };\n\n    abstract evaluate(bits: boolean[]): boolean[];\n};\n\n// binary, as in operator, as in takes two inputs (and/or/xor)\nclass BinarySwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 2, 3);\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.6;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, this.size.y * +0.5);\n        const xOffset = this.size.x * 0.15;\n        ctx.moveTo(-xOffset, 0);\n        ctx.lineTo(-xOffset, this.size.y * -0.5);\n        ctx.moveTo(xOffset, 0);\n        ctx.lineTo(xOffset, this.size.y * -0.5);\n        ctx.stroke();\n\n        switch (this.state.whichGate) {\n            case 0: // and\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, -s * 0.4);\n                ctx.lineTo(s * 0.4, 0);\n                ctx.arc(0, 0, s * 0.4, 0, Math.PI);\n                ctx.lineTo(-s * 0.4, -s * 0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n\n                this.symbol = \"&\";\n                break;\n            case 1: // or\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n\n                this.symbol = \"O\";\n                break;\n            case 2: // xor\n                // do the or's path...\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n                // and the extra thing\n                ctx.beginPath();\n                ctx.moveTo(s * -0.4, s * -0.5);\n                ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n                ctx.stroke();\n                this.symbol = \"X\";\n                break;\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        switch (this.state.whichGate) {\n            case 0:\n                return [bits[0] && bits[1]];\n            case 1:\n                return [bits[0] || bits[1]];\n            case 2:\n                return [bits[0] !== bits[1]];\n            default:\n                throw new Error(`Invalid state ${this.state.whichGate}`);\n        }\n    };\n}\n\nclass NotSwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 1, 2);\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        }\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.75;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, this.size.y * -0.5);\n        ctx.lineTo(0, this.size.y * +0.5);\n        ctx.stroke();\n\n        if (this.state.whichGate === 1) {\n            // triangle for the not\n            ctx.beginPath();\n            ctx.moveTo(0, s * 0.2);\n            ctx.lineTo(s * -0.25, s * -0.35);\n            ctx.lineTo(s * 0.25, s * -0.35);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n            ctx.stroke();\n            ctx.fill();\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        return [(this.state.whichGate === 1) ? !bits[0] : bits[0]];\n    }\n}\n\nexport {NotSwitch, BinarySwitch};\n","// AnswerChecker.ts\n//\n// Runs through all possible combinations of given input bits.\n\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Component, { StateObject } from './Component';\nimport Wire from './Wire';\nimport Exploration from './Exploration';\nimport { getApplianceColor } from './dark';\n\n\ntype CheckFunctionType = (arg0: boolean[]) => [boolean];\n\nclass AnswerChecker implements Component {\n    state: StateObject;\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: (Wire | null)[];\n    beforeUpdate: (() => void) | null | undefined;\n\n    timer: number;\n\n    // arrays mean you can have 2 inputs always be the same\n    inputs: (InputBit | InputBit[])[];\n    outputs: OutputBit[];\n    checkFunction: CheckFunctionType;\n    exploration: Exploration;\n\n    constructor(exploration: Exploration, x: number, y: number, inputs: (InputBit | InputBit[])[], outputs: OutputBit[], checkFunction: CheckFunctionType) {\n        this.exploration = exploration;\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: 160,\n            y: 90,\n        };\n        this.inputSockets = [];\n        this.outputSockets = [];\n        this.inputWires = [];\n\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.checkFunction = checkFunction;\n\n        this.state = {\n            bits: [],\n\n            running: false,\n            counter: -1,\n            win: false,\n            lose: false,\n            loseCorrectAnswer: [],\n            loseWrongAnswer: [],\n        };\n\n        this.timer = -1;\n    }\n\n    onClick(offsetX: number, offsetY: number) {\n        if (offsetX >= -60 && offsetX <= 60 && Math.abs(offsetY + 17) <= 20) {\n            this.launch();\n            return true;\n        }\n\n        return false;\n    }\n\n    launch() {\n        if (this.state.running) {\n            clearTimeout(this.timer);\n            this.state.running = false;\n            this.state.counter = -1;\n        } else {\n            this.state.running = true;\n            this.state.win = false;\n            this.state.lose = false;\n            this.state.counter = -1;\n            this.nextTest();\n        }\n    }\n\n    nextTest() {\n        this.state.counter++;\n        console.log(\"testing with\", this.state.counter);\n        if (this.state.counter >= (1 << this.inputs.length)) {\n            this.state.win = true;\n            this.state.running = false;\n            return;\n        }\n\n        // set all the bits\n        let inputBits = [];\n        for (let i = 0; i < this.inputs.length; i++) {\n            const bit = Boolean((this.state.counter >> i) & 1);\n            // it's either a single input or an array\n            let array = this.inputs[i];\n            if (array instanceof InputBit) {\n                array = [array];\n            }\n            for (let j = 0; j < array.length; j++) {\n                array[j].state.bits[0] = bit;\n                array[j].state.active = bit;\n            }\n            inputBits.push(bit);\n        }\n\n        // update the exploration\n        this.exploration.update();\n\n        // check it\n        const outputBits = this.checkFunction(inputBits);\n        for (let i = 0; i < this.outputs.length; i++) {\n            if (outputBits[i] != this.outputs[i].state.bits[0]) {\n                this.state.lose = true;\n                this.state.running = false;\n                this.state.loseCorrectAnswer = outputBits;\n                this.state.loseWrongAnswer = this.outputs.map(x => x.state.bits[0]);\n                return;\n            }\n        }\n\n        const newLocal = this;\n        // if it survived...\n        newLocal.timer = window.setTimeout(this.nextTest.bind(this), 1000);\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // test button\n        if (isDark) {\n            ctx.fillStyle = this.state.running ? \"#228822\" : \"#993333\";\n            ctx.strokeStyle = this.state.running ? \"#006600\" : \"#660000\";\n        } else {\n            ctx.fillStyle = this.state.running ? \"#33cc33\" : \"#cc3333\";\n            ctx.strokeStyle = this.state.running ? \"#009900\" : \"#990000\";\n        }\n        ctx.lineWidth = 6;\n        ctx.beginPath();\n        const y = 28;\n        r = 30;\n        ctx.moveTo(80, y-20);\n        ctx.lineTo(120, y-20);\n        ctx.arc(120, y, 20, -Math.PI/2, Math.PI/2);\n        ctx.lineTo(40, y+20);\n        ctx.arc(40, y, 20, Math.PI/2, 3*Math.PI/2);\n        ctx.closePath();\n\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.fillStyle = isDark ? \"#999\" : \"#000\";\n        ctx.font = \"30px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(this.state.running ? \"STOP\" : \"TEST\", 80, y+9);\n\n        ctx.font = \"20px sans-serif\";\n        let message: string;\n        if (this.state.win) {\n            message = \"Good job!\";\n        } else if (this.state.lose) {\n            message = \"\";\n            ctx.font = \"16px sans-serif\";\n            ctx.fillText(\"Oops! That should\", 80, 67);\n            const correct = this.state.loseCorrectAnswer.map(Number).join(\"\");\n            const wrong = this.state.loseWrongAnswer.map(Number).join(\"\");\n            ctx.fillText(\"be [\" + correct + \"], not [\" + wrong + \"].\", 80, 84);\n        } else if (this.state.running) {\n            message = `${this.state.counter + 1} of ${1 << this.inputs.length}`;\n        } else {\n            message = \"are you ready?\";\n            ctx.font = \"18px sans-serif\";\n        }\n        ctx.fillText(message, 80, 76);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]) {\n        return [];\n    }\n}\n\nexport default AnswerChecker;\n","// ChoiceExploration\n//\n// Exploration that shows how a multiplexer works.\n// I called it a \"choice gate\" because \"multiplexer\" and \"multiplier\" look too similar.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport ChoiceGate from './ChoiceGate';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\nimport { BinarySwitch, NotSwitch } from './UserGates';\nimport AnswerChecker from './AnswerChecker';\n\nclass ChoiceExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputChoice = new InputBit(20, 100, false, 30);\n        const inputIf = new InputBit(90, 70, false, 30);\n        const inputElse = new InputBit(150, 70, false, 30);\n\n\n        const inverterLeft = new NotSwitch(50, 135, 40, 0);\n        this.components.push(inverterLeft);\n        inverterLeft.inputWires.push(new Wire(inputChoice, 0, [\n            {x: inverterLeft.position.x, y: inputChoice.position.y, node: true},\n            {x: inputChoice.position.x, y: inputChoice.position.y},\n        ]));\n\n        const inverterRight = new NotSwitch(125, 135, 40, 0);\n        this.components.push(inverterRight);\n        inverterRight.inputWires.push(new Wire(inputChoice, 0, [\n            {x: inverterRight.position.x, y: inputChoice.position.y},\n            {x: inputChoice.position.x, y: inputChoice.position.y},\n        ]));\n\n        // recursive components are a bit weird\n        const andIf = new BinarySwitch(inverterLeft.position.x + 9, 210, 60, 0);\n        const andElse = new BinarySwitch(141, 210, 60, 0);\n        const or = new BinarySwitch(100, 300, 60, 0);\n\n        andIf.inputWires = [\n            new Wire(inverterLeft, 0, []),\n            new Wire(inputIf, 0, [\n                {x: andIf.position.x + 9, y: 170},\n                {x: inputIf.position.x, y: 170},\n            ]),\n        ];\n        andElse.inputWires = [\n            new Wire(inverterRight, 0, [\n                {x: andElse.position.x - 9, y: 170},\n                {x: inverterRight.position.x, y: 170},\n            ]),\n            new Wire(inputElse, 0, [\n                {x: andElse.position.x + 9, y: 170},\n                {x: inputElse.position.x, y: 170},\n            ]),\n        ];\n        or.inputWires = [\n            new Wire(andIf, 0, []),\n            new Wire(andElse, 0, []),\n        ];\n        this.components.push(andIf, andElse, or);\n        this.components.push(inputChoice, inputIf, inputElse);\n\n        // for people to debug their circuits\n        const helpLeft = new OutputBit(andIf.position.x, andIf.position.y + 35, 10);\n        helpLeft.inputWires.push(new Wire(andIf, 0));\n        const helpRight = new OutputBit(andElse.position.x, andElse.position.y + 35, 10);\n        helpRight.inputWires.push(new Wire(andElse, 0));\n        this.components.push(helpLeft, helpRight);\n        this.outputComponents.push(helpLeft, helpRight);\n\n        const output = new OutputBit(100, 345, 30);\n        output.inputWires.push(new Wire(or, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputChoice2 = new InputBit(240, 160, false, 30);\n        const inputIf2 = new InputBit(280, 120, false, 30);\n        const inputElse2 = new InputBit(320, 120, false, 30);\n        const choice = new ChoiceGate(300, 200, 40);\n        const output2 = new OutputBit(300, 250, 30);\n        choice.inputWires.push(new Wire(inputChoice2, 0, [\n            {x: inputChoice2.position.x, y: choice.position.y},\n        ]));\n        choice.inputWires.push(new Wire(inputIf2, 0));\n        choice.inputWires.push(new Wire(inputElse2, 0));\n        output2.inputWires.push(new Wire(choice, 0));\n\n        this.components.push(choice, output2, inputChoice2, inputIf2, inputElse2);\n        this.outputComponents.push(output2);\n\n        const checker = new AnswerChecker(this, 310, 350, [\n            [inputChoice, inputChoice2],\n            [inputIf, inputIf2],\n            [inputElse, inputElse2]\n        ], [output], function(bits: boolean[]) {\n            return [bits[0] ? bits[1] : bits[2]];\n        });\n        this.components.push(checker);\n        this.outputComponents.push(checker);\n    }\n\n}\n\nexport default ChoiceExploration;\n","// Clock.ts\n//\n// These clocks can have an arbitrary period.\n\nimport Component from \"./Component\";\nimport { getApplianceColor, getBitColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Clock implements Component {\n    public state: {bits: boolean[], clock: number};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    //\n    constructor(x: number, y: number, width: number = 50, height: number = 50) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n        // because .fill() isn't supported?!\n        const bitArray: boolean[] = Array(2).map(_ => false);\n        this.state = {\n            bits: bitArray,\n            clock: -1,\n        };\n        this.numBits = 2;\n        // \"power supply\" or more accurately a way to reset the clock\n        this.inputSockets = [\n            {x: 0, y: -this.size.y/2 - 1},\n        ];\n\n        this.outputSockets = [];\n        const spacing = width / 2;\n        for (let i = 0; i < 2; i++) {\n            this.outputSockets.push({\n                x: (i - 1/2) * spacing,\n                y: this.size.y/2,\n            });\n        }\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // power\n        ctx.translate(w/2, 0); // move origin to top-middle\n        ctx.beginPath();\n        ctx.moveTo(2, -5);\n        ctx.lineTo(2, -1);\n        ctx.lineTo(-2, -1);\n        ctx.lineTo(-2, -5);\n        ctx.stroke();\n\n        // clock\n        ctx.fillStyle = isDark ? \"#555555\" : \"#e0e0e4\";\n        r = Math.min(w/3, h/3);\n        ctx.translate(0, h/2); // move origin to center\n        ctx.beginPath();\n        ctx.arc(0, 0, r, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.stroke();\n\n        // ticks\n        ctx.save();\n        const angle = 2*Math.PI / this.numBits;\n        for (let i = 0; i < this.numBits; i++) {\n            ctx.beginPath();\n            ctx.moveTo(0, -r);\n            ctx.lineTo(0, -r * 0.8 + 1);\n            ctx.stroke();\n\n            ctx.rotate(angle);\n        }\n        ctx.restore();\n\n        // hand\n        ctx.save();\n        ctx.rotate(this.state.clock * angle);\n        ctx.lineWidth *= 3;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(0, r*0.25);\n        ctx.lineTo(0, -r * 0.8);\n        ctx.stroke();\n        ctx.lineWidth *= 5/3;\n        ctx.beginPath();\n        ctx.arc(0, 0, 1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.restore();\n\n        // outputs\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            const socket = this.outputSockets[i];\n            ctx.fillStyle = getBitColor(i == this.state.clock, isDark);\n            ctx.beginPath();\n            ctx.arc(socket.x, socket.y, 8, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // Evaluation: the clock's state is set on\n    evaluate(bits: boolean[]): boolean[] {\n        let result = [];\n        for (let i = 0; i < this.numBits; i++) {\n            result.push(i == this.state.clock);\n        }\n        return result;\n    }\n\n    beforeUpdate() {\n        if (this.inputWires[0]?.get()) {\n            this.state.clock = (this.state.clock + 1) % this.numBits;\n        } else {\n            this.state.clock = -1;\n        }\n    }\n}\n\nexport default Clock;\n","// RegisterExploration\n//\n// Exploration that shows how a register bit works.\n// Most of these (not multipliers and dividers) have the expanded version on the left and a compact version on the right.\n\nimport Component from './Component';\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\n// pass the components and output components arrays\nfunction makeClock(x: number, y: number, components: Component[], outputComponents: Component[]) {\n    const clock = new Clock(x, y, 100, 60);\n    const powerButton = new InputBit(x, y - 100, true, 40);\n    clock.inputWires.push(new Wire(powerButton, 0));\n    components.push(clock, powerButton);\n    for (let i = 0; i < 2; i++) {\n        const output = new OutputBit(x + clock.outputSockets[i].x, y + 100);\n        output.inputWires.push(new Wire(clock, i));\n        components.push(output);\n        outputComponents.push(output);\n    }\n}\n\nclass ClockExploration extends Exploration {\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 300);\n        makeClock(150, 150, this.components, this.outputComponents);\n    }\n\n}\n\nexport default ClockExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport { getBitColor, getStrokeColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass RegisterBit implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        // [0] is the off switch and [1] is the on switch\n        const offset = size * 0.45;\n        this.inputSockets = [\n            {x: -offset, y: -offset},\n            {x:  offset, y: -offset}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getBitColor(this.state.bits[0], isDark);\n        ctx.beginPath();\n        ctx.moveTo(this.size.x*0.5, 0);\n        ctx.lineTo(this.size.x*1.0, this.size.y*0.5);\n        ctx.lineTo(this.size.x*0.5, this.size.y);\n        ctx.lineTo(this.size.x*0.0, this.size.y*0.5);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // load input\n        ctx.fillStyle = isDark ? \"#446666\" : \"#ccffff\";\n        ctx.strokeStyle = getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.25, this.size.y * 0.25, this.size.x * 0.25, 135*Math.PI/180, 315*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();\n        /*ctx.fillStyle = \"#33ff33\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.75, this.size.y * 0.25, this.size.x * 0.25, -135*Math.PI/180, 45*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();*/\n        if (this.inputWires[0] && this.inputWires[0].get()) {\n            ctx.beginPath();\n            ctx.moveTo(this.size.x * 0.75, this.size.y * 0.25);\n            ctx.lineTo(this.size.x * 1.0, 0);\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return bits[0] ? [bits[1]] : this.state.bits;\n    }\n}\n\nexport default RegisterBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport { getApplianceColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Subtractor implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits + 1);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x*0.46, top);\n        ctx.lineTo(left + this.size.x*0.5,  top + this.size.x*0.05);\n        ctx.lineTo(left + this.size.x*0.54, top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x*0.95, this.position.y + socket.y + 10);\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = \"#333333\";\n            ctx.strokeStyle = (this.state.bits[i] ? '#33ff33' : '#990000');\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += (wire1.toComponent.state.bits[wire1.toOutput] ? 1 : 0) * (1 << i);\n            num2 += (wire2.toComponent.state.bits[wire2.toOutput] ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(String(num1) + \" - \" + String(num2), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        const answer = num1 - num2;\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) != 0;\n        }\n        //console.log(answerBits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        this.state.bits = this.evaluate(this.inputWires.map(wire => (wire ? wire.get() : false)));\n    }\n}\n\nexport default Subtractor;\n","// DividerExploration.ts\n\n/*\n\nsteps:\n1. Start with dividend (numerator) in RIGHT half of remainder register\n2. Shift the remainder left\n3. Send the LEFT half in for subtraction\n4. If the result is negative, write it, else keep the remainder as is\n5. Put the opposite of the sign bit on the new 1 position\n6. Go back to step 2, although when the larger clock strikes, record the results (I expect it to be 2*6+3 or 3*6+5 cycles).\n\nnext steps:\n- carry from the subtractor needs to enter the choice gates\n- on purple, we get the subtraction results, and if the sign bit is off, we insert it into the register\n- also on purple, that sign bit needs to shift the LEFT\n\nI think I need to totally reconfigure the remainder part\n\nRemainder register:\n- If power button is off, set to zero (6-12) or numerator (0-5)\n- If power button is on:\n    - on purple we may receive a subtraction, but this only applies to bits 6-12\n    - on green we need to shift left, setting a carry bit. (This will require an additional register.)\n\n\n\n*/\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Subtractor from './Subtractor';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\n\nclass DividerExploration extends Exploration {\n    countdown: Clock;\n    remainderRight: number;\n    remainderSpacing: number;\n    startButton: InputBit;\n    numBits: number;\n\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 750;\n        canvas.height = 600;\n\n        // A lot of the same stuff happens compared to Multiplier...\n\n        const BITS = 5;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(660, 40, false, 50);\n        this.startButton = startButton;\n\n        // probably more user friendly\n        const thisExploration = this;\n        startButton.onClick = function() {\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.active) {\n                thisExploration.resume();\n            }\n            return true;\n        };\n\n        //const startNot = new Not(startButton.position.x - 50, 40, 30, 90);\n        //startNot.inputWires.push(new Wire(startButton, 0));\n        //this.components.push(startNot);\n\n\n        const clockX = startButton.position.x;\n        const clock = new Clock(clockX, 125, 50, 50);\n        clock.inputWires.push(new Wire(startButton, 0));\n        this.components.push(clock);\n\n        // when this clock strikes 2*BITS + 4 it will end the operation\n        // but I add one more to avoid confusion\n        const countdown = new Clock(clockX + 30, 200, 75, 45);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: countdown.position.x, y: 40},\n        ]));\n        this.countdown = countdown;\n\n        const subtractor = new Subtractor(210, 180, BITS, 11*26, 90);\n        //this.outputComponents.push(subtractor);\n\n        // Also not really a register.\n        let remainderRegister = [];\n        this.remainderRight = 585;\n        this.remainderSpacing = 54;\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(this.remainderRight - this.remainderSpacing*i, 460, 20);\n            remainderRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\", darkColor: \"rgba(160, 48, 160)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.25)\", darkColor: \"rgba(160, 40, 160, 0.33)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n        const blue = {color: \"rgba(32, 64, 128, 0.8)\", darkColor: \"rgba(96, 112, 160, 0.8)\"};\n        const blueFaded = {color: \"rgba(32, 64, 128, 0.4)\", darkColor: \"rgba(96, 112, 160, 0.4)\"};\n        //const yellow = {color: \"rgba(160, 160, 0)\"};\n\n        // Input Numbers (N/D). D = divisor, N = dividend\n        let inputN = [];\n        let inputD = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(subtractor.position.x + subtractor.inputSockets[BITS+i].x, 30, false, 22);\n            this.components.push(input);\n            inputN.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(inputN[i].position.x, 95, false, 22);\n            this.components.push(input);\n            inputD.push(input);\n        }\n\n        // Wires from the registers to the subtractor.\n        for (let i = 0; i < BITS; i++) {\n            const d = 2;\n            const bit = remainderRegister[i + BITS];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            const y2 = subtractor.position.y - 70;\n            subtractor.inputWires.push(new Wire(bit, 0, [\n                {x: subtractor.position.x + subtractor.inputSockets[i].x - 0, y: y2 + d*i},\n                {x: 3 + d*i, y: y2 + d*i},\n                {x: 3 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\"}));\n        }\n        // The other subtractor registers (to the divisor)\n        for (let i = 0; i < BITS; i++) {\n            subtractor.inputWires.push(new Wire(inputD[i], 0));\n        }\n\n        // Choice Gates coming out of the subtractor (writes if subtracted).\n        let subtractorChoiceGates = [];\n        for (let i = 0; i < BITS; i++) {\n            //const x = subtractor.position.x + subtractor.outputSockets[i].x;\n            const y = subtractor.position.y + subtractor.outputSockets[0].y; // put them all on the same line\n            // space them out a little\n            const choice = new ChoiceGate(remainderRegister[i+BITS].position.x - 2, y + 60, 14);\n            // choice depends on whether or not the carry bit is positive or negative\n            choice.inputWires.push(new Wire(subtractor, BITS, [\n                {x: choice.position.x - 20, y: choice.position.y},\n                {x: choice.position.x - 20, y: choice.position.y - 25},\n                {x: subtractor.position.x - subtractor.size.x/2, y: choice.position.y - 25},\n                {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y},\n            ], {color: \"#888\"}));\n            // if negative, we just re-use the remainder register\n            const regBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(regBit, 0, [\n                {x: choice.position.x - 7, y: choice.position.y - 17},\n                {x: regBit.position.x + 20, y: choice.position.y - 17},\n                {x: regBit.position.x + 20, y: regBit.position.y},\n            ], purple));\n            // otherwise we use the subtraction\n            const y2 = choice.position.y - 32 - Math.round(Math.abs(i - BITS/2)) * 4\n            choice.inputWires.push(new Wire(subtractor, i, [\n                {x: choice.position.x + 7, y: y2},\n                {x: subtractor.position.x + subtractor.outputSockets[i].x, y: y2}\n            ]));\n            subtractorChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Remainder Register\n        // wires:\n        // (1) the faded purple wires from the clock control\n        // includes many wires\n        // also includes register for holding the quotient input\n        const fullRow = [];\n        for (let i = 0; i <= 2*BITS; i++) {\n            const regBit = remainderRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            // This is the middle (full) row\n            const choice = new ChoiceGate(regBit.position.x + (i < BITS ? 5 : -1), regBit.position.y - 95, 14);\n            // Selection Wire (from clock's NOT)\n            choice.inputWires.push(new Wire(clock, 0, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 40},\n                {x: 580 - 2*i, y: choice.position.y - 50 - 1*i},\n            ], purpleFaded));\n            // Purple action\n            if (i >= BITS && i < 2*BITS) {\n                // Upper Half of the Register: Conditionally connect to the subtractor.\n                choice.inputWires.push(new Wire(subtractorChoiceGates[i - BITS], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: choice.position.x - 7, y: choice.position.y - 25},\n                    {x: regBit.position.x - 18, y: choice.position.y - 25},\n                    {x: regBit.position.x - 18, y: regBit.position.y},\n                ], purple));\n            }\n            // Shifting and the Ones Bit\n            if (i > 0) {\n                choice.inputWires.push(new Wire(remainderRegister[i-1], 0, [\n                    {x: choice.position.x + 7, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: regBit.position.y + 0},\n                ], teal));\n            } else {\n                const holdWrite = new OutputBit(choice.position.x + 7, choice.position.y - 34, 20);\n                const notY = subtractorChoiceGates[0].position.y - 25;\n                const not = new Not(this.remainderRight - this.remainderSpacing, notY, 30, -90);\n                not.inputWires.push(new Wire(subtractor, BITS, [\n                    {x: subtractor.position.x - subtractor.size.x/2, y: notY},\n                    {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y}\n                ], {color: \"#888\"}));\n                // set on green\n                //holdWrite.inputWires.push(new Wire(clockNot, 0, [], teal));\n                // value is negated result of subtraction\n                holdWrite.inputWires.push(new Wire(not, 0, [\n                    {x: holdWrite.position.x, y: not.position.y},\n                ], teal));\n                // maybe?\n                //choice.inputWires[1] = new Wire(holdWrite, 0, [], purple);\n                choice.inputWires.push(new Wire(holdWrite, 0, [], teal));\n                this.components.push(not, holdWrite);\n                this.outputComponents.push(holdWrite);\n            }\n\n            this.components.push(choice);\n            fullRow.push(choice);\n        }\n\n        // Computing the Quotient\n\n        // The second input register that is actually a register.\n        /*let divisorRegister: RegisterBit[] = [];\n        let divisorRegisterChoice = [];\n        for (let i = 0; i < BITS; i++) {\n            const reg = new RegisterBit(inputD[i].position.x - 4, 150, 20);\n            subtractor.inputWires.push(new Wire(reg, 0));\n            divisorRegister.push(reg);\n            this.components.push(reg);\n            this.outputComponents.push(reg);\n        }\n        // Wiring Divisor (denominator) to the Registers\n        for (let i = 0; i < BITS; i++) {\n            const reg = divisorRegister[i];\n            const or = new OrGate(reg.position.x - 9, reg.position.y - 25, 20, 0);\n            const choice = new ChoiceGate(reg.position.x + 9, reg.position.y - 55, 12);\n            reg.inputWires.push(new Wire(or, 0), new Wire(choice, 0));\n\n            const wirePath = [\n                {x: reg.position.x - 13, y: choice.position.y},\n                {x: reg.position.x - 13, y: startNot.position.y},\n            ];\n            or.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n            or.inputWires.push(new Wire(clockNot, 0, [\n                {x: or.position.x + 10, y: or.position.y - 18 - i/2},\n                {x: clockNot.position.x - 40, y: or.position.y - 18 - i},\n            ], tealFaded));\n\n            // choice gate is [0] ? [1] : [2]\n            // the selection comes first\n            choice.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n\n            // If the clock is off, the registers need to use the input bits\n            choice.inputWires.push(new Wire(inputD[i], 0));\n            // Else, move up\n            choice.inputWires.push(new Wire(divisorRegister[i+1] || null, 0, [\n                {x: reg.position.x + 15, y: choice.position.y - 15},\n                {x: reg.position.x - 22, y: choice.position.y - 15},\n                {x: reg.position.x - 22, y: reg.position.y + 10},\n            ]));\n\n            this.components.push(or, choice);\n        }*/\n\n        // Wiring Dividend to seed the remainder register\n        // (blue wires)\n        const blueRightEdge = this.remainderRight + 33 + 2*BITS;\n        let dividendChoice: ChoiceGate[] = [];\n        for (let i = 0; i < BITS; i++) {\n            const regBit = remainderRegister[i];\n            const inBit = inputN[i];\n\n            // This is the one close to the lowest 6 registers\n            const choice = new ChoiceGate(regBit.position.x + 3, regBit.position.y - 50, 12);\n            // Wire coming from the start button\n            choice.inputWires.push(new Wire(startButton, 0, [\n                {x: choice.position.x - 15, y: choice.position.y},\n                {x: choice.position.x - 15, y: choice.position.y + 15, node: true},\n                {x: blueRightEdge, y: choice.position.y + 15},\n                {x: blueRightEdge, y: startButton.position.y + (startButton.position.x - blueRightEdge)},\n            ], blue));\n\n            // If power is on, make it come from the teal/purple stuff\n            choice.inputWires.push(new Wire(fullRow[i], 0));\n\n            // Otherwise, set it to the input\n            const d = 2;\n            const y1 = fullRow[0].position.y - 90 - d*BITS;\n            const y2 = inBit.position.y + 30;\n            const x1 = this.remainderRight + 24 + d*BITS;\n            choice.inputWires.push(new Wire(inBit, 0, [\n                {x: choice.position.x + 6, y: choice.position.y - 10 - d*i},\n                {x: x1 - d*i, y: choice.position.y - 10 - d*i},\n                {x: x1 - d*i, y: y1 + d*i},\n                {x: clockX - 90 - d*i, y: y1 + d*i},\n                {x: clockX - 90 - d*i, y: y2 + d*i},\n                {x: inBit.position.x, y: y2 + d*i},\n            ], blueFaded));\n\n            this.components.push(choice);\n            dividendChoice.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Clearing the \"remainder\" (heh heh) of the register\n        // (blue wires)\n        for (let i = 0; i <= BITS; i++) {\n            const regBit = remainderRegister[i + BITS];\n            const and = new AndGate(regBit.position.x, regBit.position.y - 50, 24, 0);\n            // similar to above, use the full row if the power is on\n            and.inputWires.push(new Wire(fullRow[i+BITS], 0));\n            and.inputWires.push(new Wire(startButton, 0, [\n                {x: and.position.x + 5, y: and.position.y - 20},\n                {x: and.position.x + 14, y: and.position.y - 20},\n                {x: and.position.x + 14, y: and.position.y + 15, node: i < BITS},\n                {x: blueRightEdge, y: and.position.y + 15},\n                {x: blueRightEdge, y: startButton.position.y + (startButton.position.x - blueRightEdge)},\n            ], blue));\n\n            this.components.push(and);\n            regBit.inputWires.push(new Wire(and, 0));\n        }\n\n        // Control Wire from the final register bit to the subtractor's output\n        /*const regLSB = divisorRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = subtractorChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 282, y: choice.position.y - 20},\n                {x: 282, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"rgb(127, 127, 127)\"}));\n            choice.inputWires.unshift(null);\n\n            // Else wire\n            const outBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 5, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: outBit.position.y - 19},\n            ], purpleFaded));\n        }*/\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i < 2*BITS; i++) {\n            const offset = (i < BITS ? 5 : -10);\n            const from = remainderRegister[i + (i >= BITS ? 1 : 0)];\n            const bit = new RegisterBit(from.position.x + offset, 580, 25);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 14th clock cycle\n            const x1 = countdown.position.x + countdown.outputSockets[1].x;\n            bit.inputWires.push(new Wire(countdown, 0, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: x1, y: bit.position.y - 30},\n                {x: x1, y: countdown.position.y + 40},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const diagonal = 15;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayN = new Display(inputN[0].position.x + 54, inputN[0].position.y, inputN, false, 36);\n        const displayD = new Display(inputD[0].position.x + 54, inputD[0].position.y, inputD, false, 36);\n        const displayQ = new Display(557, 540, finalAnswer.slice(0, BITS), false, 30);\n        const displayR = new Display(200, 540, finalAnswer.slice(BITS, 2*BITS), false, 30);\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(subtractor, countdown, startButton, displayN, displayD, displayQ, displayR);\n    }\n\n    drawRemainderGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.remainderRight - left*this.remainderSpacing) - 15;\n        const x2 = (this.remainderRight - right*this.remainderSpacing) + 15;\n        const y = 480;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.33)\";\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n    }\n\n    afterRender = () => {\n        // display the quotient\n        const ctx = this.context;\n        ctx.save();\n\n        // get the clock cycle\n        const cycle = this.countdown.state.clock;\n        if (cycle >= 0 && cycle < 2*this.numBits+3) {\n            const n = (cycle+1) >> 1;\n            this.drawRemainderGuide(n + 5, n + 0, \"#33c\", \"Remainder\");\n\n            if (n > 1) {\n                this.drawRemainderGuide(n-2, Math.max(n-7, 0), \"#990\", \"Quotient\");\n            }\n        }\n\n        ctx.restore();\n\n        // not sure where to put this\n        if (cycle == 2 * this.numBits + 3) {\n            this.startButton.state.active = false;\n            this.startButton.state.bits = [false];\n        }\n    }\n}\n\nexport default DividerExploration;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate } from './Gates';\n\nclass FullAdderExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const inputA = new InputBit(80, 50, false, 30);\n        const inputB = new InputBit(200, 50, false, 30);\n        const inputC = new InputBit(300, 200, false, 30);\n        const output1 = new OutputBit(200, 340, 30);\n        const output2 = new OutputBit(100, 340, 30);\n\n        const and1 = new AndGate(inputA.position.x + 10, 140, 50, 0);\n        and1.inputWires.push(new Wire(inputA, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 40},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 140, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 40},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const xor2 = new XorGate(200, 280, 50, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 10, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 230, 50, 0);\n        and2.inputWires.push(new Wire(xor1, 0, [\n            {x: and2.position.x - 10, y: 180},\n            {x: xor1.position.x, y: 180, node: true},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 10, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 50, 0);\n        or2.inputWires.push(new Wire(and1, 0, [\n            {x: or2.position.x - 10, y: and1.position.y + 30},\n            {x: and1.position.x, y: and1.position.y + 30},\n        ]));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 10, y: (and2.position.y + or2.position.y + 12)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 12)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 27, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3);\n\n        // Number Display\n        const displayResult = new Display(320, 340, [output1, output2], false, 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\", { color: '#333' });\n        const text2 = new Text(output2.position.x, 375, 30, \"2\", { color: '#333' });\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3);\n    }\n}\n\nexport default FullAdderExploration1;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate, Not } from './Gates';\n\nclass FullSubtractorExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const inputA = new InputBit(80, 50, false, 30);\n        const inputB = new InputBit(200, 50, false, 30);\n        const inputC = new InputBit(300, 200, false, 30);\n        const output1 = new OutputBit(200, 340, 30);\n        const output2 = new OutputBit(100, 340, 30);\n\n        const notA1 = new Not(inputA.position.x, inputA.position.y + 40, 30, 0);\n        notA1.inputWires.push(new Wire(inputA, 0));\n\n        const and1 = new AndGate(inputA.position.x + 10, 140, 50, 0);\n        and1.inputWires.push(new Wire(notA1, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 40},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 140, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 40},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const notX1 = new Not(xor1.position.x - 30, 180, 30, 90);\n        notX1.inputWires.push(new Wire(xor1, 0, [\n            {x: xor1.position.x, y: notX1.position.y, node: true},\n        ]));\n\n        const notX1Aid = new OutputBit(notX1.position.x - 25, notX1.position.y, 12);\n        notX1Aid.inputWires.push(new Wire(notX1, 0));\n\n        const xor2 = new XorGate(200, 280, 50, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 10, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 230, 50, 0);\n        and2.inputWires.push(new Wire(notX1, 0, [\n            {x: and2.position.x - 10, y: notX1.position.y},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 10, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 50, 0);\n        or2.inputWires.push(new Wire(and1, 0, [\n            {x: or2.position.x - 10, y: and1.position.y + 30},\n            {x: and1.position.x, y: and1.position.y + 30},\n        ]));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 10, y: (and2.position.y + or2.position.y + 12)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 12)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, notA1, notX1, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 27, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3, notX1Aid);\n\n        // Number Display\n        const displayResult = new Display(320, 340, [output1, output2], \"2comp\", 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\");\n        const text2 = new Text(output2.position.x, 375, 30, \"Borrow\");\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3, notX1Aid);\n    }\n}\n\nexport default FullSubtractorExploration1;\n","// GateExploration\n//\n// Basic exploration of AND, OR, XOR, and NOT gates\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass GateExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const types = [AndGate, OrGate, XorGate];\n        for (let i = 0; i < 3; i++) {\n            const bit1 = new InputBit(i*120 + 60, 40, false, 30);\n            const bit2 = new InputBit(i*120 + 120, 40, false, 30);\n            const gate = new types[i](i*120 + 90, 120, 60, 0);\n            gate.inputWires.push(new Wire(bit1, 0, [\n                {x: gate.position.x - 12, y: gate.position.y - 40},\n                {x: bit1.position.x, y: gate.position.y - 40},\n            ]));\n            gate.inputWires.push(new Wire(bit2, 0, [\n                {x: gate.position.x + 12, y: gate.position.y - 40},\n                {x: bit2.position.x, y: gate.position.y - 40},\n            ]));\n            const out = new OutputBit(i*120 + 90, 200, 30);\n            out.inputWires.push(new Wire(gate, 0));\n            this.components.push(gate, bit1, bit2, out);\n            this.outputComponents.push(out);\n        }\n\n        const notInput = new InputBit(420, 40, false, 30);\n        const notGate = new Not(420, 120, 60, 0);\n        notGate.inputWires.push(new Wire(notInput, 0));\n        const notOutput = new OutputBit(420, 200, 30);\n        notOutput.inputWires.push(new Wire(notGate, 0));\n        this.components.push(notGate, notInput, notOutput);\n        this.outputComponents.push(notOutput);\n    }\n\n}\n\nexport default GateExploration;\n","// HalfAdderCheat.ts\n//\n// The finished product with no accompanying circuit.\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass HalfAdderCheat extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 300);\n\n        const inputA = new InputBit(100, 40, false, 30);\n        const inputB = new InputBit(200, 40, false, 30);\n        const output1 = new OutputBit(150, 240, 30);\n        const output2 = new OutputBit(75, 240, 30);\n        const adder = new Adder(150, 150, 1, 200, 100);\n        this.components.push(adder, inputA, inputB, output1, output2);\n        adder.inputWires.push(new Wire(inputA, 0));\n        adder.inputWires.push(new Wire(inputB, 0));\n        output1.inputWires.push(new Wire(adder, 0));\n        output2.inputWires.push(new Wire(adder, 1));\n\n        const displayResult = new Display(240, 250, [output1, output2], false, 40);\n        this.components.push(displayResult);\n        this.outputComponents.push(output1, output2);\n\n        const text1 = new Text(150, 275, 24, \"1\", { color: '#333' });\n        const text2 = new Text(75, 275, 24, \"2\", { color: '#333' });\n        this.components.push(text1, text2);\n    }\n}\n\nexport default HalfAdderCheat;\n","// MakeALUExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\nimport { NotSwitch, BinarySwitch } from './UserGates';\nimport Text from './Text';\n\nclass MakeALUExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 500, 500);\n\n        const adder = new Adder(180, 280, 4, 288, 120);\n        this.components.push(adder);\n\n        // need this up here...\n        const operBit = new InputBit(460, 70, true, 40);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(30 + 36*i, 60, false, 25);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[3-i].x, y: bit.position.y + 120 - 25*i},\n                {x: bit.position.x, y: bit.position.y + 120 - 25*i},\n            ]));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            // right side is more complicated\n            const bit2 = new InputBit(380 - 60*i, 60, false, 25);\n            const gate = new BinarySwitch(bit2.position.x + 6, bit2.position.y + 70, 40, 0);\n            gate.inputWires.push(new Wire(bit2, 0));\n            gate.inputWires.push(new Wire(operBit, 0, [\n                {x: gate.position.x + 6, y: gate.position.y - 30, node: (i !== 3)},\n                {x: operBit.position.x, y: gate.position.y - 30, node: true},\n            ]));\n            adder.inputWires.push(new Wire(gate, 0, [\n                {x: adder.position.x + adder.inputSockets[4+i].x, y: gate.position.y + 70 - 10*i},\n                {x: gate.position.x, y: gate.position.y + 70 - 10*i},\n            ]));\n            this.components.push(gate, bit2);\n            inputB.push(bit2);\n        }\n\n        // operation control\n        const operSwitch = new NotSwitch(operBit.position.x, operBit.position.y + 100, 50, 0);\n        const operText1 = new Text(operBit.position.x, operBit.position.y - 50, 20, \"OPER\");\n        const operText2 = new Text(operBit.position.x, operBit.position.y - 32, 20, function() {\n            return (operBit.state.bits[0]) ? \"(ADD)\" : \"(SUB)\";\n        });\n        operSwitch.inputWires.push(new Wire(operBit, 0));\n        adder.inputWires.push(new Wire(operSwitch, 0, [\n            {x: operSwitch.position.x, y: adder.position.y},\n        ]));\n        this.components.push(operSwitch, operBit, operText1, operText2);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 410, 25);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        // Displays\n        const displayA = new Display((inputA[1].position.x + inputA[2].position.x)/2, 25, inputA, true);\n        const displayB = new Display((inputB[1].position.x + inputB[2].position.x)/2, 25, inputB, true);\n        this.components.push(displayA, displayB, new Display(adder.position.x, 460, outputBits, true, 50));\n\n        // Error\n        const calc1 = new Text(370, 430, 30, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const op = operBit.state.bits[0];\n            const raw = op ? (a+b) : (a-b);\n            const overflow = ((raw + 24) % 16) - 8;\n            return `Actual: ${overflow}` + (raw === overflow ? \"\" : \"*\");\n        });\n        const overflowNote = new Text(370, 460, 20, \"* means overflow\");\n        this.components.push(calc1, overflowNote);\n    }\n}\n\nexport default MakeALUExploration;\n","// MultiplierExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, OrGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\nimport Text from './Text';\n\nclass MultiplierExploration extends Exploration {\n    countdown: Clock;\n    regSpacing: number;\n    regRight: number;\n    productRegister: OutputBit[];\n    numBits: number;\n    startButton: InputBit;\n\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 750;\n        canvas.height = 600;\n\n        const BITS = 6;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(710, 60, false, 50);\n        this.startButton = startButton;\n        const startText = new Text(startButton.position.x, startButton.position.y - 35, 24, function() {\n            return (startButton.state.bits[0]) ? \"ABORT\" : \"START\";\n        });\n        this.components.push(startText);\n\n        const thisExploration = this;\n        startButton.onClick = function() {\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.active) {\n                thisExploration.resume();\n            }\n            return true;\n        };\n\n        const startNot = new Not(startButton.position.x - 60, 40, 30, 90);\n        startNot.inputWires.push(new Wire(startButton, 0));\n        this.components.push(startNot);\n\n        const clockX = startButton.position.x - 5;\n\n        const clockAnd = new AndGate(clockX, 110, 25, 0);\n        const clockNot = new Not(clockX, 150, 25, 0);\n        const clockBit = new OutputBit(clockX, 200);\n\n        clockAnd.inputWires.push(new Wire(clockNot, 0, [\n            {x: clockX - 5, y: startButton.position.y + 30},\n            {x: clockX - 15, y: startButton.position.y + 30},\n            {x: clockX - 15, y: clockNot.position.y + 30},\n            {x: clockX, y: clockNot.position.y + 30}\n        ]));\n        clockAnd.inputWires.push(new Wire(startButton, 0));\n        clockBit.inputWires.push(new Wire(clockNot, 0));\n        clockNot.inputWires.push(new Wire(clockAnd, 0));\n        this.components.push(clockAnd, clockNot, clockBit);\n        this.outputComponents.push(clockBit);\n\n        // ironic that I called the above a \"clock\"\n        // when the clock strikes 2*BITS + 1 it will end the operation\n        const countdown = new Clock(clockX - 20, 260, 80, 50);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: clockX - 30, y: countdown.position.y - 40},\n            {x: clockX - 30, y: startButton.position.y},\n        ]));\n        this.countdown = countdown;\n\n        const adder = new Adder(180, 185, BITS, 270, 100);\n        //this.outputComponents.push(adder);\n\n        // The \"Register\" that really isn't.\n        // The Add and Shift steps should be successfully separated...\n        let productRegister = [];\n        this.regRight = 660;\n        this.regSpacing = 50;\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(this.regRight - this.regSpacing*i, 400, 20);\n            productRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\", darkColor: \"rgb(160, 80, 160)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.4)\", darkColor: \"rgba(160, 80, 160, 0.6)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n\n        // Wires from the registers to the adder.\n        for (let i = 0; i < BITS; i++) {\n            const d = 2;\n            const bit = productRegister[i + BITS];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            adder.inputWires.push(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[i].x, y: 110 + d*i},\n                {x: 10 + d*i, y: 110 + d*i},\n                {x: 10 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\", darkColor: \"rgba(160, 80, 160, 0.67)\"}));\n        }\n\n        // And Gates coming out of the adder (for the clock).\n        let adderChoiceGates = [];\n        for (let i = 0; i <= BITS; i++) {\n            // and gate\n            //const x = adder.position.x + adder.outputSockets[i].x;\n            const y = adder.position.y + adder.outputSockets[0].y; // put them all on the same line\n            // space them a bit\n            const choice = new ChoiceGate(productRegister[i+BITS].position.x + 7, y + 50, 10);\n            // this will be input 0 temporarily but we will unshift later\n            choice.inputWires.push(new Wire(adder, i));\n            adderChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Multiplication Register\n        for (let i = 0; i < 2*BITS + 1; i++) {\n            const regBit = productRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            const choice = new ChoiceGate(regBit.position.x, regBit.position.y - 40, 14);\n            // Selection Wire (from clock's NOT)\n            choice.inputWires.push(new Wire(clockNot, 0, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 38 - 2*i},\n                {x: 630 - 2*i, y: choice.position.y - 38 - 2*i},\n            ], tealFaded));\n            // Shifting\n            if (i < 2*BITS) {\n                choice.inputWires.push(new Wire(productRegister[i+1], 0, [\n                    {x: regBit.position.x - 7, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: regBit.position.y},\n                ], teal));\n            } else {\n                choice.inputWires.push(null);\n            }\n            if (i >= BITS) {\n                // Upper Half of the Register: Conditionally connect to the adder.\n                choice.inputWires.push(new Wire(adderChoiceGates[i - BITS], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: regBit.position.x + 7, y: choice.position.y - 20},\n                    {x: regBit.position.x + 20, y: choice.position.y - 20},\n                    {x: regBit.position.x + 20, y: regBit.position.y},\n                ], purple));\n            }\n\n            this.components.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Input Numbers (A and B).\n        let inputA = [];\n        let inputB = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(320 - i*30, 60, false, 25);\n            this.components.push(input);\n            adder.inputWires.push(new Wire(input, 0));\n            inputA.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(630 - i*50, 60, false, 25);\n            this.components.push(input);\n            inputB.push(input);\n        }\n\n        // The second input register that is actually a register.\n        let multiplierRegister: RegisterBit[] = [];\n        let multiplierRegisterChoice = [];\n        for (let i = 0; i < BITS; i++) {\n            const reg = new RegisterBit(inputB[i].position.x - 4, 170, 20);\n            multiplierRegister.push(reg);\n            this.components.push(reg);\n            this.outputComponents.push(reg);\n        }\n        // Wiring to the Registers\n        for (let i = 0; i < BITS; i++) {\n            const reg = multiplierRegister[i];\n            const or = new OrGate(reg.position.x - 9, reg.position.y - 25, 20, 0);\n            const choice = new ChoiceGate(reg.position.x + 9, reg.position.y - 60, 12);\n            reg.inputWires.push(new Wire(or, 0), new Wire(choice, 0));\n\n            const wirePath = [\n                {x: reg.position.x - 13, y: choice.position.y, node: true},\n                {x: reg.position.x - 13, y: startNot.position.y, node: (i < BITS-1)},\n            ];\n            or.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n            or.inputWires.push(new Wire(clockNot, 0, [\n                {x: or.position.x + 10, y: or.position.y - 18 - i/2},\n                {x: clockNot.position.x - 40, y: or.position.y - 18 - i},\n            ], tealFaded));\n\n            // choice gate is [0] ? [1] : [2]\n            // the selection comes first\n            choice.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n\n            // If the clock is off, the registers need to use the input bits\n            choice.inputWires.push(new Wire(inputB[i], 0));\n            // Otherwise hold\n            choice.inputWires.push(new Wire(multiplierRegister[i+1] || null, 0, [\n                {x: reg.position.x + 15, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y + 10},\n            ]));\n\n            this.components.push(or, choice);\n        }\n\n        // Control Wire from the final register bit to the adder's output\n        const regLSB = multiplierRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = adderChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 400, y: choice.position.y - 20},\n                {x: 400, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"#7f7f7f\", darkColor: \"#555\"}));\n\n            // Else wire\n            const outBit = productRegister[i + BITS];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 4, y: choice.position.y - 10},\n                {x: choice.position.x + 11, y: choice.position.y - 10},\n                {x: outBit.position.x + 18, y: 305 + 2*i},\n                {x: outBit.position.x + 18, y: outBit.position.y - 18},\n            ], purpleFaded));\n        }\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i <= 2*BITS; i++) {\n            const offset = 5;\n            const bit = new RegisterBit(productRegister[i].position.x + offset, 510, 30);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 12th clock cycle\n            bit.inputWires.push(new Wire(countdown, 1, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: clockX + 20, y: bit.position.y - 30},\n                {x: clockX + 20, y: countdown.position.y + 40},\n                {x: countdown.position.x + countdown.outputSockets[1].x, y: countdown.position.y + 40},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const from = productRegister[i];\n            const diagonal = 16;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayA = new Display(245, 25, inputA, false, 30);\n        const displayB = new Display(510, 20, inputB, false, 30);\n        const displayEnd = new Display(375, 565, finalAnswer, false, 60);\n        displayEnd.size.x = 2*displayEnd.size.y;\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(adder, countdown, startButton, displayA, displayB, displayEnd);\n        this.productRegister = productRegister;\n    }\n\n    drawProductGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.regRight - left*this.regSpacing) - 15;\n        const x2 = (this.regRight - right*this.regSpacing) + 15;\n        const y = 435;\n        ctx.save();\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.75)\";\n        ctx.lineWidth = 16;\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n        ctx.restore();\n    }\n\n    afterRender = () => {\n        const ctx = this.context;\n\n        const cycle = this.countdown.state.clock;\n        if (cycle >= 0) {\n            const n = (cycle + 1) >> 1;\n            if (n <= 5) {\n                ctx.fillStyle = \"rgba(255,255,255,0.75)\";\n                const west = (this.regRight - this.regSpacing * (5-n)) - 20;\n                const north = 340, south = 480;\n                const east = (this.regRight) + 22;\n                ctx.beginPath();\n                ctx.moveTo(west, north);\n                ctx.lineTo(east, north);\n                ctx.lineTo(east, south);\n                ctx.lineTo(west, south);\n                ctx.fill();\n            }\n\n            if (n <= 6) {\n                // product value\n                let productValue = 0;\n                for (let i = 0; i < this.numBits + n; i++) {\n                    const bit = this.productRegister[i + (6-n)];\n                    productValue += Number(bit.state.bits[0]) * (1 << i);\n                }\n\n                this.drawProductGuide(2 * this.numBits, this.numBits - n, \"#33c\", `Product (${productValue})`);\n            }\n        }\n\n        if (cycle == 2*this.numBits + 1) {\n            this.startButton.state.active = false;\n            this.startButton.state.bits = [false];\n        }\n    }\n}\n\nexport default MultiplierExploration;\n","// MultiplierNaiveExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass MultiplierNaiveExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 600, 600);\n\n        const blue = {color: \"rgba(32,32,128,0.75)\"};\n        const teal = {color: \"rgba(96,160,160,1)\"};\n\n        const numBits = 4;\n\n        let inputA = [], inputB = [], outputBits = [];\n\n        for (let i = 0; i < numBits; i++) {\n            const bitA = new InputBit(140 - 35*i, 30, false, 30);\n            inputA.push(bitA);\n\n            const bitB = new InputBit(465 - 35*i, 30, false, 30);\n            inputB.push(bitB);\n        }\n\n        let adders = [];\n        for (let i = 0; i < numBits; i++) {\n            const adder = new Adder(430 - 75*i, 170 + 105*i, numBits, 200, 60);\n            adders.push(adder);\n\n            for (let j = 0; j < numBits; j++) {\n                const and = new AndGate(\n                    adder.position.x + adder.inputSockets[j].x,\n                    adder.position.y - adder.size.y/2 - 20,\n                    20,\n                    0\n                );\n                and.inputWires.push(new Wire(inputA[i], 0, [\n                    {x: and.position.x - 6, y: and.position.y - 20},\n                    {x: inputA[i].position.x, y: and.position.y - 20},\n                ], blue));\n\n                const d1 = 24 + 3*i - (8+i)*j;\n                and.inputWires.push(new Wire(inputB[j], 0, (i > 0) ? [\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: and.position.x + 4 - d1, y: and.position.y - 28 - d1},\n                    {x: and.position.x + 4 - d1, y: inputB[j].position.y + 30 + 8*j, node: true},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ] : [\n                    // don't need the bending\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ], teal));\n                this.components.push(and);\n                adder.inputWires.push(new Wire(and, 0));\n            }\n\n            if (i > 0) {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(new Wire(adders[i-1], j + 1));\n                }\n            } else {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(null);\n                }\n            }\n        }\n\n\n        for (let i = 0; i < 2*numBits; i++) {\n            const outBit = new OutputBit(440 - 50*i, 570, 25);\n            if (i < numBits) {\n                outBit.inputWires.push(new Wire(adders[i], 0));\n            } else {\n                outBit.inputWires.push(new Wire(adders[numBits-1], i - numBits + 1));\n            }\n            outputBits.push(outBit);\n        }\n\n\n        const displayA = new Display(200, 30, inputA, false, 32);\n        const displayB = new Display(525, 30, inputB, false, 32);\n        const displayOutput = new Display(550, 570, outputBits, false, 40);\n        this.components.push(...outputBits, ...adders, ...inputA, ...inputB);\n        this.components.push(displayA, displayB, displayOutput);\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default MultiplierNaiveExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass OnesComplementExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"1comp\");\n        const displayB = new Display(365, 30, inputB, \"1comp\");\n        const displayResult = new Display(200, 350, outputBits, \"1comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default OnesComplementExploration;\n","// RegisterExploration\n//\n// Exploration that shows how a register bit works.\n// Most of these (not multipliers and dividers) have the expanded version on the left and a compact version on the right.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport RegisterBit from './RegisterBit';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\n\nclass RegisterExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputSet = new InputBit(40, 80, false, 30);\n        this.components.push(inputSet);\n\n        const inputWhat = new InputBit(140, 80, false, 30);\n        this.components.push(inputWhat);\n\n        const choice = new ChoiceGate(100, 200, 50);\n        this.components.push(choice);\n\n        choice.inputWires.push(new Wire(inputSet, 0, [\n            {x: inputSet.position.x, y: choice.position.y},\n        ]));\n        choice.inputWires.push(new Wire(inputWhat, 0, [\n            {x: choice.position.x + choice.inputSockets[1].x, y: choice.position.y - 70},\n            {x: inputWhat.position.x, y: choice.position.y - 70},\n        ]));\n        choice.inputWires.push(new Wire(choice, 0, [\n            {x: choice.position.x + choice.inputSockets[2].x, y: choice.position.y - 50},\n            {x: choice.position.x + 60, y: choice.position.y - 50},\n            {x: choice.position.x + 60, y: choice.position.y + 50},\n            {x: choice.position.x, y: choice.position.y + 50, node: true},\n        ]))\n\n\n        const output = new OutputBit(100, 320, 32);\n        output.inputWires.push(new Wire(choice, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputOff2 = new InputBit(250, 150, false, 32);\n        const inputOn2 = new InputBit(350, 150, false, 32);\n        const register = new RegisterBit(300, 200, 40);\n        const output2 = new OutputBit(300, 250);\n        register.inputWires.push(new Wire(inputOff2, 0));\n        register.inputWires.push(new Wire(inputOn2, 0));\n        output2.inputWires.push(new Wire(register, 0));\n\n        this.components.push(register, output2, inputOn2, inputOff2);\n        this.outputComponents.push(output2);\n    }\n\n}\n\nexport default RegisterExploration;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass SignMagnitudeExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30,\n                i == 5 ? \"±\" : String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, \"signmag\", 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default SignMagnitudeExploration;\n","// adderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\n\nclass SubtractorExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const adder = new Adder(200, 200, 4, 216);\n        this.components.push(adder);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x + adder.inputSockets[3-i].x, 60);\n            adder.inputWires.unshift(new Wire(bit, 0));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            const bit2 = new InputBit(adder.position.x + adder.inputSockets[4+i].x, 60);\n            const not = new Not(bit2.position.x, bit2.position.y + 50, 30, 0);\n            not.inputWires.push(new Wire(bit2, 0));\n            adder.inputWires.push(new Wire(not, 0));\n            this.components.push(bit2, not);\n            inputB.push(bit2);\n        }\n        const floatingNot = new Not(320, 200, 30, 90);\n        adder.inputWires.push(new Wire(floatingNot, 0));\n        this.components.push(floatingNot);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 310);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        this.components.push(new Display(150, 25, inputA, true));\n        this.components.push(new Display(250, 25, inputB, true));\n        this.components.push(new Display(adder.position.x, 360, outputBits, true, 40));\n\n    }\n}\n\nexport default SubtractorExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass TwosCompAdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"2comp\");\n        const displayB = new Display(365, 30, inputB, \"2comp\");\n        const displayResult = new Display(200, 350, outputBits, \"2comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default TwosCompAdderExploration;\n","\nimport Exploration from './Exploration';\n\n// Alphabetized because... idunno\nimport AdderExploration from './AdderExploration';\nimport AdderFailExploration from './AdderFailExploration';\nimport BinaryExploration from './BinaryExploration';\nimport ChoiceExploration from './ChoiceExploration';\nimport ClockExploration from './ClockExploration';\nimport DividerExploration from './DividerExploration';\nimport FullAdderExploration1 from './FullAdderGates';\nimport FullSubtractorExploration1 from './FullSubtractorGates';\nimport GateExploration from './GateExploration';\nimport HalfAdderBuild from './HalfAdderBuild';\nimport MakeALUExploration from './MakeALUExploration';\nimport MultiplierExploration from './MultiplierExploration';\nimport MultiplierNaiveExploration from './MultiplierNaiveExploration';\nimport OnesComplementExploration from './OnesComplementExploration';\nimport RegisterExploration from './RegisterExploration';\nimport SignMagnitudeExploration from './SignMagnitudeExploration';\nimport SubtractorExploration from './SubtractorExploration';\nimport TwosCompAdderExploration from './TwosCompAdderExploration';\n\nfunction createCanvas(): HTMLCanvasElement {\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    return canvas;\n}\n\n// in milliseconds\nconst UPDATE_TIMES = [4000, 2500, 1600, 1000, 630, 400, 250]\n\nfunction createExploration(id: string, type: typeof Exploration): Exploration | undefined {\n    const element = document.getElementById(id);\n    if (!element) {\n        console.warn(\"Document element \" + id + \" not found.\");\n        return;\n    }\n\n    element.className += \" row\";\n\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.className = \"canvas-wrapper col-auto\";\n    const canvas = createCanvas();\n    canvasWrapper.appendChild(canvas);\n    element.appendChild(canvasWrapper);\n\n    const exploration = new type(canvas);\n    exploration.update();\n    canvas.addEventListener(\"click\", function(event) {\n        exploration.onClick(event.offsetX, event.offsetY);\n    });\n\n    // For animated explorations, have speed controls\n    if (exploration.animated) {\n        const controls = document.createElement(\"div\");\n        controls.className = \"controls col-auto\";\n        controls.innerHTML = `\n            <h4>Speed</h4>\n            <p style=\"margin-top: 0\">\n                Slow\n                <input id=\"speed-${id}\" name=\"speed\" type=\"range\" min=\"0\" max=\"${UPDATE_TIMES.length - 1}\" />\n                Fast\n            </p>\n            <div class=\"buttons\">\n                <button id=\"pause-${id}\">Pause</button>\n                <button id=\"resume-${id}\">Play</button>\n                <button id=\"step-${id}\">Step</button>\n            </div>\n        `;\n        // get those buttons\n        controls.querySelector(\"#speed-\" + id)!.addEventListener(\"change\", function(event) {\n            exploration.updateTime = UPDATE_TIMES[Number((event.target as HTMLInputElement).value)];\n        });\n        element.appendChild(controls);\n\n        const pauseButton = (controls.querySelector(\"#pause-\" + id) as HTMLButtonElement);\n        exploration.pause = function() {\n            exploration.constructor.prototype.pause.call(exploration);\n            pauseButton.disabled = true;\n            resumeButton.disabled = false;\n        };\n        pauseButton.addEventListener(\"click\", exploration.pause);\n        pauseButton.disabled = true;\n        const resumeButton = controls.querySelector(\"#resume-\" + id) as HTMLButtonElement;\n        exploration.resume = function() {\n            exploration.constructor.prototype.resume.call(exploration);\n            pauseButton.disabled = false;\n            resumeButton.disabled = true;\n        };\n        resumeButton.addEventListener(\"click\", exploration.resume);\n        controls.querySelector(\"#step-\" + id)!.addEventListener(\"click\", exploration.update.bind(exploration));\n\n        //exploration.resume();\n    }\n\n    return exploration;\n}\n\n\n\n// Explorations\n// {htmlId: Class}\nconst explorationMap: {[id: string]: typeof Exploration} = {\n    // part 1 (and maybe part 2 as well)\n    'binary-basic': BinaryExploration,\n    'adder': AdderExploration,\n    'gates': GateExploration,\n    'choice': ChoiceExploration,\n    'half-adder-build': HalfAdderBuild,\n    'gates-again': GateExploration,\n    'full-adder1': FullAdderExploration1,\n    'clock': ClockExploration,\n\n    // part 2\n    'signmag': SignMagnitudeExploration,\n    'adder-fail': AdderFailExploration,\n    'full-subtractor1': FullSubtractorExploration1,\n    'ones-complement': OnesComplementExploration,\n    'twos-comp-adder': TwosCompAdderExploration,\n    'subtractor': SubtractorExploration,\n    'make-alu': MakeALUExploration,\n\n    // part 3\n    'multiplier-naive': MultiplierNaiveExploration,\n    'register': RegisterExploration,\n    'multiplier-full': MultiplierExploration,\n    'divider-full': DividerExploration,\n};\nlet ALL_EXPLORATIONS: (Exploration | undefined)[] = [];\nfor (let id in explorationMap) {\n    ALL_EXPLORATIONS.push(createExploration(id, explorationMap[id]));\n}\n\nlet isDark = false;\n\nfunction renderLoop() {\n    // TODO: Put this in exploration\n    for (let i = 0; i < ALL_EXPLORATIONS.length; i++) {\n        const exploration = ALL_EXPLORATIONS[i];\n        if (exploration) {\n            exploration.render(isDark);\n        }\n    }\n    requestAnimationFrame(renderLoop);\n}\nrenderLoop();\n\n// some other stuff\nfunction fillInteractiveTable(table: HTMLTableElement | null) {\n    if (table === null) return;\n    const html = `<input type=\"number\" min=\"0\" max=\"1\" size=\"3\" />`;\n    const fillIn = table.tBodies[0].getElementsByTagName(\"tr\");\n    for (let i = 0; i < fillIn.length; i++) {\n        const out1 = document.createElement(\"td\");\n        out1.innerHTML = html;\n        const out2 = document.createElement(\"td\");\n        out2.innerHTML = html;\n        fillIn[i].appendChild(out1);\n        fillIn[i].appendChild(out2);\n    }\n}\nfillInteractiveTable(document.getElementById(\"fill-in\") as (HTMLTableElement | null));\n\nfunction setDark(on: boolean) {\n    if (on) {\n        document.body.style.backgroundColor = \"#212529\";\n        document.body.style.color = \"#909396\";\n        isDark = true;\n    } else {\n        document.body.style.backgroundColor = \"#fff\";\n        document.body.style.color = \"#212519\";\n        isDark = false;\n    }\n    renderLoop();\n}\n\nsetDark(false);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}