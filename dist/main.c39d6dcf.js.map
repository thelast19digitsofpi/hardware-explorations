{"version":3,"sources":["Exploration.ts","dark.ts","InputBit.ts","OutputBit.ts","Adder.ts","Wire.ts","Gates.ts","Display.ts","AdderExploration.ts","AdderFailExploration.ts","Text.ts","BinaryExploration.ts","ChoiceGate.ts","UserGates.ts","AnswerChecker.ts","ChoiceExploration.ts","Clock.ts","ClockExploration.ts","RegisterBit.ts","Subtractor.ts","Countdown.ts","DividerExploration.ts","FullAdderGates.ts","FullSubtractorGates.ts","GateExploration.ts","HalfAdderBuild.ts","MakeALUExploration.ts","MultiplierExploration.ts","MultiplierNaiveExploration.ts","OnesComplementExploration.ts","RegisterExploration.ts","SignMagnitudeExploration.ts","SubtractorExploration.ts","TwosCompAdderExploration.ts","FullAdderAnswer.ts","CountdownExploration.ts","main.ts"],"names":[],"mappings":";;AoCIA;;AACA;;AACA;AhCHA,AIDA,ACAA,AKEA,AHFA,AIGA,AHCA,AIDA,ACAA,AGAA,AeAA,A5BLA,Ac6BA,ArB7BA,AkCIA,AZAA,ACAA,ACAA,AlBJA,AmBIA,AvBAA,AwBFA,ACAA,ACAA,ACAA,A1BEA,AeEA,AYDA,ACHA,AZCA,AaDA,AtBFA,AuBEA,ApBFA,ARAA;AECA,APAA,AUAA,AGAA,ARKA,A+BCA;AhCPA,AIGA,ACAA,AKMA,AHNA,AIGA,AHNA,AIAA,ACMA,AGNA,AeMA,A5BJA,Ac4BA,ArB5BA,AkCGA,AZAA,ACAA,ACAA,ACAA,AvBLA,AwBGA,ACAA,ACAA,ACAA,A1BHA,AeAA,AYMA,ACHA,AZHA,AaGA,AtBDA,AuBCA,ApBDA,ARKA,IAAA,IAAA;ADDA,AQLA,AIAA,AIAA,AbQA,APHA,AELA,ACAA,AeAA,ACKA,ATIA,ALHA,AJPA,AmCQA,IhCFA,AGGA,APHA,AmBAA,ATIA,IAAA,CNJA,EGGA,GYHA,CnBAA;AIAA,AIFA,ACAA,AEGA,AIAA,AHLA,AIAA,ACKA,AGLA,AeKA,A5BEA,AcsBA,ArBzBA,AkCAA,AZAA,ACAA,ACAA,ACAA,AvBAA,AwBFA,ACAA,ACAA,ACAA,A1BGA,AeLA,AYKA,ACAA,AZDA,AaFA,AtBMA,AuBNA,A5BGA,AJLA,ICIA,ACCA,QDDA,AGCA,CFAA;ACDA,AQHA,AIKA,AIAA,AbCA,APHA,AEAA,ACCA,AeJA,ACGA,ATIA,ALQI,AJfJ,AmCMA,IpBDA,AIAA,KJAA,AfLS,EIeL,CDZJ,AGGA,APHA,AmBAA,ATIA,CUFA,EfUI,CACI,EADJ,EAEI,AJjBR,CAAqB,GAArB,EAAmC,EIe/B,EAGI,AJlBR,EAAgD,OIe5C,EAII,OAJJ,EAI6B;ADP7B,AIVJ,ACAA,AKLA,AHQA,AIAA,AHCA,AIDA,ACAA,AGAA,AeAA,A5BYI,AcYJ,ArBTI,AkCfJ,AZDA,ACCA,ACDA,ACAA,AvBDA,AwBDA,ACAA,ACAA,ACAA,A1BEA,AeEA,AYDA,ACAA,AZOI,AaVJ,AtBmBI,AuBnBJ,A5BgBQ,AJjBJ,IWKJ,AMAA,EjBLQ,EIiBA,EJjBJ,CDmBA,AUCA,CRlBJ,ACCA,AFHc,EWKd,CMAA,AReI,CAAY,CAAZ,ALHI,EKGmB,CAAvB,EVDA,AUCkC,ALH9B,CLEQ,GUCZ,CLHI,CKG4C,ALH5C,CLEJ,CKFI,CLEmC,CUCvC,EAA+E,EVD/E,EAA4D,GUC5D,EAAwG,CVDxG,EAAgF;AIPhF,AUfJ,AFQA,AIDA,AIAA,AbaI,APEuC,AELvC,ACFA,AePJ,ACOI,ATQ+E,ALH3E,AJhBA,AmCKR,M/BWQ,ELEmC,AUCwC,GNR/E,AGKA,ALHA,ACFA,AgBAA,AlBXW,CeGf,AIAA,CpBe2C,CClBzB,CSmBiE,ALH3E,CDLJ,CAAY,AHXK,CGWjB,AGKA,APEuC,AKFnC,CEAQ,ALHZ,CEFuB,AGKvB,ALHY,ACFZ,AOQ+E,ALH3E,CDLJ,AFEA,ACFY,AgBAZ,CZKuB,AJLvB,AgBAY,CfAsB,AGKlC,APEuC,AELhB,AiBFvB,CnBOuC,AELvC,ACFuB,CIKW,AJLlC,AgBAuB,ATQwD,CVDxC,AELL,AiBFlC,ATQ+E,ATnBjE,CGWd,ADAkC,CgBAA,ATQ6C,CNR/B,AHXnB,ECa7B,ACFA,CgBAA,CjBE0D,ACFP,CCAnD,AeAgD,CZKhD,CHLyE,CGKd,ALH3D,CDbI,CCauE,AiBF3E,EAAyE,CfAzE,CGKA,CHLiG,CGKP,EYL1F,EZKA,AYLiG,EZKU;AHL3D,AIVpD,ACAA,AKJA,ACOA,AHAA,AIQI,ACRJ,AGUI,AeVJ,A5BY+D,AcY/D,ArBV2C,AkCd3C,AZDA,ACCA,ACDA,ACAA,AvBUsC,AwBZtC,ACAA,ACAA,ACAA,A1BUsC,AePtC,AYAA,AXOoD,AaVpD,AtBkBmF,AuBlBnF,A5BegE,AJf3D,GAFD,GDmBuC,AUCwC,ENR/B,AGKW,ALHzB,ACFA,AgBAc,ClBVzC,EDiBgC,CYd3C,ATOsC,AePtC,CdOoD,AFEd,AiBFc,ATQ+B,CHHpB,APEpB,EUCwC,CVDxC,AGPL,CCAc,AFEd,AiBFc,ATQ+B,CHHpB,GJLzB,CCAc,AFEd,ACFA,AgBAc,CfAA,AGKW,ALHzB,AiBFc,CZKW,AJLzB,CCAc,AFEd,AiBFc,CZKW;AHLX,AUFpD,AFII,AIAA,AIEA,AbC2D,APED,AELxB,ACFA,AeElC,ACFgD,ATQwD,ATjBpG,AmCIR,ItBGA,EVEoD,AGKW,ALHzB,ACFA,AgBAc,IhBAd,CCAc,AYEhD,AIEA,AlBFkC,AiBFc,AlBTrC,CMcgD,CJLzB,CCA8B,AFE9B,AiBF8B,AlBTlD,CMc6C,AJLzB,CaElC,CFJJ,AEIgB,AfXK,CGSmD,AYEpE,AGFoE,CjBElC,CcAX,AIEvB,AbC2D,CHLU,AYErE,AIEY,ADJyD,CCIrE,ChBJgD,AYEd,AGFc,CCIzB,CAAvB,CnBbc,CmBaoB,CJFlC,CfX6B,CeWyB,AIEtD,EAA+C,IJF/C,CIEA,CJFyE,AfXrE,CmBa+D,MAAnE,EAAsF;AhBJf,AIT3E,ACCA,AKMA,AHdA,AIWA,AHQI,AIDkC,AIEa,AeTnD,A5BU4F,Aca5F,AaxBA,AZDA,ACCA,AEAA,AvBQ4D,AwBX5D,ACAA,ACAA,ACAA,A1BSuD,AeGnD,AYRJ,ACXA,AZgB2E,AaT3E,ACAA,A5BeQ,AJdH,QeUiC,AIEa,AfE3C,GOHJ,AMAA,EFDkC,AIEa,EfE3C,GWJ8B,AIEa,EfE3C,COHJ,CAAY,AMAZ,CNAA,AIDkC,AIEa,AFDnC,CFDsB,AIEa,AFD/C,CNAuB,APGnB,COHJ,AIDkC,AIEa,AFDxB,AbGnB,CaHJ,CNAkC,APG9B,CaH8B,GNAlC,CMAA,CNAmD,CMAA;AJLvD,AFKsC,AIDA,AIEa,ApBGa,AkBJ1B,ARRlC,ALWI,AJbP,AmCGD,MpBMsC,AIEa,AfE3C,EOH8B,AZI0B,AkBJ1B,CRRlC,EMOkC,AIEa,CNNnD,AFKsC,AMAA,CbG9B,CWJ8B,AIEa,ApBGa,AUZ5D,EMOkC,AIEa,AfE3C,COH8B,AMAA,ARR1B,CLWJ,CLCwD,GYJ1B,AMAA,CNAA,AMAA,ClBI0B,CYJ1B,AZI0B,AkBJ1B,ElBI0B;AIPa,AIR7E,AMuBI,ACnBJ,AHOsC,AIDkB,AClBxD,AGoBqE,AbCyB,Acc9F,ArBZgE,AkCZhE,AZDA,ACCA,ACXA,ACWA,AvBO8D,AwBT9D,ACDA,ACAA,ACAA,A1BSQ,AeE8B,ACHuC,AaR7E,AtBGa,AuBHb,A5BciC,KAAA,COHK,AZI0B,AkBJ1B,ARRzB,ALIT,EDCyE,AGKiB,ALHhC,AiBFe,ChBChE,CSEyB,AMAA,ARRrB,CIoBb,CPV0F,APE9B,AELF,AQP3C,CEQmB,AMAA,CdHuC,AeAA,CPGvC,AZI0B,AkBJ1B,EXEwD,ALHhC,ACDtD,CHMwD,CIPa,AeAA,ChBCrD,EIIsE,ALHhC,CKGgC,ALHhC,CEFe,AUezE,AKfyE,CfAA,AUe7D,APV8E,ALHhC,AiBFe,EfAA,AeAA,SLezE,EAAsC,CAAtC,EAAiD,CAAjD,EAA4D,MAA5D,EAA+F,OAA/F,EAAqH,aAArH,EAAqJ;AVf5E,AUgBrE,AFb+C,AKlBvD,AVoB8F,APEV,AwBtBpF,AtBiB8D,ACDpC,AeE6B,ACHsB,ATLjE,ATAZ,AmCEA,K1BFI,CNKyE,AGKiB,ALHhC,ACDpC,AgBDmD,ChBClD,EWed,AXfgB,AFNpB,CMUqF,ALHhC,ACDtC,ECDqD,AeAA,CZKiB,ALHhC,EEFgC,AGKA,ALHhC,AiBFgC,KfAK,AUgB3F,AKhB2F,GfAC,AUgBzE,AKhByE,CfAvB,AeAA,ElBL7E,CAA2B,IAA3B,EAAwC,CaqBhC;AVhB6F,AKhBrG,AKiCQ,AEfkD,AChB1D,AGkBuE,AepBvE,A5BqB+G,Ace/G,ACzBA,AETA,ACUA,AvBM+E,AwBR/E,ACDA,AxBQgC,A2BjBhC,AXgBqG,ATFjG,ATFA,MEK4B,CAAC,CaCyB,AIEa,CNa1D,AXhBsB,AOH/B,ATFO,IAAI,CeM2C,AIEa,EnBRrD,CaqBV,EEfkD,AIEa,CNa/C,CJnBpB,GMIsD,AIEa,AVNpD,CMIuC,AIEa,AnBRxD,CSEX,CMIsD,AIEa,CnBRzC,SAA1B;AasBQ,AFdJ,AIFkD,AIEa,AenBvE,AnCYW,AGIa,AeGhB,AYnBR,ApBcI,ALCA,AJHH,AmCCD,KjCGQ,CWiBI,AEhB8C,AIEa,CNc1D,EAAE,AFdF,AZPF,AkBOE,ARLT,ALCA,CSiBoB,EEfkC,AIEa,GJFb,AIEa,ERA/D,AIFkD,AIEa,ApBP5D,AkBOH,CbJJ,EOIoB,AZPO,AkBOP,CbJuC,CKD3D,CLCA,ELHO,AUES,CVQgE,CAV9C,AUElC;ANEI,AIjBR,AMmCY,ACnCZ,AHqBY,AIHiE,AIEa,AelB1F,A5BoBQ,AceR,AarCA,AZYA,ACZA,ArBmBQ,AyBTR,ACVA,ACAA,A1BkBQ,AeGI,AYnBZ,AXeQ,AajBR,AtBgBI,AuBhBJ,A5BwBQ,MSWI,AFdA,AMAA,CJcC,AFdA,AMAA,EdJA,AUkBE,AFdA,ALCF,ALHA,ACDA,AeGE,ACJF,ATDT,ALQS,COJW,AMAA,GfFhB,GAAY,CCDZ,AGKA,ALHA,AiBFA,ETDJ,CNCoB,AGKA,ALHA,AiBFA,AdOhB,EKRS,CLQU,CKRvB,CLQI;ADNI,AUeY,AChCxB,AHqBY,ALCA,APRD,AkCdX,AXAA,ArBmBY,ACFU,AeIV,AYnBZ,AXeY,ATDR,ALQI,AJVR,AmCAA,KtBkBQ,CVfI,AQIA,ALCA,ALHA,ACFU,AeIV,ACJA,CfAC,AQIA,ALCA,ALHA,ACFU,AeIV,ACJA,EfAE,AQIA,ALCA,APRJ,AEKI,ACFU,AeIV,ACJA,ATDX,ALQS,AJVJ,CGEe,AGKA,ALHA,AiBFA,GhBCJ,EHHT,CUEP,CLQI,CLVqB,CUEf,CLQU,GLVb,ACAX,CAAwB,ISEpB,ALQI,AJVR,EAAqC;AGIzB,AUkBJ,ACnCR,AHkBwB,AIDhB,AIEA,AbGI,AccZ,ArBtBW,AkCdX,AZWA,ACXA,AEFA,AvBqBY,AwBrBZ,ACWA,AxBO+B,AeEP,ACDZ,AdOJ,AJVJ,KWII,AMAA,CdDI,AGKA,ALHA,ACHmB,AgBCnB,CfAC,AGKA,ALHA,ACHmB,AgBCnB,EfAE,AUkBF,AElBA,AIEA,AbGE,APRJ,AEKI,ACHmB,AgBCnB,AdOF,AJVF,IaqBH,AbrBO,GaqBK,AbrBF,CeGV,AIEA,CfKA,CLVG,CgBGa,AIEA,CfKC,CLVO,ACAjB,GAAY,CDAhB,IKUH,CJVJ;AGCoB,AUqBZ,ACnCZ,AHsBQ,AILI,AIEA,AbAY,APLb,AyBhBX,AvBkBwB,ACDJ,AeOZ,ACRgB,ATCpB,ALUI,AJXP,AmCDD,KhCCQ,AGKA,ALHA,ACDA,AgBDA,CLqBI,AElBA,AIEA,CNgBC,AElBA,AIEA,ENgBE,AFbF,AILE,AIEA,ApBLJ,AkBQE,ARPT,ALUS,CWTW,AIEA,ENgBJ,CFZZ,AMAA,CbGA,EOHY,AMAA,CRPhB,ALUiB,GLXV,AUCI,GVDkB,CKWL,CAAC,ELXQ,CAAC,EKW9B,CLXyB,CUClB,CVDJ;AIKH,AUiBI,AFbA,AILA,AIEA,AbIJ,AcYR,ArBfQ,AyBtBR,AvBqBQ,AyBXR,AxBOQ,AeOI,ACJJ,ATJa,ALWb,MSUI,AFbA,AILA,AIEA,AFGA,CJaC,AFbA,AILA,AIEA,AFGA,EdJA,AUiBE,AFbA,AILA,AIEA,AbIF,APHA,AEDA,ACJA,AeOE,ACJF,AdOA,IDPL,AQIW,ALCX,ALJA,AgBEY,ACHZ,ATJa,CPCb,CHKA,AUNa,CNID,AQIA,ALCA,ALJA,AiBDA,CPGA,ATNC,CHKC,AKKd,GAAiB,GLLjB,IKKwB,CAAC,SAAzB;ADNI,AUcQ,AFVR,AIRY,AIEA,AbOZ,APHJ,AEDI,ACLW,AeQX,ACJA,ATLW,ALYlB,AJXL,AmCFA,KtBoBQ,AElBA,AIEA,AVHJ,CNKQ,AQIA,ALCA,ALJA,ACLW,AeQX,ACJA,CfAC,AQIA,ALCA,ALJA,AgBGA,ACJA,EfAE,AQIA,ALCA,APHF,AEDE,AgBGA,ACJA,AlBJN,CEAkB,EAAE,CISV,ALLC,ACJU,CCGV,AeAA,EZME,APHd,COEY,CJRS,CHMN,ECNvB,CAAsB,GDMO,CAAC,ACN9B,EAAmC,QDMZ,CAAkB,IAAlB,CAAf;AIDI,AUiBJ,AFhBY,AIDZ,AIEA,AbGI,APHJ,AsB1BR,ApByBY,AyBZZ,AxBMqB,AeMD,ACDR,AlBJR,KWKI,ATNA,AeMA,CdDI,AGKA,ALJA,AiBDA,CfAC,AGKA,ALJA,AiBDA,EfAE,AUiBF,AEjBA,AIEA,AbGE,APHF,AEDE,AiBDA,AlBJJ,IeIH,AIEA,AnBNO,GeIK,AIEA,AnBNF,GDMV,EceA,CdfkB,ACNX,EaqBa,AdfpB,CCNmB,CaqBnB,KbrBJ;AGEgB,AUoBZ,AFZA,AILI,AIEA,AbAQ,APAZ,AsB1BR,ApBsBoB,ACFZ,AeSA,ACRY,ATHhB,ALaA,AJXH,AmCHD,E/BcI,GDVI,AGKA,ALJA,AiBDA,CHGI,AIEA,AfKR,CWPS,AIEA,AfKT,ESUS,AFZA,AILE,AIEA,ApBAF,AGNA,AeSA,ARXT,KEWI,AINY,AIEA,AFIZ,EbEJ,COFiB,AMAA,AbEjB,GAAA,CFXI,AOFJ,CIuBI,CTVJ,CFXwB,AOFT,CIuBU,AdfrB,AGNqB,EWqBrB,CdfwB,EAAxB,CAJ4E,CAM5E,CUVJ,ELaA;ADLI,AUgBA,AFZI,AILA,AIEA,AbGJ,Ac/BR,ACEA,ApB0BQ,ACPsB,AeUlB,ACJJ,ATFA,ALQA,MOFI,AILA,AIEA,AjBPkB,AeUlB,CFLC,AIEA,AjBPkB,ECMlB,AUgBA,AEjBE,AIEA,AbGF,ALHA,ACPoB,AgBMpB,ATFA,CEMG,ATVa,AeUb,ENAE,AMAA,CNAC,AMAA,CdJX,AFCA,AiBDA,CZIA,EHJa,AFCA,AiBDA,ATFb,CEMU,ALAI,AWAJ,CJYV,CJlBgB,EIkBE,EAAlB,APZA;AHHI,AUiBJ,AFfa,AIND,AIEA,AbMZ,APFA,AEDI,ACRwB,AeSf,ACFT,ATHa,ALSjB,A+BfR,IpCWQ,CYAA,AINA,AIEA,AFIA,CdFI,AYViE,AIEa,AlBS9E,ACRwB,AeFmB,ACS3C,ATHa,CMGjB,AIEA,AjBT6B,Aea7B,ARTkB,CLSd,CSWC,APbA,AJX0B,AOIX,ALSf,CDNG,AJEF,AEDE,AiBDA,ATHQ,CVKT,CIFG,AFCA,AiBDA,CjBCC,CGKD,CSWV,CdfA,Ecec,AZhBJ,CKGV,APFe,GOEG,EOalB,AdfA,CKIA,EAAuB,KEFvB,EFE8B,KAAP,CAF3B,CAGI;ADRa,AUmBb,AFbA,ALCA,APHA,AEHa,AyB5BrB,AxBqB6B,AgBMR,ATFU,IVMvB,CIJA,AFCA,ACPoB,AgBMpB,ChBNA,AOIuB,CPTwB,AOSvB,CEQlB,ATXN,CWwBK,APZA,AGTqB,CVMpB,CAAC,GYEK,ALCZ,EOYA,CFbe,ALCF,APHb,Ecee,CdfC,CYEG,GAAG,EEatB,AdfA,CYEA,AZV4E,CAU5E;AIFA,AUgBA,AFbA,AILA,AIEA,AbII,ALHJ,AgBGA,ACJA,ATNgB,ALWhB,A+BhBR,K1BKQ,GMIM,AIEA,AFIA,CdJD,AUgBA,AFbA,AVFA,AiBDA,EdKE,GaDK,EdJZ,AYFc,AIEA,ADAd,AdKY,CaDG,EdJA,AYFa,AIEA,ADAb,EPGf,AVFA,AgBGmB,CJYnB,CVhBA,AeAA,CPGoB,AILa,AIEA,AlBCb,AgBGE,CJYD,AFZjB,AIN8B,AIEA,CJFD,AIEA,AlBCjC,CcH4B,AIEA,AlBb2C,AGkBhE,CWP8B,AIEA,AlBCb,AgBGxB,AbCwB,GWPI,AIEA,CJFa,AIEA,CfKlC,CAAuB,ISW9B,ATXO,CAA4B,GWPM,AIEA,CJFA,AIEA,CfKD,CWPE,AIEA,OfKnC,KAA8C,KAArD;ADHA,AUgBA,AFdK,AINyC,AIEA,AbK1C,APFJ,AGXA,AeaA,ACHA,ATPA,ALWH,GALD,GOGS,ALCD,CKDE,CZDF,CIDC,AUgBA,AFdG,ATZH,AeaA,ACHA,ATPA,CESI,ALCD,APFF,EOEI,CSPoC,AIEA,ApBGrC,AURT,CIuBA,CFdc,CFTF,CIuBC,AdfA,CgBLiC,AIEA,ApBGhC,CYCL,CAAU,CRFnB,AQEQ,AMCR,ACHA,ChBVA,CHWS,CIDW,AQEG,AZDH,AkBEA,ACHA,CPEZ,ATZa,AecjB,CdJJ,ADVsB,AgBUtB,CfjB6F,AeAA,CfkB7F,AQCyB,AZDD,AmBAxB,CPCI,AZDqB,MAAL,KAAgB,GAA3B,CAAT;AcgBI,AFfwB,AINuB,AIEA,AbGtC,APCb,AM9BR,AJ4BQ,ACVuB,AeclB,ARXQ,A0BLrB,IpCcQ,AM9BR,CUwBoC,AIEA,AbG5B,AM3BR,CC2CY,AFfwB,AIN5B,AIEA,AbVuG,AJEhF,AeclB,ARXQ,CESgB,ALG7B,AJfwB,AeclB,ARXQ,CJrBtB,CM8BuC,AVF1B,ACVqB,AeclB,ARXQ,CIwBR,AdfF,AGZgB,Aecb,ARXG,CVSL,CceG,EADG,EIZT,GhBJJ,GAAkB,EAAlB,CFEA,CAAsB,MAAtB,EAA8B,gBAAgB,EAA9C,EAAkD;AIAlD,AUiBI,AFjBA,AILJ,AIEA,ApBII,AM/BZ,AJ6BQ,ACX6B,AecZ,ACFjB,ATTmB,ALavB,EAAA,GOLwB,CEkBhB,AdhBA,AGbyB,AecZ,ARXE,ALavB,COHQ,ATb0B,AecZ,ARXE,ALaxB,CDJU,AeAA,CHLD,AIEA,AlBEA,ACX2B,AecZ,ARXE,CQWD,ClBDZ,EcgBE,AdhBA,CgBNX,AIEA,ChBGa,AUiBA,AKjBA,CdIjB,CWTiB,AIEA,AfOjB,CDJoB,AeAA,ELcH,EZfb,CECqB,AeAA,EjBDA,CACjB,CEAqB,AeAA,CdI7B,GDJiC,AeAA,AdIjC,IDJyB,AeAI,CfAzB,EeAoC,CAAf,CAArB,CdIQ,CAAZ,EAAuB,CAAvB,EAAgC;AScxB,AFjBC,AILD,AIEA,AbMJ,APJkD,AM9B1D,AJ8Ba,ACZiB,AeclB,ARXQ,ALcZ,A+BlBR,KpCaQ,AGZqB,AeaD,ARVpB,CI2BI,AFjBC,AILD,AIEA,AlBEC,ACZL,CSaM,AVDA,AgBGF,ENFI,ALGH,ALJG,AGKH,COJI,AILD,AIEA,AlBEJ,EcJM,AIEA,Ad5BlB,CQgDmB,EAAE,CAAC,AFjBV,CEaS,CTTb,CAAe,CWVF,AIEA,CbOb,EFCA,CEDoB,AFCA,EEDpB;AHHA,AUkBI,AFlBa,AIJb,AIEA,AbMJ,APFA,AMvBJ,AJoBe,ACXX,AecK,ACFL,ATTA,AGlBR,AR+B6B,ILFrB,Aa7BR,EC6CY,AFlBa,AIJb,AIEA,AlBCO,AgBGN,AbEgB,COJH,AVDN,AgBGN,AbEgB,EDJjB,AUkBE,AFlBa,ALIf,ALLS,ACXT,AecI,ACFJ,ATTA,ALamB,COJH,APID,CScX,AEtBA,AIEA,ApBIF,CAAC,Aa7BhB,CT2BiB,AYJE,AIEA,ADEF,ATTT,CNSU,AYJE,AGIF,CPAgB,AZE1B,AkBAI,CJWS,AdXD,AUXA,CNSC,AeAA,CfAb,AJEA,AmBFA,CPAqB,ATZrB,CCYgB,AQAe,AZEf,AmBFA,ATThB,CNSiB,AQAG,AOAH,CZIjB,AJhBkB,ECYE,AQAa,AZEjC,AGdA,AgBYoB,CZIC,EAArB,CHJA,AeAA,EfA0B,AeAA,CfAC,AeAA,EfA3B,AeAA,EfA+B,AeAA;AfC3B,AUkBA,AFnBA,AINS,AIEA,AbSb,APFH,AMvBD,AJmBQ,ACVP,AeaoB,ACDb,ATTJ,AGnBR,AR+BmC,A+BjBnC,GpCjBA,CAmCI,CYPwB,AIJpB,AIEA,AlBEqB,CYqBjB,AZrBJ,AgBIiB,AbEU,COHvB,AMCc,AbEU,EECvB,AWHe,ARVf,ALYyB,CSetB,AIjBa,CdDZ,AErBb,AaqBa,CLkBC,GRvCd,CAAY,AIYR,CIqBa,ARjCjB,ECyBI,ADzBmB,AIYJ,CJZnB,ECyBsB,ADzBY,CFqB1B,AeAA,CfAkB,AGItB,AYJsB,EbrB1B,AIYI,ENSI,AErBwC,AaqBxC,CfAuB,AeAA,ObrB/B,EAAkE,IAAlE,EAA8E;AFsBlE,AUkBJ,AFnBC,AIHL,AIEA,AbMH,AD7BM,AJyBH,AgBAI,ACAI,ATTX,AGpBL,AR+B4B,KaJA,AbIpB,CSgBI,AFnBC,AMDL,CNCM,CRCE,AeAA,CfAC,AQDD,AIHH,AIEA,AdvBF,AJyBE,AiBAI,CPDA,CRCE,AeAA,CfAC,AeAA,AN7BpB,GPIW,CMwBC,AIHJ,EVrBoB,CFyBT,AYJI,AIEf,AlBEA,AiBAW,CHJX,AVrBG,CUKkE,CAiBrE,AICkB,AlBEA,CEAK,AUkBF,AKlBE,CfAC,AFAxB,AiBAwB,CLkBD,AMpBvB,EhBE2B,AUWd,AKXc,GfAhB,AeAA,IfAuB,AeAA,KfAK,AeAA,GfAC,AeAA,CfDb,AeAA;AfEnB,AUkBJ,AFpBa,AQAjB,AdpBA,AJsBH,ACbD,AeeI,ACFQ,ANhBZ,ARkBC,EFfD,CEaA,GSkBQ,AFpBa,CAAC,CREV,AeAA,CfAC,AQFW,AQAf,AdpBA,AYwBA,ACFI,CPFY,CREV,ADbf,AgBae,ANhBf,CTgBgB,ADbhB,AgBagB,GPFc,CQA1B,ChBEiB,AEtBjB,AasBiB,EPFI,AQAN,APdnB,CDcmC,AQA/B,AdpBgB,AOMR,CTgBI,AUkBO,AFpBC,AQjB8D,AjBMtF,AgBagB,ANhBhB,CTgB0B,AgBDtB,AjBZJ,AeeI,ACFsB,CfAX,AUkBU,AKlBV,ANhBQ,CDcc,ACdrC,CKkByB,CdFG,AcGpB,ACHoB,ANhBM,EVGlC,EUHA,CVGA,CUHgD,QAAhD,CVGO,CUH2D,EVGlE,EAAsC,AUHtC,EAAgF,IVGhF,EAAqD,EUHrD,EAAgG;ATcjE,AUYd,AFZT,AIDJ,ATUJ,APHA,AMzBQ,AHSJ,AeeK,ACLsB,ATN/B,AGVO,ENyBP,APHA,AUZA,GIkBI,AFfoB,CAApB,ANhBI,AYwBC,ARXT,CNMQ,AEnBC,AYwBC,ACLF,ATNR,CPJU,CaSD,ATUT,AD5BW,AYwBC,ALrBL,CNyBP,AD7BoB,AYyBZ,EffM,CHgBd,CAAA,CGhBiB,AUNV,CHUP,CAAA,CGVwB,CNyBxB,CAAA,AJnBsB,AUNf,CGeH,EhBOJ,AUZA,CMKwB,AhBOxB,CgBNQ,CNNR,EHeA,AJnBiB,CAAc,CHgB/B,AGhBiB,CImBjB,EPHA,AGhBmC,GOI5B,EPJiC,COIxC,EAAsC,CPJH,CImBnC,APHO,AGhBsC,CAAV,GAAY,AOI/C,CPJI,CHgBJ,AUZqD,EVY/B;AIFd,AUmBJ,AFpBA,AIHK,AIEL,AbQA,AD5BI,AJsBR,ACbI,AecW,ACDP,ATTJ,AGRA,ARmBJ,A+BxCJ,ElCsCI,AGEA,EKXI,EMKK,AVlBD,AYuBO,AbCf,CWNU,AVlBD,AYuBO,ARVT,ALWP,CEIQ,AJnBE,AOIF,CI4BC,AFpBA,AIHG,AIEH,AdpBE,AYuBO,ALlBT,CGaD,AdIR,CEAa,AFAb,ACba,AgBaA,CTTT,CQUkB,CJkBlB,AXhCY,EecO,AbCvB,CSiBiB,ADpCb,ARmBJ,CSiBkB,APbA,COad,AXhCiB,CDarB,AWjBoB,COehB,AbQyB,ALN7B,CUDI,ALOA,CHNI,AeAA,AdER,CDF0B,AgBFF,ADEE,CPDD,AQAjB,CRCA,APER,CHFA,ACbgB,CAAc,CAAd,CDahB,CEAQ,AeAA,CfA0B,ADbA,AgBaA,IdE3B,CFfgC,EEevC,CHFO,CCb2B,AEeI,CFfM,CDa5C,ACbkC,EDaI,AGEtC,CFf8C,CAA1C,AEegE,IHFpE,EAAqD,AGErD,EAAmF;ADDvE,AUmBX,AFpBQ,AIJM,AIGN,AdvBW,AJyBhB,ACbA,AeaI,ACAI,ATTR,AGRI,ARmBJ,A+BnBR,IlCiBQ,ACbA,CGZA,AYwBqB,CNAhB,AIJM,AIGN,AFCL,ALhBI,CDgBE,AIJM,AIGN,AlBEH,ACbA,AUJE,CTiBG,AFAJ,ACbA,AgBaI,ATTF,ALWF,CDFK,AQDD,AIJM,AIGN,ADEC,ANjBF,ARmBF,A+BnBJ,CxBgBG,AIJW,AIGX,APhBY,CTkBL,AeAA,GdED,CWPU,ANJP,ERSb,ACbA,CCakB,AeAA,ATTD,CMIF,CAAU,AdKT,ACbA,CaQF,AoBZtB,ChCiB8B,AeAA,CfAC,AeAA,CHLI,AoBZd,CpBYC,ANJU,ALWxB,CDF0B,AeAA,ChBb1B,AEeuB,CWPQ,CZKb,AeAA,CfAP,AeAA,ATTkB,GNSI,AeAA,CTThB,INSqB,AeAA,CTTA,ENSC,AeAA,CfDT,AeAA,CjBCF,KAAK,CQThB,GAAkC,CRSvB,CAAW,GQTiB,CRS5B,CAAgB,CAAhB,CAAZ,AQTmC,ERSH,AQT/B,GAAgD,GRSjD,CAAhB,CQTsE,IAAtE;ANUQ,AOjChB,AC+BmB,AIJP,AIGO,AbQX,APJA,AMtBA,AJqBA,ACbA,AeeA,AanCR,AZiCgB,ATTR,AGRI,ARmBJ,A+BnBJ,IzBhBJ,ATiCQ,ACbA,A4BpBR,ArBwBQ,ALWA,CWToB,CJKT,AILX,AIIW,APdP,AuBAF,CxBeU,AQDA,AlBGT,ACbA,AOIA,AGRE,ARmBF,CDFK,AFAJ,ACbA,AgBaI,ATTJ,ALWA,CDFK,AQFK,AQDA,AbQT,APJA,AMtBA,AYuBA,ACFI,ANjBF,COcQ,ChBGJ,AeAA,CfAC,AeAA,ATTZ,ALWA,A+BnBQ,CxBeU,ALOT,AD1BT,CC0BU,CaRU,AVNN,A0BRgB,CxBeX,AZGnB,AMtBY,AHQZ,CCaiB,AGKJ,APJA,AGdA,AgBaI,CZKjB,CaRe,AlBGf,AgBEA,CELyB,AbQT,AGdG,CNSP,AOjCpB,AS8BsB,AbQG,AJlBjB,AgBaY,CfAU,AFAJ,AgBEA,ACFI,CfAX,ADbQ,AgBaR,AiBjB2B,ChBcX,AbQP,AWHpB,ARXc,A0BRyB,ChBczB,AVNU,CNSA,AJCxB,AGdA,AgBawB,ATTV,CVUS,CoBJQ,ApBI/B,AGdwB,A4BpBhC,CxBsCiC,AGdA,CVUC,CAA1B,EAA6B,AGdA,IDaI,ACbT,AiCJM,CpCkBI,AGdA,AiCJmB,C7BsBjC,AJlBpB,CIkBoC,CJlBC,EOIrC,CVU6B,AUboB,CVaR,AUTzC,CHaA,AJlB0C,AiCJZ,CAAlC,C7BsBgD,CAAC,CPJ7C,AGdqC,CIkBrC,AJlB+C,CHcC,AGdhD,CIkBiD,IPJI,MAAL,AEDA,CFCY,KED3B,CFCjC,AEDA;AEF8B,AUsBlC,AHrDJ,AC+BY,AIDJ,AIAI,AbSA,AD1BA,AJqBJ,ACbA,AeeH,AapCL,AZ+BsC,ANjBd,AuBGpB,EtBoCA,EZnBI,ACbA,CSSqB,AQDD,APfpB,CDgBA,ANjBI,CFkBA,AgBAA,AdlBC,AJqBF,ACbA,AgBUC,CjBGA,ACbA,CaSC,AVjBE,A8BIJ,C7BsBO,GD3BE,CC2BE,COclB,AsBpCA,CtBoCA,CPdqB,ALLjB,ACbA,GAAgB,EaShB,ATSsB,GOc1B,AEvByB,CFuBzB,CEvBI,KTSiB,COcrB,APdqC,CAAhB,CAAb,COcR,OXhCgC,GWgCxB,EXhC6B,KWgCrC,AXhCgC,CAAW,CWgClB,GXhCO,CAAgB,CAAhB,CAAZ,CWgCpB,CXhCoD,CWgCZ,KXhCpB,CAAhB;ACcC,AUmBD,AHtDR,ACkCQ,AIHA,AIAK,AbSD,APLJ,AMrBI,AJqBJ,ACbA,A4BtBR,AZmCS,ATTD,AGPA,ARiBA,A+BlBP,EAED,ElCeQ,ACbA,AOIA,CNpB6F,CA+B7F,AgBNK,AdjBD,CciBE,AdjBD,AJqBF,ACbA,AOIA,CI4BC,AEvBE,AdIF,ACbA,AOIA,ALUA,COFC,AQHG,ApBIH,AMrBE,AOKF,CFnBb,AS+BiB,AbSC,AwBxClB,C7BmCQ,CAAQ,CFAC,AahBT,CbgBU,AKCA,CSkBC,AEvBE,AIAC,AbSC,CIxCvB,ARsBQ,A4BtBR,AlBmBoB,CbgBC,AEAA,ACZT,AOGJ,CC1BR,AK+BwB,ATSE,APLlB,A+BnCR,A1BoCsB,CSkBC,AFpBf,AQHS,AbSU,COcH,AMvBG,ApBIH,AURZ,CUII,ApBIS,AGZT,CW+BJ,AFpBc,CIHG,ATSE,AFJJ,COFnB,AQHqB,AbSG,APLJ,AGZT,CiBQP,AlBII,CYmBc,AEvBE,AdIF,CcJtB,AdIA,AQRW,EHaQ,APLM,AEAA,ACZT,CIiBc,EGbd,ALShB,CSkB6B,AX/BlB,CIiBQ,ALLW,ACZT,AEaS,CEIK,AJjBxB,CIiBQ,COcc,CX/BR,CW+BrB,AdnBgB,AURT,CHa6B,APLJ,AURZ,CHaL,AJlBnB,CDayB,CYmBc,AZnBA,ACXnC,CIgBwC,ALL5C,CKKkB,AGbd,CVQJ,AEA0C,ACXnC,CW8BoC,CAAC,AdnBA,CAAC,AGXnC,CIgBwC,AGbhB,CI2BK,APdnC,APLJ,AEA+C,CYmBC,APhBC,CAG7C,APN6C,CGXlC,CDW2B,CAAU,CAAV,CCXhC,CW8B6C,AX9BnC,CDWoC,ACX9C,AOGN,CRQJ,CYmB0D,CZnBC,ACXnC,AOGuB,CI2BR,AZnBvC,EAA8D,ACb9D,EAGI,AOEgD,CI2Ba,CZnBC,CYmBlE,AZnBmE,EYmBE,AZnBP,ACVrD,EOEsC,CRQyB,AQRZ,CRQ5D,ACVI,CAAU,CAAV,EOE2C,CPF7B,COEd,EPLJ,COMI,CPFA,KAAK,COEE,GPFP,CAAU,CAAV,AOEY,GPFE,GAJlB,COMW,CAAa,KAApB,KAA8B,QAA9B,GAAyC,KAAK,OAAL,CAAa,KAAtD,GACC,MAAM,GAAG,SAAH,GAAe,MAH1B,CALiD,CASjD;AIyBI,AHvDoB,ACmC3B,AQJ2B,ApBKpB,AMxBQ,AJwBZ,ACRH,AeYD,AaxCmC,AlBoB3B,ARiBA,EMrCoB,AOwC5B,AaxCmC,C5BgBnC,CDoBI,CIxBA,CcmBwB,APXpB,ARiBA,CeNqB,AlBKtB,AWhBE,CXgBD,CkBLuB,APXpB,ARiBA,CeNqB,AfMpB,CSkBC,AHvDe,AXoCf,A+BpCsB,CpBAP,AToCxB,A6BpC+B,CbwCnC,ALrBgB,CKqBhB,CETqC,ENwB7B,CdnBA,CoBLwB,ApBKX,CoBLqB,CAAX,AfMvB,ELDA,AkBIR,CET4C,AFS5C,AbH0B,ELF2B,CAE7C,EWrCoB,ANqCG,CaG/B,CPxC4B,EOwC5B,GaxCmC,CpBAP,CAAA,AoBAO,A1BqC3B,KaGD,CaxC4B,CAAA,CbwCnC,EAAsC,MAAtC,EAAqD;AJgB7C,AExBJ,AC9BR,AG6BY,AbWA,AiB1CZ,AlBiBQ,AJoBA,AgBIA,ACJA,ATNA,AGVI,ARiBH,ImBtCT,AtBqCQ,AgBIA,ARVA,CUFoB,AfOpB,CePA,APRI,CXgBD,AgBIA,ARVA,AGVE,CXgBD,AgBIA,ARVA,CMCC,AVfA,AaoBA,ANhBE,CNqBC,CAAC,AFJF,CaGP,CJeW,AExBF,CAAC,AVfV,AJoBA,CKKa,AFJF,ESkBP,AExBS,AVfA,AIcb,CMCA,CQhCR,CRgCwB,ATUE,AGXF,ALOA,CWNC,CGKjB,EHLoB,CAApB,AGKqB,AdCd,EWNgB,AGKvB,AdCuB,CWNC,ANDxB,EMCA,ATUa,CAAgB,CSVD,KTUf,GAAyB,CAAlC,EAAqC;AHJzC,AUmBC,AHxDL,ACsCA,AINQ,AC9BZ,AG+BQ,AbSQ,APLJ,AwBtCZ,AlBkBY,AJoBP,ACVA,AeeG,Aa1CJ,ArB+BI,AGbY,ARoBR,A+BlBZ,ExBkBI,CVRA,CQCI,A0BXF,CvBFE,CPDI,ADqBA,CKPD,CQWG,ARXF,CNMC,AanCJ,AG+BI,AfKE,CLDG,AMpBF,ADqBA,CMtCZ,AKgCa,AehCb,CnBsCA,ALIgB,ADzBF,AYyBA,CNJd,ANrBe,CNoBG,CkBKD,CkBtBH,C7BsBO,APLA,CiBnCzB,AXekB,CWfC,AmBkBE,CnBlBrB,ACwC0B,ARXlB,A0BXc,ChCiBd,ACCI,CDDc,AQCtB,AKpC0B,AG+BtB,ApBIsB,CYC1B,AKpCJ,AVwCoB,AGXO,CMCf,AXMkB,A+BlBT,CpBYU,AC9BU,AG+BZ,ChBIrB,AgBHI,AgBdgB,ChCiBG,COrC3B,AJ0CgC,AWAf,CP1CL,ACsCZ,AINQ,AEUuB,AbJA,CWNC,AEUf,AkBtBA,C1BWb,CEOJ,AZDqB,AoCjBS,CpCiBO,AkBKF,ClBLd,AKCb,CMtCR,AMEJ,AjBmCY,A+BrCR,CAAY,AKoBK,CzBpBoB,AMEyB,AVwClD,CWA4B,AkBtBJ,C7BsBO,GKJpC,AMI4B,Aa1CnC,AKoBiB,ClBsB4B,CAAV,Aa1CE,AKoBK,CxBkB1C,EAAsC,AMIS,AkBtB9B,ClBsBb,CkBtB2C,GAA9B,CxBkBjB,AKpCJ,CmBkBwD,CxBkBC,AKpCsC,EmBkB1E,CAArB;AhCkBY,AQCJ,AINQ,AC9BZ,AG+BS,Ae/Bb,A5BwCoB,AiB5CpB,AlBiBqB,AY2Bb,ACNA,AatCR,AtBiCQ,AGTA,ARgBC,IOAD,AoBxCR,AtBiCQ,CJhBA,ADqBO,CDCH,AanCF,AG+BG,ChBIA,AQCF,AQLG,AVFH,CEOC,AINI,AEUF,ARXF,CNMG,AYLE,AICD,ADGH,ANdA,COWD,AInCZ,CRkCmB,AC9BJ,ACwCE,AbJF,COAP,AINY,CAAC,AGIJ,CfCG,AanCF,ACwCE,ACNF,ANdV,EGUgB,AQlCxB,AdiCQ,CSKa,ATLA,AGTA,CTeN,AanCO,AOJtB,ALsCQ,CfCiB,AcKA,CdLV,AYLW,AGIF,CHJL,AGIM,EfCI,CAAd,AeDa,ATLpB,CMCuB,AgBlC/B,CtBiC8B,CNMC,AcKX,CdNW,AcMG,ACN1B,CDMY,CCNc,CAAC,ATLA,CMAC,AC7BlB,ACwCoB,CDxCV,AEkCpB,CFlCU,CEkCqB,CFlCR,CAAb,ACwCyB,EDxCT,AP6BJ,CAAc,CQWN,ARX9B,CO7BU,ACwC8B,CAAV,ARXS,CO7BR,EAArB,ACwCgC,CDxC9C,ACwCI,CRX4C,QAAL,CAAc,CAArD;ANOI,AUmBJ,AFjBA,AIPQ,AC9BZ,AG8Be,Ae9BnB,A5BwCoB,APNR,AwBvCkB,AlBqBtB,AJiBH,ACRD,AeeI,AY1CR,AXoCY,AavCZ,AtBkCQ,AGTI,ARgBA,A+BlBZ,EZvB8B,ArB8B1B,EgCzBJ,AjBwCQ,AY1CR,ApB+BQ,ENMI,AanCF,AG8BS,APVP,ARgBA,CDDC,AgBLO,AFUT,ARXA,CEQG,AIPE,AEUJ,ARXA,CNMG,AYLE,AIAK,AddT,ADoBE,A+BlBN,C7BsBW,AMpBJ,ARgBA,CSkBD,AExBI,AhBIF,AwBvCa,ArB8B1B,AgBSa,CPGC,AY1CY,ArB8B1B,AULc,CAAC,COUQ,CRON,AZHA,AULb,CIyBA,AExBgB,AhBIF,CiBlCD,AXgBb,AYwBA,CEVc,AFUA,ALpBJ,COUc,ApBIP,AafJ,CDkBK,AIPP,AC9BK,AG8BF,AbUQ,APNlB,AMlBY,CUcK,AbLzB,AEWQ,CWNO,AhBIS,AGTxB,AeeI,CEV0B,ApBIL,A8BpC7B,CbE4B,AkBA5B,A5BwCmC,AWAP,ACNhB,AdEmB,CWNA,AGIA,CnBAC,AoChBhC,CZvB8B,AN6CtB,AkBtBmB,CxBmBN,ANrBW,CMqBG,ALGK,AiB7CV,ANwC2B,ACD7C,AiBhBZ,CxBmBqB,AZHe,AGThC,AegBI,ACP4B,AdEC,CLFA,AMlBF,A8BEI,ExBmBA,ALGK,AJfxC,AEWoC,CEIN,CiB7CJ,AlBqBS,A8BEvC,CZvB8B,AlBqBU,CCwBS,A6BtBc,CxBmBnB,ALGV,ADxBV,GWhBA,AVwC6B,APNrB,AMlBa,CMqBN,AKrCF,AVwCiB,APNN,AKEX,COCY,AKrCzB,AVwCJ,AJfP,CSY0B,ANrB/B,CWhBgC,AZoCY,CYpCX,CLqCU,ATZ/C,CSYI,AZHI,CiBlCgC,AdyBhB,CHS4B,CAAC,AKE7C,CYpCY,CjBkCZ,CiBlCqC,CjBkCY,GiBlCrC,EAA+B,EAA/B,CAApB;AbiC2B,AUsB1B,AH3DD,AC0CI,AIV4B,AC3BhC,AG6BQ,Ae9BZ,A5ByCiB,APND,AkCnChB,AXFA,AjBoBQ,AoBrBR,AvB6BQ,A2B5BR,ACFI,AZuCY,AaxChB,AtBmCK,AGTO,ARgBH,A+BlBL,EnBlBA,CH+CA,AJhCA,CwBhBJ,AXFA,AGDA,CtBoCQ,AgBJqB,CAArB,APRI,AuBFF,CpBSE,AC3BH,CNLL,AC0CU,AKrCJ,AXiBI,AyBtBV,AZuCY,CZGA,AYHC,CaxCjB,CpB2CiB,AOHE,CnBAG,AmBAF,CRvChB,AoBAA,AKuBa,CxBmBG,ANpBA,CCuBG,AMpBF,CFxBb,AoBAA,ACFR,AIwBoB,C9BDG,AOGA,CIpBnB,AeNJ,CpB2CyB,AKrCJ,AVwCM,A2BzC3B,AfmCmB,CnBAW,CMjBH,CKrBnB,ALqBoB,AoBrB5B,AKAQ,CpBAA,AMIJ,AjBkC6B,A+BtCzB,AZsCuB,CFlCL,AVwCM,AYNA,AiBhBJ,C9BDL,A8BCM,C9BDG,CKrBxB,ACyCY,AmBzCZ,AZsC2B,CRtC3B,ACyC0B,AKrCJ,AcJtB,AZsC4B,CPGhB,CLGO,AgB3C3B,CjBoBqC,CKrB7B,ACyC8B,AmBzC9B,AZsCgC,ERtC1B,AoBAA,CxB4C6B,AYNF,CAAN,CPGQ,ENpBpB,A8BCH,CzBtBZ,ALqBA,AyBrBA,AZsCoC,AiBhBA,CxBmBN,AKrCZ,AEkCP,CRtCG,ACyC0B,AKrCb,AVwCZ,AwB5CD,AZqCc,AiBfhB,CxBmBkB,AwBnBlC,C7BsBgD,CI5C5C,AoBAA,CnByC0C,CDzCvB,ACyCnB,AmBzCmB,GpBAnB,AoBAA,GdIkB,ENJK,AMIiB,AcJjB,CdIL,CAAtB,ENLA,AoBAA;A3B0CI,AWvCR,AHwCQ,AIPC,AC9BL,AG+BI,AejCR,A5B0CoB,APNA,AkCpCpB,AXFA,ACFI,AlBuBI,AJgBJ,AwBtCJ,AvB8BQ,AeeA,AY5CR,AXsCgB,AazCoB,AnBwBf,EIjBjB,AfiCA,A8BxCgC,EjBIpC,AHwCQ,AMGA,CLvBA,EDoBG,AMGA,CNHC,ANpBE,AYuBF,ACNI,CfEH,AgBLA,ADGI,CgBpCjB,AnCoCoB,AEDhB,A4BrCJ,C9BsCqB,AwBxCjB,AtBuCA,AiBCe,AazCiB,CfOtB,AXiBI,A0BxBkB,CfOrB,AjBkCQ,EMjBF,C6BnBrB,ALFA,AXsCwB,CPGhB,AKrCJ,AjBkCuB,AkBMnB,CNHc,AKrCF,AkBFpB,AnCoC4B,A8BtC5B,CVmCQ,AddiB,CAAC,AJgBtB,AgBOoB,ACNL,CJrCnB,AboCI,AiBCyB,CfErB,AQCA,AQNkB,ADGP,CFlCf,AXiBiB,CMoBO,AQNpB,AddsB,CFmBD,AapCF,AEkCI,CnBAR,AwBxCnB,CpB0CI,AQCA,AZH6B,AwBxCrB,CxBwCO,AEDnB,CUDqD,ANftB,CMqB3B,CZJiC,AEDrC,EsBvCA,AQDgC,EhCyCS,AwBxCJ,AQDL,CfOhC,AjBkC0C,CMjBzB,CAAb,CAlB0E,CAmB1E,CJeI,A8BxCwB,CAAA,Cd+CA,KlBNK,AkBMA,ClBNkB,AEDvD,CFCqC,CEDX,CFCgC,CAD7B,AkBOG,CAAW,IAAX,ChBPhC,AgBOgD,CAAhB,ChBPU,AgBOtB,EAAgC,MAAhC,CAAhB;AJeJ,AH1DI,AIAR,AKmCK,AelC8B,A5B2Cf,APNA,AkCrCpB,AXFA,ACFI,ACGJ,AvBqCQ,AwBvCR,AvB+BQ,AeeA,AY7C0B,ACC1B,AZmC4B,ATHpC,AGRQ,AReA,A+BlBJ,EtBqCA,AqBzD+B,ALFD,ELClC,AvBqCQ,AgBOA,AbLA,E+BlBA,ClBuBG,ACTC,AdID,A+BlBF,CzBrBK,AaHV,AN+CQ,Aa5CE,A1BuCF,CKPZ,AGRa,CNoBO,APNA,AkCrCpB,AXFA,AGDA,CSGmC,AnCqCd,AEDN,ACRA,A2B9BmB,CKEC,AjCoCnB,A4BtCkB,C9BuCX,AwBzCnB,AdmCJ,C0BXI,CtBqCA,AZrBI,ACRA,CW6BJ,AH1DkB,AuBCtB,AXFA,ACDQ,AtBuCY,AwBvCpB,AKEsB,AKqBJ,CpCiBS,AkBMnB,ALpBA,AReA,CLDoB,AkCrC5B,AXFA,AECA,ACFA,CfEyB,AoBAA,CpBAjB,AJ4CsB,AwB5CtB,AlBwBgB,AReA,CAAhB,CmBzCA,CAAA,CjB8C2B,COc/B,CAAA,AdpBmB,CAAc,AwBxC7B,CxBwCe,AwBxCf,AX0BA,CNoBgC,EPNC,A8BvCP,ChB2D9B,AqBzD+B,A5B2CQ,AiB9CnC,CMC0B,CKEC,AXHrB,CV4DV,AdpByC,CAAC,AEDtC,CKOwC,EuB7Cd,CKEC,A5B2CgB,AiB9C3C,AMC0B,CKEC,A5B2CK,CiB9ClB,EjB8CiC,CAAnC,AiB9CZ,EV4DJ,AU5DuB,CxBwCc,CAAkB,CAAlB,AwBxCjC,ExBwCsD,GwBxC/B,IAD3B;ApB2CI,AUmBA,AH1DA,AIDR,AH0CQ,AIPA,AC/BJ,AVyCa,APTgB,AkCnCH,AXFW,AjBuBjC,AmBtBR,AvBsCQ,AwBxCyB,AvBgC5B,AeeG,Aa5CA,AZsCC,Aa1CL,AtBDJ,AG8BQ,ARcA,A+BlBA,C1B1BR,CwBK8B,AXFW,AGDR,CvB4B7B,AO9BJ,CE8CQ,AMGA,AbLA,A+BlBA,CjBpB6F,CAsC7F,CPEG,AKtCF,ACyCE,AbLA,CSmBC,AH1DA,ACyCA,ANpBA,AYuBA,Aa5CA,A1BuCA,CDAC,AYLA,ATOU,APNP,AEEH,AWZA,CE1Bb,CEIa,AiBHiB,AXFW,AGDR,AMD7B,AIyBW,CnBlBD,AiBHgB,AXFW,AjBuBzB,AoBxBiB,AUwBjB,ChCkBC,AUmBA,CVnBC,AFFV,AgBOA,CDzCS,AVyCM,ALPJ,AgBOA,CP5CC,AIDpB,AEII,AXkBgB,AyBrBA,AKqBZ,ChCkBa,AQEb,ANpBA,AOIA,ARcA,A+BlBa,ChCkBb,AUmBI,AC3DZ,AEIoB,CHuDG,AH1DA,AKkCf,AC/Ba,AVyCM,ADvBJ,AJgBf,A6BrCe,C3BuCC,AQEA,AVJA,AgBOA,ALnBA,CTcC,AOvCjB,ATqCA,A6BrCA,CfkCkB,AC/BF,CAApB,CboCwB,AYLpB,ATUwB,AWAb,CDzCQ,AfkCE,AgBOA,CJcrB,AGvDoB,AfkCE,AgBOX,CgB5CW,C9BuCtB,AUmBwB,AGvD5B,AJsB4B,CqBzBF,AhB4CC,CdLG,AapCF,AVyCL,AmB/CM,CtB0CE,AFFA,AWZA,Ca5BF,AR+CzB,AchDJ,C5B2CI,A4B3CQ,CdgDoB,CdLG,AGKI,A2B5Cb,AhB4CtB,ALnB+B,CqBzBT,AhCqCA,AWZU,CXYC,CqBvCA,AGDR,Ab4BT,CNmBG,AmB/CM,AMD7B,AIyBuC,CbvBF,CrBuCX,A8BzCW,AnB6BI,AuBJxB,ClCgByB,CKOK,ALPrB,CAAtB,AWZA,AuBJwC,ClCcF,CqBrCL,ArByCjC,CqBzCiC,ChB8Ce,CKHd,KLGS,CKH3B,CAAhB,CwBpBA,E7BuB2D,OAA5C,EAAqD;AHJhE,AK7CZ,AKgEY,AC5DoB,AH2CxB,AIPH,AC/BG,AGkCJ,AenCA,A5B0CgB,APNJ,AwBxCR,AlBuBI,AmBvBZ,AP8CQ,AY9CJ,AjB4BI,ARaA,A+BlBA,ErBvBwB,AKuC5B,EX3CJ,AG+CQ,AMGA,AbLA,ESmBI,CFjBD,AMGA,AbLA,COEC,AKtCE,AOLA,AN8CF,ALlBE,ARaF,CLDI,CyBxChB,CrByCiB,AWzCe,AKuC5B,AenCA,AnCoCY,AMjBC,AwBvBb,CfA4B,AKuC5B,CIvCe,CPKC,AjBmCJ,AkBMR,ALlBY,ARaZ,CaKW,AbLA,CmBzCG,ACAtB,CRKuB,AOLA,AX4BA,CCgCC,AdpBJ,AyBxCpB,CX4DyB,AFjBjB,AZHa,AKCE,CaKC,AbLA,CYpCG,AGkCvB,APXuB,ARanB,COEkB,AQJtB,APXwB,CPLhB,ADkBe,CDAf,AK7CZ,AKgE8B,AIdX,CdLY,AcKF,ALlBN,CPLS,AYuBb,ALlBa,CPJhB,ADiBe,CeF3B,AfE4B,CDApB,AUmBY,AC5DQ,AfwChB,AkBMe,AbLvB,CDA4B,AUmBxB,AdpBoB,A8BxC5B,CfA4B,AKuC5B,AenCA,AnCoCY,AwBxCM,AMAN,AjB4BqB,CsBxBrB,AnCoCA,AkBMR,CM9CwB,CN8CI,GH9CJ,AeA5B,CfA4B,AoBI5B,AnCoC8B,CiBnCX,ACyCkB,AY9CA,AjB4BlB,CIvBc,AkBDI,AtBwBjC,CIvB8B,AGkC3B,CpBCK,CkBMoB,CDzCK,AGkCrC,AFO0C,CAAV,CEPM,ApBCR,AwBxCZ,EZ2CmB,AZHP,AwBxCM,AN8CQ,CDzCF,CAAC,CCyCvC,CEPJ,CpBC8B,CYGR,AQJ+B,CRIjD,GZH0B,CAAlB,GAAkB,AwBxCZ,CPKmB,AOLjC,CPKqD,CAApB,EAAuB,AjBmC9B,CiBnCX,AjBmCP,EiBnCmD,CAAC,AjBmClC,EAAA,CiBnCqC,AjBmCnC,GiBnCb,CAAf,EjBmC0B,CAAS,KAAK,OAAd,EAAuB,QAAvB,EAAiC,MAAjC,CAAlB;AIEA,AK9ChB,AKiEY,AH3DJ,AC0CA,AKtCA,AGkCA,AepCJ,A5B2CgB,Ac3DpB,ArBqDa,AkCvCT,AXFA,AjByBgB,AmBzBS,AvByCrB,AwB1CJ,AvB+BC,AeiBG,AY/CJ,ACEI,AlB2BA,AuBLH,EXxBwB,Eb4CrB,AKtCA,AGkCA,AFOA,GNHG,AQJA,AFOA,CdLK,AQEJ,AQJA,AepCR,A7BqBgB,AYsBR,AY/CR,AjB6BU,CTaG,AOxCJ,ALuBQ,AJgBQ,A6BvChB,CdIC,AVyCM,CHLD,AUmBF,AGvDF,AiBJX,AXFA,AjByBmB,AmBzBM,ACDzB,CtB2CgB,AgBFZ,AKxCqB,AZ6BX,CF3BD,AwBEb,AjCqCyB,A4BzCzB,ACEa,CpBAC,AO6CV,Aa7CU,CzBuBS,AJgBE,AgBMV,ARbJ,AGLM,CCgCT,AqBxDJ,ALJA,ChB4De,AH3DF,AC0Cb,AmB1Ca,CpBAb,ATuCqB,A6BvCrB,C3BwCW,AEjBY,AJgBF,AWZJ,CF3BD,AJ6CM,ADtBE,AYsBR,Aa7CA,AlB2BE,CF3BD,AMIjB,AfmCqB,A6BvCJ,CdIC,AkBDlB,ALJA,C1ByCuB,A+BrCvB,A7BoBuB,AJgBF,A4BxCrB,AjB4Ba,CTaW,AUmBpB,AH3DgB,AJ6CM,AWAf,Aa7CS,AlB2BE,CKkBD,CDzCrB,AiBJJ,A5BuBgC,AmBzBP,AvByCA,AgBMV,CdLgB,AUmBF,AGvDF,AkBDvB,ADHQ,AJDR,C1ByC4B,A+BrC5B,AVLqB,AKCrB,CvB8CY,AmBhDhB,ARgD2B,ALlBI,Ca9BnB,CTOmB,AfmCD,CECM,AUmB5B,AH3DJ,AwBGA,A7BoBuB,AYsBvB,AY9CA,ACCA,CGAJ,CvBAkC,AwBGxB,AVLe,AP+CO,AY9CtB,ACCwB,C3BwCG,AOxCF,AuBAE,A5BuBI,AmBzBhB,AMEU,C3BwCJ,AsB3C/B,CfGI,AYFJ,AQEI,AlB2Ba,CU7BL,AGDyB,Ab8BjC,CF3BmC,AO6CF,Aa7CE,AlBOyD,CTiCxD,A+BrCpC,ALJA,AjB6BA,CTYW,AEjB8B,AJgBzC,CEA4B,A+BpCd,CjCoCO,AgBMO,CDzCL,AMN3B,AL+C0C,CDzCN,AkBDhC,A7BoBmB,AJgBE,AgBMrB,AY9Ca,CPDoB,AjBwBzB,C6BnBW,CjCoCE,C4BzCzB,CbM2B,AkBDvB,AjCoCqB,CAAA,CenCkB,CAAhB,CAAvB,CkBDuB,EjCoCvB,EiCrCJ,AjCqCyB,EAAA,EAArB,EAAsC;AEE9B,AI/ChB,ACAA,AKkEY,AH3DA,AIFR,AH4CI,AILJ,ACjCI,AGmCA,AbMS,A2B9Cb,AZDJ,ACDI,ACCI,AlByBY,AJeP,A0B7Cb,ACAA,A1BmCA,AeiBQ,Aa7CI,AZsCJ,Aa5CJ,ACDJ,A5B8CQ,EWFJ,ER5CJ,AIiDQ,AKtCA,AKNR,AMLA,ACAA,AXoDQ,AepDR,GrBiDW,AILP,AEQO,CdLK,AQEJ,AILR,AIEU,AcxCV,AXFA,AjB0BgB,AYsBR,AcnDR,C5B8Ca,AGEM,AiB5CV,AlByBQ,AHKrB,AgBUa,AdCA,CI9Cb,AEOkB,ATsCD,A6BtCC,C3BwCC,AUmBF,AC7Db,ATyBmB,CcgBL,CTvCG,AuBDjB,AXFA,ACCa,AOEI,ACNjB,A3B6Ca,COGT,AKtCU,AONA,AN+CV,AbNU,COGC,AKtCA,AGmCE,AbME,ADtBI,AYsBR,CdLK,AK/CxB,AKkEY,AH3DY,AC0ChB,AsB1CA,AXFA,AQEgB,ACLhB,ClBgEe,AEtBnB,AQvCiB,AnByCA,CI9CrB,AGiDsB,AILlB,AQvCI,AtBwCiB,ACVzB,AEWQ,COGA,AKtCA,AXmBuB,CFiBZ,AI/CnB,AGO4B,AMIJ,AGmCE,AIzCF,AlByBQ,AYsBR,Aa7CI,A1BuCJ,CDCK,AoB1CJ,AtBwCA,AGCA,CDCN,A8BxCX,AXFA,AJwCA,Aa3CA,CEKA,AXFA,AjByBuB,AJeN,AiBAE,Aa3CnB,ClBgEI,AEtBR,AQvCwB,AtBwCH,AgBON,AbNS,CDCG,AkB1C/B,AEAQ,AN+CqB,CDzCrB,AXmB4B,AJeX,AgBON,CJcc,AEtB7B,AkBrCI,AXFA,ACAuB,AtBwClB,AiBAL,Aa3CA,ClBgE0B,AC7D9B,AKyCiB,AcvCb,AXFA,ACAwB,ALwCA,Aa3CxB,ACFR,CnBkEY,AC7DI,AKyCmB,AS9CnC,AXoD+B,AbNE,CeAZ,AIzCb,AILR,EMOQ,AXFA,ACA4B,AlByBL,AYsBvB,AclDA,CZ4C+B,CcvCzB,AXFA,AL+CsB,AclDtB,CjBGV,ATyByC,EKvBrB,AIFiB,ACuC9B,AerCa,CpBAa,ASuCO,AWvCP,A1BuCT,CaMa,AbNE,CWFvC,AkBrCI,AXFA,ASHA,C1B4ByC,CUcP,AIEH,AcvCjB,AXFA,ASHA,CZ4C2B,AFMb,CP7CO,ASuCJ,AFMO,Aa7CH,CGAnC,AXFA,AjByBmB,AYsBS,AclD5B,A3B4CA,EeA2C,AcvCxB,AXFA,ASHA,A3B4CwB,CWF/C,AIEI,AFMwC,AbNI,CMvCN,AoBAA,CpBAtB,AKqCiC,AkBrCjD,AXFA,AQEgB,ACLhB,A3B4CA,CaMA,CP7CyC,AoBAA,A1BuCO,EMvChC,AoBAA,CGAO,AXFA,ASHA,CrBKsB,AoBAA,GGDjD,AXFA,ASHA,ErBMoB,AoBAA,EpBAoC,AoBAA,EpBApC,AoBAA,CpBAZ,AoBAA;A3BsCwB,AI7CpC,ACAmC,AKmE1B,AH3DG,AIHR,AH6CI,AILA,ACjCA,AGmCA,AezCJ,A5B+CgB,APPR,AsBzCZ,AECY,AlBsBI,AmBvBZ,AvByCQ,A0B9CZ,ACAA,A1BHA,AewDQ,AY9CA,ACCI,AZsCA,Ac9CZ,ApBmCQ,ARYI,A+BjBR,CjCjCJ,CMGmC,A2B8B/B,CjCjCJ,CSqDQ,AILA,ACjCA,AkBNJ,AjB+CI,CJUA,CHvDI,ATsCA,A6BtCA,AZsCA,AdCA,CDFA,AQKD,AILA,AVlBqB,AY0BrB,ACPE,CJzCT,AH6CQ,AILA,AIEE,AFMF,AY9CE,AjB4BF,CsB7BR,A7B0BY,AacD,AdCA,A+BjBJ,CDxBP,AXAc,ALwCF,AdCA,A+BjBJ,C3B9BuB,AKmEpB,AMpBE,ApBDA,AyBzCb,ChBL+B,AO6C3B,AHVQ,CE9BZ,CJGgB,AC0CZ,AQHY,AIzCE,AtBwCF,A6BtCA,CpBAC,AC0CF,AVJE,A6BtCA,AZsCA,CJxCb,AeCc,AjB4BF,ARYR,CmBzCa,AN+CjB,ALlBA,ARYe,C8BzCnB,CxBEQ,ASuCa,AUxCA,ACCb,AZsCI,ANXO,AuBLnB,CzBtBsB,AC0CF,AKtCA,AfkCZ,A6BtCc,AZsCA,CFlCD,AkBND,AnCwCZ,AwBxCiB,AtBwCF,AiBAZ,CJxCP,AfwCoB,AKCA,CMvChB,AIFJ,AfwCI,A8BvCiB,ACCjB,AKsBa,CxBoBN,AOJS,CPIC,AKtCrB,AkBNJ,AnCwC2B,AyBzC3B,AvByCQ,CUIO,AKtCW,AQPd,AvByCgB,CaxCxB,AKyCY,AlBDR,CaxCJ,AKyC0B,CRGH,AQHX,ADFY,AiBf5B,EpCgBQ,AEAyB,AGCd,CI/CY,AMM3B,AH4CA,AKtCA,AGmC8B,ApBDA,AyBzClC,ApB0CkC,CAAf,CI/CY,AMMrB,AH4CsB,Aa7CK,Cb6CjC,APHiC,CHDC,AGC9B,CeA+B,ApBDA,CwBxClB,AnByCmB,CmBzCN,CfNH,AMM3B,ASA+B,AMCd,CrBPU,AW+CG,AlBDD,A4BvCC,CVwCU,AlBDA,CkBCV,AIzCE,AMCf,AzBwCwB,CLDrC,CexCS,AeCqB,CVwCQ,ApBDE,AwBxCd,AtBwCD,CkBC7B,AlBD6C,A4BvC5B,C5BuCY,CazCjC,ASC0C,AtBwClC,A4BvCkC,ENDrB,CxBwCb,AKCgC,CmBzCM,AnByCS,CyBxClC,AzBwCmB,CmBzCnB,CMC4B,AzBwCS,CmBzCR,AnByC1C,CyBxCa,CAAjB,GNDiB,EAAoC,EAApC,CAAb;ApB2CH,AIjDT,AMoEY,AH1DA,ACyCJ,AIJA,AClCH,AGmCG,AerCA,A5B2CY,APPR,AkCtCJ,AZJR,ACEQ,ACAI,AlB0BQ,AmB5BhB,AvB0CK,AwB5CL,ACEJ,ACLA,ACAA,AXsDQ,Aa5CI,AZqCA,Aa3CJ,ACJR,ApBoCY,ARYH,A+BhBL,IxBmBI,AQHA,AO3CR,ATiDQ,CdhD6F,AFkCvD,CEUtC,AFFA,AiBDI,AiBfF,CxBmBC,AQHA,AFMA,ACPE,CPID,AIJE,AICF,AerCE,ADFA,AXFA,AjB0BM,AmB5BhB,ACFA,ARmDQ,AclDE,C1B6BO,AacN,CX/Cf,AGUkB,AJ4CE,AejDpB,AEEkB,AIPlB,ACAA,AEUkB,AEVlB,CnBoEiB,AdrBA,AMdM,AOGN,CGWC,AEOV,CiB3CW,AVNf,ACFA,AMCe,CrBMG,ACyCd,AsB1CY,AXFA,ACAE,AOGA,CnByCH,AIJE,AVdM,CEjC3B,AMoEY,AqBzDU,AbNtB,AGCQ,ACFA,AEJR,ACAA,AGIsB,ACJtB,CnBoEuB,AH1DE,ASsCjB,AcvCe,AXFA,ACAE,AOGA,CvBVzB,AYgDsB,ApBDV,AsB1CZ,AMLA,ACAA,AIAA,CjC+CyB,AMdM,A8BDR,CxBmBC,AIJE,AmBpCA,A5B2CI,AyBlDJ,CrBMG,AuBDF,AXFA,ACAE,AOGA,CXsCrB,AK1CA,ACFA,AU4BkB,CX1BlB,ACFA,AbgCI,CCgCA,AFjBO,AQHS,AbMM,CKHL,ANlBM,AqB5BnC,Cf8CmB,AZJP,AaXoB,CCgCC,AMpBzB,AK1CA,ACFA,AbiCQ,CGUK,ASzCb,ACFA,Cd+CuB,AIJI,AIJsB,AbWrC,CSPC,AIEb,AgBjB0B,CtBoCtB,ARnCmB,A8BDI,CX1B3B,ACFA,Cd+CA,AIJ+B,CLrCd,ALuBmB,AmB3B9B,ACFA,AKMW,ACNH,CrBMY,ACyCG,AmBzCH,ACNF,EGOV,CxBDe,AKqCO,AmBpCT,ADFZ,AXFA,ACAE,AOGY,ACNf,CrBMgB,AuBDF,AXFA,ACAE,AOGA,CnByCI,AY5CH,AlB0BS,AmB3BxC,ACFA,AMA6B,CGOf,ADFC,AXFA,CPwCgB,ASzCjB,ACFA,CV2C2B,AmBpCT,ADFA,AXFA,ACAA,AQHlB,CpB+Ce,AIJE,AVdZ,A8BDD,CxBmBqB,AuBxCzB,ADFC,AXFA,AjByBP,AmB1BR,ACFA,AMAkC,AI4BO,CxBmBzC,AY5C8B,AQHhB,CrBMY,AKqCiB,AmBpCP,ADFA,AXFA,AEDjB,ACFA,AKMO,CpBAa,AKqCvC,AerCuC,ACNF,CrBMpB,AaHqB,AOGrB,CNJjB,ACFA,AU4BkB,CzBtBwB,AoBAA,ACN5B,AI4BlB,CDrBkB,ADFC,AXFA,ACAE,AQHjB,ErBM6C,AwBCF,ADFA,AXFA,ACAA,AOGE,CpBAC,AcJvB,ACFA,AKMuB,CIChC,ADFC,AXFA,ACAE,CWIjB,ADFA,AXFA,CCA+C,CCFnD,ACFA,CDEqC,CAGjC,EdE0C,AaHzB,AOGyB,CpBAa,AoBAA,CpBAb,AaHY,AOGZ,EPHzB,CbG0C,AaHvD,AOGuD,CpBA1C,AoBAA,EpBA6C,AoBAA,EpBA7C,AoBAA,EpBAiD,AoBC1D,CAAC,IAAI,CpBD2D,AoBChE,CpBDiE,EoBCxD,EpBDwD,CAAA,AoBCjE,GpBDiE,AoBClD,CpBDkD,CAAA,EAAG,CAAH,CAAD,AoBC3C,CpBDZ,AoBCa,CpBD1B,GoBC0B,CAAA,GAAA,CAAA,CAAA,EAAG,CAAH,CAAD,CADZ,CAAb;AvBVmB,ACC3B,AKoEQ,AC7DJ,AH4CA,AIJA,AClCP,AkBDO,A5B0CS,APPR,AkCtCD,AZL4B,ACG5B,ACAI,AlB0BQ,AqB7BpB,ACLyC,ACAD,AXuDhC,AY/CA,AXqCwB,Ac7CO,ApBsCnB,AuBLhB,E5BjC2B,AcKK,AMLK,ACAD,AIAD,AGiCnC,ExBmBI,AMGA,AY/CA,CXqCA,EPOG,AMGA,CH/CG,AH4CF,AIJE,AmBnCA,ADHA,AXFA,AjB0BM,AYqBR,ALjBQ,CPJC,AwB1BT,AjB8BS,CW9BH,AMAL,CtBRkB,ACC3B,AKoEa,AErBA,AM3CmB,AhB6Bb,AsBlCkB,ACAD,AIAD,ApBsChB,CLtCQ,AcKK,AMLK,ACAD,AIAD,CEapB,CvBuCX,AIJY,AkBtCA,AXFA,ACAE,AN+Cd,CNHW,ANlBQ,AHGZ,AUCY,AuBLV,CtBoCL,AqBxDU,ACoBJ,CtBoCK,AoB3DA,AXFA,ACAE,ANgCgC,CAiBjD,CHjDiB,ACwCA,AVdM,AOIA,CC+BnB,AFjBY,AuBvCE,A7BqBM,AwB1BxB,AjB8BwB,CqB5BL,AXFA,ACAE,AMAL,CfAI,CD6DC,ARnCE,CMkBZ,ACdY,CDcF,AkB5CrB,AMyBJ,CrBzB4B,AH4Cb,AY5Ce,AlB0BE,AwB1BP,CdwCT,AQxCe,AX8BE,CLtCN,AMqEnB,AErBsB,AQxCA,AYyBJ,CxBmBC,AIJX,AQxCK,ChBRM,AgBQO,CfPlC,AeOmC,CfPvB,AO+CsB,AVdP,CMkBvB,AU/C4B,ATiCL,CsBzBT,AXLkB,AMAhC,ClB4C6B,AuBvCL,AbRI,AhB6BS,CElCd,AyBAQ,ApBsCO,CLtCf,AQgDY,AQxCL,AKRE,CpBCpC,A0BYkB,ADHC,AXFA,AKRkB,AKAF,CCUH,AXFA,AMRI,CpBCC,AGmDC,AuBvCL,AXLS,AIRL,CZgDH,AM3CF,AhB6Ba,CUcD,AkBtCzB,AZLa,ACGb,ACAE,AX8ByB,CE9BtB,ACwCU,AmBnChB,CpBLmB,AH4CJ,AuBvC7B,ADHiC,AXFA,ACAS,ASRX,CrBoDQ,ANlBpB,AuBlCa,AIAD,ClBQX,AH4CpB,AIJ0C,AkBtC3B,AXFA,AKRkB,ACAD,AhBsCb,CGUnB,AQxCiB,AIRgB,AfqCzB,CE7B6B,AmBEA,AXFA,CCAU,ETA3B,ASAH,ETAyB,AmBE3B,AXFA,ACAoC,AYyBvD,CZzBqB,CUE2B,AXFA,ACAxC,EUEW,AXFA,CRAK,AmBEpB,AXFA,ERAiD,EAA7B,CAApB;AD8DI,AH3DA,AIFJ,AH4CA,AIJA,AICA,AbMK,A2B7CL,AXFA,ACAI,AlBuBI,AoB1BR,ACDR,AIOY,AZsCJ,Aa7CA,AnBkCY,ARUZ,A+BfJ,IxBmBI,AIJA,AICA,AY7CA,ErBMI,AaFA,AOGA,AKsBF,CxBmBC,AIJA,AICA,AbRC,ADfoB,CSlBlB,AH4CF,AIJA,AICA,AcvCE,AXFA,AjBkBF,AoBrBE,AbiCM,ARUN,CcCD,Aa7CD,AnBkCS,CW9BL,AGJhB,AKAa,ClBiEI,AH3DD,AaFC,AOGD,AlB2BO,CF5BN,AoBCA,AKsBD,C7BsBG,AmBlDA,CQKC,AXFA,CRAC,AF8BM,AuBLR,CtBoCP,AYhEU,ACDtB,CbiEuB,AFjBf,AIJA,AICA,AcvCe,AXFA,AlBwCA,CUxCC,ACwCF,AW5CtB,CR6CQ,ANXuB,COWP,AM5CE,AMDlB,AnBkCwB,ARUN,CSqBd,AoB3De,AXFA,ACAf,AQJY,CrBMZ,AIFgB,ACwCpB,AQxCoB,AOGhB,AZsCc,CRvCE,AoBCA,AlB2BG,CC+BD,AErBF,AGCpB,Ca7CA,A3B4CuB,CmBxCnB,AQJiB,AnBkCO,CF5BxB,AKsCJ,AQxCyB,AOGrB,AKsBmB,CzBvBE,AoBCA,CjB0DrB,AE1B6C,AoBVrD,CpBgBI,CQzC6B,AQJ7B,CrBMI,AoBCA,AlB2BmB,EajCT,CAAU,AbiCa,CRUnB,CAAiB,C6BtCpB,AXFA,AGHD,CXGE,AmBEY,AXFA,CRAC,AWHA,EXGb,AmBED,AXFA,AV8B2B,CajC5B,CXGmB,AmBEA,AXFA,ACAR,CAAS,AEHA,CXGlB,AWHF,AbiCK,CqB5BJ,AXFA,CRAsB,AWHA,CN4CH,AcvCI,AXFA,ACAb,CnBwCP,CmBxCsB,AEH1B,ArB2CmC,CmBxCxB,CTAT,AWH0B,CQK3B,AXFA,ACA4B,CTAC,AKyC5B,AIxCR,CJwCR,AcvC6C,AXFA,AGH/B,ArB2CwC,CUxCtC,AWHhB,CXGA,AmBEe,AXFA,CWEf,AXFA,KlBwCkB,CAAlB;ADEA,AIlDJ,AMsEQ,AH3DH,AIFD,AH4CA,AKtCR,AGmCQ,AerCA,A5B2CQ,APPR,AkCtCA,AZNJ,ACII,ACAS,AlB2BR,AmB5BD,AvBwCA,AyB5C4B,ACJhC,ACAA,AXyDI,AYhDA,ACGC,AZsCJ,AclDD,ApBoCY,AuBFZ,ET9BgC,AS8BhC,ExBmBI,AKtCR,AGmCQ,AerCA,AjB4CA,CZhCA,EM4BG,AQHA,AFOA,ALtBqB,CE1BlB,AH4CF,AQHA,ApBDA,AkCtCE,AXFA,ACAG,ACDH,APiDF,AYhDE,C1ByCD,A+BrCD,AXJM,AX+BF,CsB3BH,C3BbT,AMsEa,AQjEb,AEIgB,AlB2BL,AJYA,AyB5CqB,ACJhC,ACAA,AIAA,CrBqDI,AejD4B,CFIjB,EzByCA,AkCtCE,AXFA,ACAG,AtBuChB,AkCdS,CtBoCL,AU7Da,ACDH,AW0BJ,CtBoCK,AC7DA,AKyCf,AFOA,AYhDe,CIEC,AXFA,ERAE,AEM1B,AkBFQ,AnCoCgB,AyBzCE,APiDF,AYhDE,CKIF,C/BqChB,A8BvCoB,AXFA,CnByCD,CUoBf,AC7DkB,ASAV,AMAU,CKItB,AXJ0B,CWIL,AXJT,ANgDU,CdPtB,AIlDJ,AMsE6B,AsBpC7B,ChCgB4B,AIlDhB,AMsEkB,AsBpCJ,CtBoClB,AU7D0B,ANgDL,EiB5CzB,AnCoCI,AwBxCI,CFJZ,CAAY,AKDoB,CnBJhC,AiBQkB,AW0BlB,CX1B4B,AEJI,AMJhC,CzBAqC,ARiDD,A6BjDpC,AIAY,CLAZ,ACAY,CJQM,AGRN,AVyDc,CIpD1B,CYMoB,AXFA,AEDa,CVCX,AmBEY,AZNG,ACIH,AILF,ATqDS,AYhDnB,CfAa,AYLH,AGKG,AGTnC,CRQkB,AIRlB,CNSoB,AKTpB,AKAqC,ClBSf,AUDgB,AIRD,ACSf,C9BwClB,AuBxCmC,AEDrB,AGRmB,CbSG,AmBEA,AJFA,C9BwCQ,AkCtCP,ATHA,CVCnB,AQAF,AOAE,CZgDlB,CHhDwC,AQAA,AED1B,AKC0B,EPAxB,AED0B,CFC1C,CEDc,CVCI,AmBEY,ATH9B,AKCkB,CIE4B,CnBFC,AmBEjB,AJFiB,EfA7B,AeAA,CfAlB,AmBEkD,AJFlD,CIEgB,EAAqC,GAArC,EAA0C,EAA1C,CAAhB;A9BwCI,AKnDR,AKuEQ,AC3DJ,AH0CA,AIJA,ACnCR,AGoCQ,AbMQ,APPJ,AkCtCJ,AZPJ,ACKI,ACDkC,AlB4B9B,AmB5BJ,AvBwCH,AwB3CG,ARoDA,AcpDA,AnBmCY,ARQZ,A+BdJ,EAAA,ClCIA,CUeI,AIJA,AU5CA,ARoDA,EdPI,CAAC,AQGF,AIJA,AEQA,CT1DP,AMYU,AH0CF,AIJA,AICA,AbMI,A2B7CF,AZPV,ACKU,ACD4B,ACA5B,APiDF,AcpDA,AnBmCQ,ARQR,CDEG,AgBAF,AI1C8B,AEH/B,AbmCS,ARQR,A+BdF,ChCgBK,AsB7CH,AU6BD,CtBoCK,AdrBA,AwBzC4B,AlB4B5B,AOIM,COUP,CXnDZ,AaKA,CViDI,Aa7CY,AOHF,C5B6CG,A8BvCA,AXFA,ACD4B,AXgCtB,CJxCnB,AWkDY,AE7CZ,AEG0C,CZ6BO,AIYjD,AICa,AK1CE,AOHF,CpBkDb,ALCkB,A2B7CF,AXFA,AlBuChB,CDEQ,AUoBJ,AIbJ,AcpDA,AnBmCuB,CTUL,AWvCA,ACsCF,AICR,AM7CR,ArB2CgB,CDET,AgBAU,AK1CE,ACHH,AU6BpB,C3BlCI,AFwDsB,APPlB,AkCtCgB,AZNpB,ACIoB,ALgDF,AkBvBF,C3BlChB,AMWqB,AONrB,AhB+BI,CFcgB,AoB1CiB,CAAc,AEHnD,CN6CsB,AI1Ce,AlB4Bb,AoB/BH,AbmCO,CJxC5B,AMWyB,AR6CjB,AenDR,AhB+ByB,CGpCzB,AaKA,ClB4CwB,AoBzC+B,CJ0CtC,CAAU,AM7C3B,CjBLA,AWkDiB,AE7CjB,ATmCuB,CavCU,CjBD3B,AaKA,AIEN,CN2C+B,APVM,AuBNzC,GhBgBY,AK1CO,CAAa,ChBR5B,AWkDoC,AcvCpB,AZNhB,ACIgB,CWEc,AXFA,AV+BW,CJxC3B,AaKA,ECIE,AEDiB,ChBRjC,AWkDyC,AE7CzC,AGGkC,AZgCf,CU/BgB,AV8B3B,CJvCW,AMWE,AmBAe,AZNjB,CPMgB,AmBAE,AhB8CJ,CFRC,AICE,AGzCpB,CdThB,AMWqB,AKuCyB,AE7C9C,CF6CoC,AGzCI,CRED,CQFvB,AEDY,CL0CsB,AGzClD,AED2C,APiDzB,CTzDK,AMWF,ACsCL,AM5CO,AGGK,APiD5B,CFRA,AkBtC8B,CnBAc,AKuCpC,AcvCsC,CduC9C,AcvC8B,ATHiB,ChBTnD,AMYyB,AOPzB,EPOoD,AmBAE,CnBA7B,CAArB,AmBAgB,ATHoC,CAAC,CSGC,GAAtC,EAA2C,EAA3C,CAAhB,GTH+C,CAAmB,CAAnB,EAAsB,CAAtD,EAAyD,EAAzD,EAA6D,KAA7D,EAAoE,EAApE,CAAf;ArB2CI,AUoBH,AH3DD,AKsCA,ACpCR,AGqCQ,AetCA,A5B4CK,APPJ,AkCrCD,AXFA,ACHQ,AlB6BA,AmB5BR,AEKJ,AT4CI,AYjDA,ACIA,AZwCJ,AahDI,AnBoCY,ARQR,A+BbR,EjBiBA,EHHI,AmBrCA,AjB6CA,AYjDA,CnBGA,AoBCA,C3BsCI,ACFA,A+BbF,ChCeG,AOvCL,AKsCG,AQ3CwC,ANmDxC,Aa7CH,CfqCI,AICE,ActCA,AXFA,AjB0BE,AmB5BF,APiDF,AcrDa,AnBoCL,CTUL,AgBAA,AetCF,AXJG,AlB4BC,AwB5BL,AjBgCS,CF7Bb,AMER,AkBDc,ALJD,ACIL,CzBwBW,AqBvBf,Ad2BmB,COUL,ActCA,AfwCd,CI1Ce,AJ0Cf,AdJe,CoBxCC,AOJW,A3B4CX,CMrCR,AuBCS,A5BwBE,AyBxBX,AlB4Be,CF7Bd,AMEb,AMHsB,AQET,CfqCL,AICe,AK1CA,APiDf,AcrD0B,AI+Bb,CnBtBrB,AXuB0B,C4BxBD,AFRjB,AnBoCuB,ARQnB,C8BpCJ,AZFkB,AOFlB,AjBgCwB,ARQN,A+BbF,ChBeN,AetCO,A7BwBN,AmB5BQ,AKAH,CV0CI,ADExB,CCFI,ADEJ,ANZ2B,CPJD,ADYlB,A+BbgB,CDvBpB,ALJA,CnBGA,AwBCsB,ALJD,ACIrB,AlB4B4B,ARQJ,EMrCR,ALwBS,AyBvBT,AKuBA,CjBiBpB,AiBjB6B,CDvBC,AZFZ,CAAQ,AlBsCO,CMrC7B,AgBEJ,AIDI,AZwCJ,ANZ2B,CF7BH,AuBCP,APCL,AIDY,CGAK,CJJzB,AjBgCqC,AuBLrB,CAApB,CbzBgC,CZC5B,AYD6B,AEFd,AMIf,CpBDoB,AcHQ,AEKhC,AIDwB,CGAW,CvBD/B,AuBCgC,APCC,AIDjC,CZwCG,ANZuC,ARQtC,CMrCoB,AwBCF,AJAE,CIAO,AVJE,ApBwCS,CoBxCR,AN4CtC,CI1C0B,AV8BH,CU9BmB,AJ0CJ,CI1CpB,CYEQ,ADAG,A7BoCsB,C6BpCN,AXFA,CZCzC,AwBCsC,ADAb,AHAzB,CIAsB,CVJM,AN4ChC,CgBxC6C,ADAI,ATJF,CUKvC,AVLwB,AN4CqB,CexCpC,AXFkC,CAAC,AlBsC5C,C6BpC6C,ATJF,GSIlC,EAAyC,ATJF,CAAC,CSIxC,AXF4B,CAAgB,CWEC,AXFjB,CWE5B,CAAb,CXF6D,EAA/C,EAAmD,EAAnD,AEFiC,CAAmB,CFEG,AEFtB,CFEjC,CAAd,AEFqE,CAAtD,EAAyD,EAAzD,EAA6D,KAA7D,EAAoE,EAApE,CAAf;ArBwCwB,AIlD5B,ACGI,AKsEH,AC5DG,AH4CA,AILA,ACrCuB,AGqCvB,AerCK,A5B4CJ,APPJ,AkCrCG,AZPA,ACKA,ACHS,AlB6BD,AmB5BR,AvBsCH,AyBlCD,ACfA,ACAA,AX4DI,ACLA,AcvDJ,ApBwCY,ARWP,A+BbL,EnBvB2B,AmBuB3B,CtBuBA,Ad7BA,CenBI,AmBEA,AXFA,AL+CA,ACLA,CfLA,C+BnCK,CAAC,AjB6CH,ACLA,ANpBqB,CLnC5B,ACGU,AGsDA,AILF,AIAmB,AcrCnB,AZPE,AEEG,AlB6BD,AmB5BF,AEIV,ACfA,ACAA,AX4DQ,ACLA,AcvDR,ApBmCQ,CEtBA,ACuCC,AIAmB,AerChB,ADAH,AXFA,ACHK,AlB6BD,CS1BJ,AH4CG,AW5CF,CNEiB,AOLX,AlB6BD,AYqBX,CFRQ,ACrCe,AGqCI,AFQnB,ACLR,CXvDJ,ACGe,AGsDA,Ae1Cf,ACfA,ACAA,AIAA,AGsCW,CDvBM,AbPD,Ac8BJ,CDvBM,AXLE,AlB6BD,AmB5BF,CjBVb,ACEc,AOiDF,AQ1CK,AGMjB,ACfA,ACAA,AIAA,CjBmDa,AIAmB,AE5CjB,AJoDF,CNHG,ANlBE,AmB5BF,CSIhB,A5BwBmB,CGpCD,AMUlB,ACuCQ,AkBrCQ,AXFhB,AayBJ,CrBzBoB,ACuCC,AIAU,AE5CR,ACKF,AL+CT,CV3DR,AIwDW,AQL0B,Adb1B,AmB5BS,AEKpB,ACfA,ACAA,AX2DkB,Ae3DlB,CzBAA,AIwDqB,AQLrB,AerCQ,ARCR,ACfA,ACAA,AX2DQ,Ae3DR,CrBwDA,AuB1CuB,ADAvB,AVLY,CTGZ,AoBEI,ADAiB,AXFrB,ACH0B,AlB6BH,CS1BF,ACuCC,AOvCA,ACHd,ANkDc,CV3DtB,AmBeA,ACfA,ACAA,AIAA,CzBAA,AScuB,AUCvB,ACfA,ACAA,AIAA,CCcyB,ClBqCR,ACrCM,AMFG,AL+C1B,CFR2B,CRnD3B,AQmDiB,AWpCjB,ACfA,ACAA,AX2D4B,Ae3D5B,EzBAM,ACEQ,AkBaR,ACfA,ACAA,AIAA,CxBEkB,AOiDO,CCrCR,CAAA,AC6CU,CTzDnB,AMUd,ACuCQ,AM5CO,CAAa,CdP5B,ACE6B,AOiDO,ASzCpB,AEKhB,ACfA,ACAA,AIAA,CXOe,AGGe,APiDF,CV3Dd,A0BcO,ANdP,ACAA,AX2DwB,Ae3DxB,CxBEA,AyBYgB,AZPE,ACKV,AL+CM,CK/CG,CfZ/B,ACEkC,AOiDO,AM5C1B,AKQF,ACfb,ACAA,AIAA,CxBEc,AgBQqB,APiDO,CV3DvB,ACEnB,AaKoC,AGGA,AGVjB,ACAA,AIAA,EjBmDiB,AkBrCf,APAzB,CnBdI,AQmD8C,AOvCxB,AKZtB,ACAA,AX2DA,Ae3DA,CjBmDoC,AkBrCE,CAAjB,AZPN,ACKwB,AL+CS,CgB7ChD,AXFsB,CPuC4B,AM5CP,ACK3C,CfZuB,AiBUO,AGVP,ACAA,AIAA,CXOR,AGG8B,CTyCrC,AM5CR,AGG8B,APiDuB,CFRrD,CRpDJ,AoBAA,ACAA,AIAA,CRWqD,CPiDD,CAAU,CAAV,EOjDM,CAAC,APiDO,IAA9D,EAAoE,MAAI,COjDvB,CAAoB,CAApB,CPiD2B,COjDJ,APiDK,COjD7D,CPiDoD,COjDO,EPiDK,COjDhE,EAAgE,APiDhF,EOjDgB,APiDqE,COjDrF,KPiDyF,IAAI,CAAC,EAAT,GAAY,GAAjG;AdLA,AOzCA,AC4CA,AILA,AIAA,AetC0B,ADC1B,AZPA,ACMA,ACL6B,AlB2BJ,AmBzBzB,ACHA,ARoDA,AYjDA,ACGA,AZ0CA,AalDA,AnBsCC,AuBNL,EAAA,ExBmBI,AQLA,AcrCA,AhB6CA,CP/CA,AoBCA,AlBmBA,CsBnB0B,CxBD1B,AC4CG,AQLA,AetCwB,A7BsBH,AYwBrB,Aa9CH,CnB2CI,AILE,AIAF,AcrCA,AZPE,ACMA,ACLuB,AlB2BzB,AmBzBE,ACHA,ARoDF,AYjDE,AX6CA,AiBlBJ,ChCgBG,AYFE,AmBtCsB,ADCxB,AVNyB,AQHzB,AIgCF,CzBzBH,AoBCA,CPLgC,AXmCzB,CGQG,AOtCA,AL8CV,ACJU,CalDD,CZ8CT,AetCkC,AbNtB,AQGA,AELF,CrBON,ASuCO,AetCwB,AZAtB,ACLuB,ACEvB,ACHA,AKMT,AZ0CS,CR3CR,ASuCO,AI3CyB,AOKhC,CnB2CL,AILe,AM5CA,AQGA,AELF,CPKG,ACHA,AMFhB,C5BgDA,AgBFa,AcrCb,AXDiB,CX2CD,AsB1CA,AfyCE,AalDF,ChB8CN,AM5CS,AQGA,AELF,C5BgDC,AYFE,AIApB,AKzCoB,ACHA,CV4CpB,AmBtC6B,C/BwC7B,AgBFkB,AetC0B,ADC5C,AVNgC,AQHZ,CZ8CpB,AcrCqB,AVNyB,AQH9C,AIgCJ,CZ7BoC,AY6BZ,CJhCG,CbkDV,AalDW,CESC,AVNyB,AL+CvB,CAAd,AalDb,ErBOA,AoBCA,ACR4B,CTQf,AJ0CkB,AiBlBnC,CzBzB0B,AYCG,AQAH,CKwBO,GzBzB7B,AWLe,ASMf,AZ0CoC,CR3CV,AWLE,AIAZ,AKMU,CRAK,AEHf,ACHa,AIGd,CPGiB,AEHF,AKAA,ClB8C9B,AsB1CqB,AZPN,AHgDgB,CezCD,ARPd,APgDyB,CR3CzC,AWLiC,AQGlB,ACGf,AZ0C+B,CR3CL,AeLQ,AKMR,AKwBY,Cd9BvB,AGGoB,AKAA,CnBEnC,AcFoC,ACHpB,AKMhB,AZ0C2C,CGhDN,AHgDrC,CR3C8B,AuBET,AXDI,AGNa,AIGvB,ACGe,CRAW,AawBZ,CFvBS,AXDb,AOHe,CIInB,AEuBsB,Cd9B5B,AQGA,CII0B,AXDI,AGN7B,AIGhB,CIKI,AZRwC,AGGd,CFGjB,AEHgC,ACHA,CfK7C,AWLe,AGGe,AMG9B,CTNA,ACMiD,AGNjC,CAAhB,CDGiD,CFGpC,EAAyC,EAAzC,AEHyC,CAAC,CFGG,CAA7C,CAAb,UEHiD,CAAoB,CAApB,EAAuB,CAAxD,EAA2D,GAA3D,EAAgE,EAAhE,CAAhB;ArB4CH,AIrDG,ACCA,AKuEJ,AC7DI,AH6CA,AINA,ACnCJ,AGoCI,AevCI,A5B6CJ,APNJ,AkCrCS,AZPL,ACMA,ACNQ,AlB+BP,AJUL,AwBxCI,ACCJ,ACTI,ACAA,AX2DA,ACJA,AalDI,ACLJ,ApB2CI,ARMJ,A+BZA,EtBmCJ,AdrBA,AEHA,EO/CI,AMUA,AH6CA,AQLA,AGtCA,AIJJ,ATkDI,AbVA,A+BZA,CD1ByC,CAAnB,ADGjB,CtB0CF,AQLA,AexCH,ADGM,AVTqC,ANsDxC,AbVA,CGjDG,AIwDF,AINmB,AICnB,AbMA,AelDE,ACMF,ACRqB,AEGrB,AERE,ACAA,AX2DF,ACJE,AcvDA,A5BiDF,CIhDA,AOiDoB,AkBpChB,AXDH,ACRD,AGIR,ClBRS,AP+CT,AyBvCA,AKJc,CfUd,AfiCA,AiBOa,ANZA,CGOkB,AYlDjB,CpBAC,AYmDX,ApBAJ,AkCrCgB,ALdD,AGKE,ACLF,CbmDD,ApBAd,AkCrCiB,AZPD,AICF,ARmDV,ACJY,AdNZ,CSuBJ,AMrBe,AQnDE,AvBiDF,A+BZA,C5BrCG,AMwElB,AC7DgB,AcXE,AGKE,ACLF,AGqCF,CrB1BC,AH6Cb,AINgC,AM3CjB,AICF,CN2CD,AO1ChB,CpBgDmB,AgB5Cf,AGLA,AP+CiB,CXvDC,ACClB,AcYgB,ArBmCpB,A2BhDsB,AGKE,ACLF,CxBCF,AOiDW,AIC3B,AE5CmB,ApByCvB,AyBvCoB,CXyCqB,ATOnB,A2B3CV,ClBoCR,AICiB,ApBArB,AkCrC0B,ArB6BlB,AuBNJ,ChBcA,ApBAJ,AkCrCY,AXDR,AlBoCoB,A+BZA,C3BpCpB,AKuEJ,AS3DyB,AIJzB,AtBwCyB,CIhDA,AKuEzB,AMrBwB,APRI,ARMb,CUtCX,AEIJ,AGoCyB,AcrCK,AfyCd,ANZa,CEhCD,AEIhB,AV0CgB,AYFE,CZED,A2B3CrB,AXDqB,ArBmC7B,AiBOgB,AdNa,A+BZA,ChBcH,AgBdI,C3BpC1B,ATkDJ,CexCI,AbqCJ,AiBOkC,CJ5CD,AKwC7B,CZnDc,AMwElB,AGzDA,AjBoCA,A6BnDkB,AIAA,A5BiDgB,CGjDN,AYmDG,ASnDH,AIAA,ChBeS,AGoCL,CNqBhC,AC7DqC,AI4CE,AalDnB,AIgChB,C5BrCc,AcOC,AOPD,AGKe,ACLf,CbmDe,AbML,AelDI,Ac8BO,C5BrCN,ADyD7B,AsBzD6B,AIAA,C1BgCjC,AYuBkC,CCJ9B,AbOA,AenDe,ACMM,ArBmChB,AiBOmC,CXvD1B,AeagB,ArBmClC,A2BhDkB,AVuDgB,AalDI,ACLpB,CbmDoB,ApBA9B,AsB5C6B,AUFE,AIgCK,C5BrCN,AYmDlC,AlBHiB,A2BhDiB,AIAA,A5BiDT,A+BZgB,C5BrC3B,AqBAA,AVuD4B,AcvD5B,A5BiD4B,CGjD1C,AcOe,AOPf,AVuDA,AcvDA,CVaqB,AJsC4B,CLqBrD,AQjE0C,AHiDtC,CJ7C6B,AQEQ,CRFC,AfwC1C,AuBtCyB,CAArB,ASR6B,AIgC7B,CpCcqB,AgC9CuB,CVE7B,AUFc,A3B4CJ,CAA0B,CiB1CN,AjB0C7C,C2B5CgD,CVEjC,AjB0CuC,CiB1CtD,CtB4CJ,EexCiC,AfwCO,AgC9CiB,CAAC,CjBMH,CAAtB,EAAyB,AVsCS,CUrC3D,AVqC4D,CAAV,GAAc,G2B5CpB,CAAmB,C3B4CM,G2B5CJ,CAArB,EAAwB,CAAxD,EAA2D,EAA3D,A3B4CoD,C2B5ChE,A3B4CiF,QAAjB,CAA0B,CAA9F;ASwBA,AH5DA,AIDK,AH6CL,AINA,ACpCJ,AGqCI,AerCA,AnCqCA,AkCtC8B,AZN9B,ACMA,ACLI,ACCJ,AvBuCA,AwBzCA,AERc,AV4Dd,AYlDA,ACIA,ACRI,AnBsCI,ARMR,A+BZH,GAFD,CxBqBI,AINA,AICA,AGtCA,AEJA,AKAA,AzBwCA,C+B/BuD,CrBPlD,AmBEyB,AVL1B,AITU,AIMV,AIkCR,CrB5BU,AH6CH,AINA,AICA,ActC4B,A7BoC5B,CMrCG,AC4CF,AINA,ACpCR,AGqCQ,AerCE,AnCqCF,AsB5CE,ACMF,AGNa,AKMX,AlB8BE,ARMJ,CSuBC,AC7DG,AmBEyB,AXA5B,AEJD,AKAA,AjBkCK,CWnCD,ACCH,AKAA,ClB+CL,AYhDS,AtBwCF,A0BjDY,AIMV,AnBsCE,CDaH,AoBnDE,CfSd,AGqCI,ActCqC,ANdhB,CdyErB,AFhBU,AINV,AICU,ActC4B,ARNf,ArB0CvB,CSuBW,AH5DE,AKsCF,AICA,AE5CE,ASMA,AlB8BE,CGOH,ACnCZ,AfiCY,CUQD,AuB1CI,ATPW,CfKV,ASuCJ,AE5CI,ASMA,AlB8BE,CGOL,AhBCE,AuBtCf,AGNA,CSOkB,AZDF,AEJhB,AKAA,CfEoB,AH6CpB,AQLA,AI3CI,ACCY,AvBuCT,A4BvCS,AjBkCL,CC6BX,AH5DoB,AIDC,ACuCrB,ACnCA,AjBoC2B,AkCtCM,AZNb,AECA,AtBwCF,A6BnCE,ACRhB,CpBmDa,AKzCjB,AGoCiB,ActC8B,AFR1B,CpBmDrB,AINkB,AICA,AerCI,ADDW,AXAjC,AV8BsB,CGOtB,AOrCqB,AEJrB,AKAA,ClB+CoB,AYhDhB,ACCiB,AvBuCrB,A4BvCqB,CbMrB,AGoCmB,ApBAnB,AkCtCmD,AVL1B,CZgDH,AKzCtB,AJ2ByB,CU7BA,CRFjB,AKwCR,AY9CI,CjBM0B,AH6CP,AYhDM,ACC7B,AOJ6B,CjBMzB,AEIJ,AGoCwB,AU1CxB,CV0CyB,AK1CG,CRMtB,CLyCN,AoBnDiC,CZ8CP,CRKG,CD5Cb,AC4ChB,AmB3CgB,CpBDY,ASuC5B,AK1CA,AMI4B,CnB2CI,AKzChC,AKRgB,CF4Ce,AE5CD,AGEM,CdGpB,AMGF,AGoCkB,AerCd,AZDG,AQAL,CICgB,AZDF,CZDG,AC4CG,AYhDX,AOKQ,CnB2CI,AKzCrC,AGoCiC,AI3CC,CWMhB,CxBFF,AC4ChB,AKzCmB,AKRiB,AGEpC,AMIgB,CXsChB,AerCqC,AbPA,AUFR,CrBOS,AYCjB,ACLI,ACCmB,AMIN,ACRA,CfUtC,AGoCsC,CAAtC,AerCkB,AZDoB,ACLE,CDKnB,ACLI,AQHI,CGSa,CAAxB,AZDuB,ACLE,AQHA,CfUpB,AkBDvB,AZAI,ACLI,AQJqB,CVEC,AGE9B,AOJI,CrBOY,AWL8B,ASM9B,CTNc,AGEuB,CdGL,AMEpD,AcDoD,ETNE,CAAlC,EXKA,AWLqC,CGErD,CdGuD,CWLvC,CXKA,AoBCA,CpBDhB,AWL0D,CSMC,CTN3C,CAAhB,ASMgB,CAAhB;A3B2CJ,AIxDI,ACEA,AKuEA,AC9DiC,AH8CjC,AINA,AICA,AerCA,A5B2CA,A2B7CI,AZLJ,ACMK,ACLI,AlB8BT,AJUH,AyBgQD,AClTiB,ACCb,AVwDA,AcxDA,ApB4CQ,AROR,EDKJ,CFTA,CM/CI,AMyEA,AFhBA,AINA,AICA,AerCA,ARkSJ,AEjTI,AVwDA,AcxDA,A5BmDA,C6BvCyC,ANbzC,CbYiC,AmBCZ,AXEhB,CnB0CT,AW7CsC,AH8C/B,AINA,AICA,AcxCH,AXEM,AJ0CH,AdLA,CDKP,AKtDQ,AGuDA,AINA,AICA,AbMA,AelDE,AECG,AL+CL,ANZI,AROJ,CGnDA,AOWgC,AQG5B,ACLE,AlB8BL,AqB0QT,AEjTQ,AIAA,ApB4CK,CL5CJ,AmBiTT,AEjTS,AIAA,CnByEE,AUhEK,AXmCD,CC6BH,AFhBR,CINA,AICA,AerCS,AZDG,CdZF,AOiDA,AICA,AerCA,AZDG,CT2Db,AEtBW,AICX,AE5Ca,AECG,AXmCD,CC6BH,AUhEK,CpB+CrB,AKtDiB,AWkDA,ADIb,AdLA,CDKJ,AYLgB,AICE,AE5CE,AToCE,CJ1ClB,AFwDe,AMdI,CL5CnB,AOW+C,AcX/C,AVwDgB,AcxDhB,A5BmDgB,CGnDA,AOWgC,ACwChD,AICe,AO6PnB,AEjToB,AIAA,A5BmDhB,CiB3CoB,ACMZ,AjByBR,AOKW,CGOM,AOrCK,CnB0C1B,AYLI,AICA,AerCA,A5B2CoB,AgB5CZ,ACLI,AGwSF,CnBjTV,A2BeqB,AXNK,AlB8BL,AuBvCrB,AIAA,ApB4CuB,CL5CF,AQmDD,AICA,AI3CR,AlB+BR,AuBxCiB,AIAA,C7BwDzB,AYLyB,AICrB,AbMI,AgB5CsB,ERHU,AKyCb,AerCvB,AZDI,ACL0B,CVgE9B,AC9DyD,ACwCnC,AICE,AerCE,C3Bf1B,AOWI,AR+CuB,AiBjDnB,AKTR,AIAA,CnByE4B,CEtB5B,AICyB,CerCK,CnBoCH,CAAC,AIC5B,AbMgC,AoBuPtB,CvBzPP,AUiB8B,CMrBH,CJDD,AIC7B,ChBIJ,AkBhDoB,CAAc,ClBgDI,AUiBN,AEtB5B,CFsBuC,CEtBL,CAAlC,CTO2B,C4B3CD,A5B2CiB,AelDP,ClBgDxC,A+BzCuC,AbPE,CHgDH,CfAe,AUiBjD,EPfgD,C4B3CtB,EAAgB,AhByC1B,CgBzCU,AbPI,AHgD9B,CGhD8C,CaOD,AbPf,CaQ1B,EbR8C,CfkDP,CAAgB,AelD3C,EAAsC,GAAtC,CfkD2B,CelDgB,EfkDS,AelDpD,CfkDW,AelD3B,EfkDuE,KAA5C,CAAkD,IAAlD,CAAuD,CAAvD,CAA3B,EAAsF;AHDtF,AKtDA,AEUA,AIF4D,AH+C5D,AINA,ACxCJ,AGyCI,AerCK,A5B2CD,APPJ,AkCpCA,AZNA,ACI8B,ACLI,AlBgC1B,AmB/BR,ACFA,AC0SA,AClTA,AEWA,ACGA,AZ2CA,AanDI,AnBoCqB,AuBF7B,IhCiBI,AO5CA,AC6CA,AINA,ACxCJ,AGyCI,AK3CA,AKCA,ACGA,AZ2CA,EJ9C4D,AoBKvD,A5B2CD,AgB7C0B,AjB2BtB,A0BnCJ,AIkCJ,ChCiBG,AQCA,AINA,AICA,AerCG,AZFyB,AjB2BtB,AagBN,ANfqB,CTepB,AKtDA,AGuDA,AINA,AICA,AcrCE,AZNA,AED4B,AIT5B,ATyDF,ANfA,CF7BA,AMDR,AkBIY,AnCoCH,AuBtC4B,ACLE,AlBgCxB,AmB/BN,ACFA,AKMD,CpBDC,AIF2D,AECpE,AQFU,AEwSA,AGvSA,ACGD,CPLgC,AME9B,AELC,C5BmDR,AW9CkE,AmBKxD,AZNA,AMVA,AIMD,ChB8CT,AICA,ApBDS,AuBtC4B,AjB2BtB,AoBjCN,AC0SA,ClB/SC,AOiDA,AICA,ApBDA,AuBtC4B,AGN5B,CV4CC,AICX,AcrCa,AZNA,AED4B,AIT5B,CJS6B,AlBgCxB,AqByQN,ClB/SC,AGuDb,AQLa,AbME,APPF,AMXM,AoBjCN,APiDb,AiBjBW,CpBYC,ACxChB,AGyCI,AerCiB,AnCoCjB,A0B5CA,AUgCY,C3BrCZ,A0BakB,ADAD,AZNA,CXGjB,AC6CgB,AQLA,AbME,APPF,AMXL,AmB/BX,ACFgB,AKMhB,CpBDgB,AKuChB,ACxCgB,AGyCC,ApBDA,AyB1CA,ACFA,AC0SD,AGvShB,ACGgB,CRAiB,AIoShB,AGvSC,AELd,ChB8Ca,AOtC8B,AjB2BxB,A0BnCH,ChB8CF,AICA,AbMd,APPgB,AuBtCa,ACLI,AEDjB,CfKpB,AMDJ,AOHuD,ACCnD,ACFA,AKMA,CpBDqB,AaJgB,ACCf,AKCtB,ACGqB,AK0BzB,CpBYuB,AICnB,AerCQ,AZF2C,AjB0B/C,AoBhCmB,AIGA,AELnB,CGUuB,ATRH,AMFC,AIkCH,ChBaC,AerCnB,AnCoCqB,AwB3C8B,AGySvD,CX9PA,AICA,AK3C0B,ACF1B,CIG2B,AELvB,ChB8CoB,AICE,AM7CE,CfK5B,AKuCyB,AICzB,AcrCa,AZNA,ASIb,CGEyB,AZNA,EN0CC,GAA1B,AhBAoB,CAAgB,AkCpCL,AZNA,CN0CA,AkBpCC,AZNA,CVgDhC,AINgC,CS1CV,CAAS,AKCR,CdyCU,AczCD,C9ByChC,EgBAA,AhBA4C,CAAC,AkCpCpB,AZNA,CN0Ca,AkBpCG,AZNA,AGAnB,CT0CtB,AhBAA,AkCpCyB,AZNA,CGAc,CzB0CU,AyB1C3B,AKCC,CIKsB,AZNA,AGA7C,CKC0C,CIK7B,AZNA,AQCU,EIK0B,AZNA,AQCJ,CACzC,EIIS,AZNA,EYMyC,AZNA,EYMzC,AZNA,EYM6C,AZNA,CYM7C,AZNA,CYMb,AZNA;AlBiDA,AIzDA,AMwEA,AC/DI,AHgDJ,AINA,ACrCA,AGsCA,AetC8B,A5B4C7B,APPG,AkCpCJ,AZNA,ACGI,ACLI,AlBiCA,AmB/BR,AvBuCR,AwBzCY,AC2SJ,ACpTc,ACEd,ACUK,AX8CL,AcxDA,ApB4CC,ARMD,A+BXA,IxBkBA,AINA,ACrCA,AGsCA,AcrCA,AZNA,AGAA,AN+CA,CJhDsD,AQGb,CYGX,AZHT,AjB6Bb,AsB1CM,AEYT,CfAD,AH+CD,AINA,AICA,AetC4B,AZH/B,ACL2C,AlBkClC,AwB9BH,AX8CH,CfCG,AUeF,AFfA,AINA,AICA,AcrCA,AZNA,AOTA,AVwDA,AcxDA,AGuCE,C5BvCD,A2Bc4B,ADC5B,AZNA,AEDG,AlBgCG,AmB/BN,AvBuCb,A4BtCgB,AzBwCH,CLCK,AyB1CJ,ACFI,AC2SJ,CCpTa,CxB2DT,CIzDD,AMwEA,AErBT,ACrCS,AX0BM,AoBjCF,AETQ,AvBoDZ,CGlDC,AQmDA,ACrCA,AkBA4B,ANd5B,AVwDV,AcxDU,A5BkDA,CDOG,AYNb,AmBrCuC,ARoS5B,AR1PA,CbhBO,AoBjCF,AUgCF,C5BvCD,AIyDb,AINa,ACrCJ,AGsCT,AlBJR,A2BhDqB,ACUG,AGVH,A5BkDA,CGlDb,AMwEI,AErBU,AW+PA,AGxSG,AzBwCjB,CSsBe,AG1DA,AjBqCI,AkCpCnB,AZNA,AhB+BW,AuBxCX,AVwDA,AcxDA,AGuCiB,ChCkBC,AIzDF,A0BeA,AZNA,AGAhB,ACFoB,ArB2CJ,CGlDC,AQmDF,AS1CE,AN+CmB,AdNnB,CYpCR,AjBqCa,AMXA,C6B1BW,ARoSf,CnBlTE,AQmDpB,ACrCoB,AkBA4B,ADChD,AZNA,AKySmB,AR1PnB,AdNoB,CGlDpB,A0BeqB,AZNA,AGArB,CX+DI,AErBgB,AS1CE,AKCd,CtBVe,AQmDvB,AhBA2B,A8BzCD,AM6BD,ChCkBZ,AIzDW,AsBUpB,AM6BsB,ChCkBC,AYNJ,ACrCC,AiBCC,AZNA,AjByCA,CDOZ,AIzDb,AMwE2B,AErBH,ACrCC,AQLC,EjBTE,CJyDG,AYNN,AW+PX,CAAe,Cb1OG,CErBhC,ChBAsB,A0B5CN,CtBkDoB,AYNN,AhBAQ,A0B5CT,ArB2CT,CWCpB,AhBAsB,A2B+PR,AtBhQqB,CSsBE,AG1D5B,AjBqCL,A2B+P+B,CS3QlB,ChCkBc,Aa3CM,AiBChB,AZNA,Ac8BmB,ChCkBC,A8B1CX,AZNA,AGAR,ACFY,CtBkDH,AqBhDA,CEyS/B,AtBhQA,CSsBgC,CVfW,AUeC,AG1DH,AZoCE,A+BX1B,ChCkBjB,Aa3C0C,ASPL,ArB2CO,A+BX5C,CFxBqB,AZNA,AIFL,CDEM,ApByCtB,C6BnCsC,AZNA,AIFE,CQQnB,AZNA,AGAkB,ApByCS,CSsBhD,AQ/DA,AGAsB,ACFN,CQQyB,ATNzC,CX+DqD,AoBxDjD,ARTwC,KAA5B,EAAmC,ETO1C,ASPO,CTOhB,ASPI;AtBmDJ,AIzDI,ACEJ,AKsEI,AH7DJ,AIFK,AHgDL,AINA,AICA,AevCI,AnCsCA,AkCpCC,AZNL,ACKA,ACPS,AlB8BL,AmB5BJ,AvBrBR,AwBmBY,AEVS,ACGb,ACS6B,ACG7B,AZ4CA,AapDI,ACJJ,A5BkDI,A+BXJ,ClCnDR,EAAA,CSuBQ,AC8CA,AINA,AICA,AE3CA,AGAA,AMGA,AZ4CA,AiBjBA,CD3B6C,A7BwBxB,AsBvCrB,CbYK,AoBGqB,ADGrB,A5BqBL,AoB7BI,AIEyB,AELzB,CjBKE,AHgDH,AINA,AICA,AexCH,ADGM,AJNwB,AX+C3B,CfCG,AQAF,AINA,AICA,AE3CA,ACKE,ACPG,AKPL,AVwDA,AcxDA,CxBEC,AESD,AIFI,AmBMA,AZNH,AEFK,AMEsB,ACG5B,CvBZM,AGWL,AXwCK,A+BvCL,A1BsCG,CDOC,AUeA,AFfT,AYlDY,ACEL,ACFE,CdkDD,AQLR,AGtCU,AELF,ACFE,AMHA,AImCF,C5BvCK,ACEJ,AOiDT,AkBpCY,AFXD,AImCF,ChCkBG,AKvDF,AGuDA,AINA,AkBpCG,ALfH,AVwDV,AcxDU,CjBmDV,AOrCa,ACPG,AMEsB,AX+C3B,AdNE,CGlDG,AMwEZ,AUjEa,AMEsB,CrBP1B,AKsEE,AFfJ,AINE,AhBAI,A6BnDJ,AIAA,CxBEb,AOiDA,CZMiB,AkBhDjB,ACKiB,AMdjB,AVwDe,AcxDf,CzBAoB,ACEJ,AKsEZ,AC/De,AC0CH,AhBAI,AsB1CJ,AULZ,CvBFa,AMOG,AHgDpB,AINiB,AgB/CE,CEWX,ATNR,ACFI,APiDc,AiBjBlB,CtBiCqB,AFfJ,AsB1CK,ATNH,ACFE,CjBLD,AGuDpB,AINkB,AkBpCV,AZNR,AEFY,AMEoB,AEL5B,A3B8CI,CIhDR,AaOqB,AEFK,AMEsB,AzByCzB,A+BXF,CzB5BrB,AC8CoB,AYlDZ,AOKR,A1BsCQ,CDOI,AKvDW,AKsEnB,AH7DkB,AKwCtB,AhBA2B,AkCpCD,ATN1B,AMGsB,AZ4CC,CfCG,AKvDF,AGuDF,AahDE,ApByCE,CDOd,AWhDJ,AC0Ce,AkBpCnB,AZNqB,CbPzB,AMO6B,AC0C7B,AhBA8B,A0B5C1B,CfIJ,AIFI,AHgDmB,AclDM,AKK7B,AZ4CkB,CfCY,AKvDF,AESD,AKwCD,AS1CE,AMGD,AZ4CC,AdNxB,CWCJ,AOrCa,AJ0CK,CI1CO,AlBoCO,COOhC,AclDiC,CPiDH,CfCK,AIzDnB,AIyDa,CJzDA,AIyD7B,CD9CA,AXwCuC,A+BvCvC,CnB6CgC,AZNQ,AuBrCT,AJ0C/B,CfC8B,AmB3CE,CnB2CQ,AkBhDnB,AH+Ce,CfCN,AIzDI,AcSJ,CdTK,AIyDC,AwBlBpC,CxBkBqC,AahDb,AN+CxB,CfC0C,AqBhDT,CrBgDjC,AQAA,CRJiD,AJFnB,A0B5CD,CtBmD7B,AJPiD,AsB1C5B,ACKI,AGPa,C1B4ClC,AuBrCqC,CDLH,ACKb,AELD,CjBTK,AcSR,AIFQ,ClBPe,AiBSJ,CjBTX,AcSY,ACKI,AELrB,ACFmB,CJGvC,AGDJ,ACF6B,CHOhB,CfdmC,AkBOF,CHOG,AGNzC,ElBRqB,CechB,EfdyC,AecA,CfdC,Cec1C,Efd2C,AecE,CAA7C,CfdG,AechB,Efd4D,EAA5C,CAAZ;AACA,ACEA,AKsEA,AChE4B,AHiDhC,AINA,ACtCH,AGuCG,AetCA,A5B2CA,APNI,AkCrC0B,AZLzB,ACKL,ACR6B,AlBoC7B,AmBjCA,ACFS,AC0ST,ACnTA,AEUI,AXgDJ,AanDI,AnBuCJ,ARMQ,A+BXR,IxBkBA,AINA,AICA,AetCA,AZAA,AELA,AN+CA,AiBjBA,CNhC6C,CtBPzC,AOQ4B,AmBMF,AZLzB,AQFkB,CfCU,AHiD9B,AINA,AICA,ActC4B,AZLzB,AQFN,AXiDG,CPCC,AINA,AICA,AGtCA,ACRyB,AECpB,AETH,AT0DF,AdNI,CU1C2B,AmBMF,AZLzB,ACKH,ACRyB,AlBoCzB,AoBnCK,AbqCL,CJ1CK,ATiDA,A2B8PN,AK5SM,CxBLD,ACEE,AKsEF,APfF,AiBnDyB,ACGzB,ACFK,ArB2CD,CGlDD,AIyDV,AahDQ,ApByCI,A+BXJ,CDzBC,ADA4B,AZLzB,Ac8BH,C3BrCK,AWkDd,AetCU,ADA4B,AZLzB,AH+Cb,AanDc,CRCsB,AG2S5B,ACnTK,AT0DF,CLgBP,AUlEiC,AECpB,AC0SR,CbzOM,AErBf,AIjBiD,ApBiBhC,A0B5CC,AMFD,CZiDjB,AQxDgB,CLgBhB,AjB4BA,AsB5CA,AT0De,CVtDK,AMM0B,Af2C1B,AuBrCJ,CdZK,AMM0B,AiBH1B,A3B6Cb,CGlDJ,ADyDJ,A2B3CiC,AZLzB,AhBiCU,AmBjClB,AN+CkB,ANZlB,AuBLA,C5BvCqB,A0Bc0B,AZLzB,AGAH,ChBPG,AKsElB,AqB1DJ,ADAiC,AZLzB,ACKR,ACRgC,AlBoChC,C6B5BqB,AZAA,ACRyB,AEClC,AbqCS,AuBLA,C3BrCjB,AeI4B,AECL,AbsCvB,CC2BqB,AdrBE,AkCrCwB,AZLzB,AGA1B,ACFY,AC0SR,ARzPmB,CM/CC,AEwSH,CZzSc,AoBMnC,AbLI,ACKqB,ACRyB,ChBN9C,AOQoD,AoBM9B,AnCqCI,A0B5CC,ClBPF,AWwDX,CLgBd,AW/DwB,AN+CA,CQyPxB,ARzPc,CgB1CY,ARmSH,CnBjTM,AkBOG,CAAC,APiDP,EQyP1B,AK5Sa,ChC8CsB,A2B8PP,ARzPhC,AanD8B,ChC8CU,A2B8PpC,CAAJ,ARzPoC,CI1Cf,CAAS,AImSM,CRzPG,AanDJ,CPIX,AOJY,CPIH,CUKP,AhB0CgB,CXxDb,A2BcM,AnCqCL,A0B5CC,ClBPO,ARmDW,AuBrC5B,AGP6B,C1B4C9C,CuBrCkC,AELd,CjBTK,AecR,AJ0C0B,CgB1CrB,AVLc,ACFY,AMFtB,CxBLa,AecF,AELjB,ACFO,AMFc,CxBLhB,A2Bca,AZCtC,AENJ,AOJ8B,CGSJ,ATP6B,APiDb,CXxDI,AiBJb,ACWzB,APiD4C,CXvD5C,A2BaqC,AVH7C,AN6C0C,AanDO,CGU7C,EhByCkD,EanDA,CAAC,CbmDvD,WanDiD,CAAmB,IAAE,CAArB,EAAwB,CAAxD,EAA2D,EAA3D,CAAb,mEIsCuB,EAJN,GAIQ,mDAJR,IAIoD,YAAY,CAAC,MAAb,GAAsB,CAJ1E,IAI2E,yHAJ3E,GAQO,EARP,GAQS,yDART,GASQ,EATR,GASU,sDATV,GAUM,EAVN,GAUQ,gDAV7B,CAHsB,CAgBtB;AhCMA,AIzDS,ACEL,AKsEA,ACjEA,AHmDJ,AIPA,AmBpCQ,A5B0CX,A2B5CO,AZL0B,ACMzB,ACTG,AlBqCX,AmB/BG,ACL0D,AC2StD,AClTJ,ACCA,AX2DA,AYlDA,AX+CA,AanDI,ACLJ,ApB6CQ,ARKA,GExBZ,CH+BI,AQCA,AIPA,Ac1CA,AX+CA,CJnDsD,AmBOb,CnBPZ,AoBUrB,ADHa,AZJS,ACMzB,AV+BG,CTYL,AWpDH,AHqDG,AIPA,AmBpCM,ADHT,AZJ+B,ACMzB,ACXqC,ALqDxC,ANXM,CTYL,AIzDK,AI0DL,AIPA,AQhDqB,AEGiC,AEPtD,AV4DA,ACHA,AdNI,CGlDE,A2BeC,AbPsB,ACMzB,ACXJ,AEGuD,AGNtD,AIAA,ApB6CM,CJ3CD,AqBOJ,AEJI,CxBLE,AkBMiD,AIGtD,AzByCI,CWCX,AW8PU,AtB/PE,CiB1CyB,ACMzB,AImSD,AEjTF,AX2DA,ActDI,ACLJ,ApB6CM,CL7CA,ACED,A0BaE,AbPsB,ACMzB,AGRmD,AEPtD,ACCA,AVwDV,AcxDU,CzBAM,AI0DhB,AuB3CiB,AjCgCV,AwBzC0D,APkDtD,AdNH,CsB+PM,AK5SE,AnBwCE,ARKF,CDOhB,AKvDiB,AmBHJ,ACCA,AIAA,ApB6CM,CgB7CnB,AIAA,CLDA,ATyDe,CfCC,AyBzDA,AGKI,ACLJ,ApB6CL,CJ3CU,AkB+SH,AEjTD,ACSjB,AGTiB,A5BkDI,CiB1CY,ACMzB,AImSW,AGxSD,AX+CA,CXxDN,A2BeD,AbPoC,ACMzB,AGRuC,ARqDzD,ALdmB,CL7CE,A2BeC,AbPO,ACMzB,AGRkE,AGNtD,AX2DA,Ae3DA,CzBAR,A2BeD,ATTkD,AGN7D,AX2DI,Ae3DJ,C7ByDsB,A0BhDtB,CRDmD,ACMzB,AMdH,ACSA,AX+CA,AcxDA,ApB4CnB,CL5CyB,A2BeC,ATTgD,AGNtD,AIAA,C7ByDC,AmB3CrB,AImSU,CEjTd,AX2D0B,ActDV,ACLhB,A5BkDgB,CqB5C6C,AIGlC,AX+CT,AanDM,A3B6CO,CGlDvB,AmBiTqB,AEjTD,AVwDA,AcxDA,A5BkDZ,C8BnCmB,AhByCjB,CgBzCkB,ATTgD,ArB4ClD,CaSH,ActDH,A3B6CpB,CcMsB,AanDD,CL4Sf,AtB/PuB,CDOf,AKvDL,CAAa,AiBIyD,CC2SlD,ARzPrC,CfCqC,AuBwPjC,CRzPgC,AdNM,EIhDP,AqBOZ,AEJC,CvBHY,ASyDV,AYlDM,AX+ChC,AanDsC,CdsDI,ActD1B,CGUc,AjB4CJ,CiB5CwB,AHVT,CGUX,AjB4Ce,CdF7C,C+B1CqD,A9BmChB,C8BpCjC,AjB6CsB,ActDmB,A3B6CO,CIhDtB,AuBGgB,A3B6CT,CIhDQ,ASyD7C,AYlDuB,CrBPO,AJgDyB,CaSH,AYlDT,AzByCnC,CyBzCe,CrBP0B,AJgDS,CyBzCZ,AzByCtC,CyBxCJ,CrBR0B,AuBGW,A3B6CoB,C2B7CN,A3B6C/C,C2B7CiC,CvBHc,AJgDS,CIhDR,CuBGG,EvBHF,AuBGzC,A3B6CkD,EIhDjD,AuBG8C,EvBHF,AuBG7C,A3B6CsD,CAAC,CIhDtD,AuBGkD,CvBH/D,AuBGY,A3B6CR,C2B7CJ;A5BqDJ,AI1DmC,ACG/B,AKsEH,AH/DJ,AIAG,AHiDH,AIPG,ACtCR,AGwCQ,AetCQ,AnCmCJ,AkCpCJ,AZPI,ACM0B,ACP1B,AEDI,AEPR,ACEI,AX2DA,AYlDC,ACCR,AZ8CG,AanDI,ACLA,ApB6CI,ARKA,A+BCR,GxBvBJ,CR6BI,AQrER,AI+DQ,AIEA,AcvCA,Af0CA,AiBLA,CtBcJ,AFNA,AQNK,AE/CwC,CbJrC,AKwEJ,AqB3DQ,AbTa,ACOS,AL8C1B,AYlDC,AEJD,AnBwCI,CTYL,AYNA,AmBpCM,AbTT,ACO+B,AGTe,AIKxC,AX+CH,ANXM,CTYL,AI1D+B,AOU7B,AC0CF,AIEA,AcvCA,ANhBa,AT0Db,AdNI,CGnD4B,ASc5C,AkBEmB,ADDN,AXD4B,AGPzB,ARqDD,AYlDC,AEJD,AnBwCI,CbKH,AwB5CE,AKNA,AX2DF,ActDA,ACLE,CzBD4B,ACG7B,AoBFE,AIAA,A5BkDA,CIhDD,AWmDF,AfHI,A+BCJ,ChBEC,AGxC4B,ACPxB,AXuCE,AuBMN,CpBAT,AhBDY,AuBrC0B,AKff,ACET,AVwDd,AcxDc,CjCkDD,A8BzCC,AX+CH,CCHP,AI/CY,AMGD,AjBoCG,CTYlB,AI1D4C,AQkCK,AIoBpC,AQvDa,CpBCmB,AQsD7C,AIAc,AetCM,AnCmCZ,AKAA,C8BnCa,AnCmCJ,AkCpCjB,ANhBA,ACEmB,AX2Df,ACHW,AcxDI,ApB6CR,CqB/BK,AVRI,AKNA,AGKhB,ACLgB,CzBD0B,AOU3B,AK4CJ,AYhDI,CvBHf,AWmDA,AGxC6B,AJ2Cf,ANXI,CJ3CD,AcW0B,AMb1B,AIAA,ClBSC,AK4CJ,AcvClB,AXDiC,AOJzB,CbIhB,AGwC2B,AcvCE,ALdjB,ACSoB,AEJpB,ACLA,CjCkDI,A8BzCA,AEJgB,AI8CxB,CDpCW,AZFwC,AJ2C5B,AiBLA,CrB1CG,AK4CN,AetCU,CfsC1B,AetCO,ADDc,AJLG,CrBPxB,AWmDJ,ApBH4B,AgC7CA,CvBHC,AUsDX,CgBzCgB,AhByCN,CAA5B,EVtDiC,AqBOC,AX+CE,CW/CD,ENHnB,ALkDhB,CnBNqC,AwB5CP,AY6CK,CpCDG,AwB5CP,CWSY,ACoC3C,CDpC4C,ADDvB,CAAS,AVRE,AQDR,AI8CgB,CpCDZ,AgC7CK,ChC6CU,CAAf,AwB5CE,EfJD,AMOP,AeAM,AEJJ,CvBHc,AMOF,AfyCS,AkCpCxB,AVRiB,AMGU,C9ByCxC,A8BzCoB,AEJW,CESD,AVRtB,AQDQ,CjBIF,AmBKD,AJL8B,AEJ/C,CvBHyB,AyBY7B,AVR0C,AMGtC,CfAqC,AoBMP,AnCmCgB,CShDN,A0Baa,C1Bb5B,A0BaK,AXTlB,CTGM,CNPyB,A0Baa,AnCmCN,AwB5CP,CfHvC,AMMsC,AfyCS,AoCCvD,CZ7CgB,AY6CyC,CrB1CnC,ASHlB,CxB4C8C,CezCA,AfyCS,CezCrC,CAAtB,GqB0CA,EpCDkD,AoCCiB,IpCDG,MoCCM,GpCDG,CAAC,CoCCb,EAAc,CpCDX,CAAe,CAAf,GAAiB,CAA/E,IAAoF,SAAS,CAAC,OAAlG,EAA2G;AIQ/G,AI3DQ,ACIC,AQEjB,AGiDQ,AezCI,A5B6CR,APPY,AkCnCR,AZNA,ACGI,ACNA,AlBqCR,AmBjCI,ACLS,AC2SL,ACnTJ,ACGI,AX2DA,AYnDkD,AXgDtD,AanDI,ACLA,ApB0CA,ARQC,A+BCD,CnB/CZ,CAA+B,AVqD3B,ADdA,EFcI,AgBJA,AK3CA,AN8CA,CgB7C6C,AZAJ,AV8BpB,CsB9BK,AZAL,ACLjB,AlBqCR,AYgBQ,AYnDkD,AEHlD,AnBoCJ,AuBUI,ChCMD,AI5D2C,AYwD3C,Ae1CH,AZAA,AjBgCJ,AwBnC2D,AXgDpD,CfCC,AKvDK,AWmDL,ApBHI,AkCnCF,AZNA,AIJG,AERqB,AT2D1B,CXzDI,ACGE,AFuDd,AiBnDW,ACIH,ACLM,ARsDH,AYnDkD,CvBiD7D,AiBnDY,ACIH,AIVK,AX2DF,Ae3DE,CxBEE,AiBGA,AMAH,CEUC,AZNA,AKuSF,AK3SE,CL2SD,CvBvPT,AsBpDe,AGLD,AVwDd,AcxDc,C7ByDH,AKvDK,AyBaH,AZNA,AIJG,AIG+C,AXgDpD,CVtDM,AHyCrB,AYgBQ,AYnD4D,CV6ChE,AdVJ,AqBqQiB,AEhTI,AX2DF,Ae3DE,AGmDF,CT6PX,ACnToC,AQsDxB,ChCMhB,AGAJ,APPuB,AkCnCF,AZNA,AH+CF,CZCnB,AiBnDQ,AG0SY,CvBvPoB,AoBnDjB,AITwB,ACGtB,AIAA,ChBI7B,ACuD4B,ACHF,AanDd,CfDZ,ASCoB,AERZ,AIQqB,C5BoDrB,AKvDY,ATgDJ,AMPZ,AoBtC6B,AIGgC,CrBN/B,AeItB,AEDI,AIGiE,CrBN7D,AFuDhB,AiBnD4B,ACIxB,APiDe,AYnD0C,CxBmC7D,AmBjC0B,APiDG,ACHF,AanDnB,CdsDW,ActDW,AI8CtB,C3BjD0B,AFuDlC,AuBjDiF,CNFjD,CCI5B,APiD6B,ACHX,AiBLW,CXzCF,AN8CC,AanDE,CvBHtB,AyBaK,AZNA,AH+CK,CezCO,AZNA,CtByCN,AkBSf,CCH0B,Cbb1B,AYgB+B,ClBTX,A6BlDP,AIAA,C1ByDd,AkB/CH,AIV8B,AIAA,CXSC,AH+C/B,CezCgC,AZNA,AGCI,ClB+CxC,A2B1CqC,AhB4CO,ACHJ,CKlDZ,AY6CiB,C7BMP,AiBnDD,AKNE,AIAA,AGmDO,C9BR9C,AuB3CwC,AVwDG,AanDb,ACLU,Cf2DD,ActDA,ChC6CF,AMPX,AYgBuB,ClBTX,AwB5CV,ACIxB,APiDmC,ACHO,CG/CjB,AUJC,CzBoD9B,A2B1C6B,AZNgB,AEHF,AY6CS,CFpCN,AZNjB,AEHD,ANqDyB,ActDT,AI8CU,C7BMD,A2B1CpC,AVTT,AQDsB,CHLI,AVwDiB,AanD3C,ACL0B,CCee,AZNA,AOTA,AIAA,CjCkDrB,AMP5B,AuB3CkC,AX2D1B,Ae3D0B,CjCkDY,AsBzC7B,Ac0C0C,CFpC1C,A5B4ByB,AaaI,AiBLc,Cd1CP,AOTA,AVwDG,AcxDH,CCeC,AfyClD,EezCa,AZNA,AOTiB,AIAA,EjCkDN,AkCnC8B,AZNA,Ac0CJ,CFpCrC,ALf0C,AIAA,AGmD6B,CpCDjC,AkCnCnD,AZNa,AOT2C,AIAA,EXSE,CAA7C,AOT4C,AIAA,CXSzD,Ac0CgD,CPnD/B,AIAA,AGmDwB,CAArC,CpCDoB,A6BlDqC,AIAA,CjCkD1C,CAAX,A6BlDS,AIAA,CJAb,AIAA;A7B0DJ,AI3DS,ACG2B,AEO5C,AIAQ,AC4CA,AICA,AbIA,APPK,AkCnCL,AZNA,ACIA,AjB8BA,AoBvC4B,AC4SpB,AEhTJ,AX2DA,AYpDA,ACEZ,AZ+CQ,AcxDI,ApB+CJ,ARGC,A+BCA,IhCMD,AWjDA,AC4CA,AICA,AbIA,A2B1CA,AZNA,ACIA,AJ2CA,CWlD8C,AM2C9C,CPjDI,AX2DA,Ae3DA,C7ByDD,AYLA,AICA,AbIA,AuBjDC,AXgDD,CfCC,AI3DK,ACG2B,AOmDhC,AICA,AbIA,A2B1CA,AZNA,ACIA,AGTwB,APoDxB,CX1DM,ACG2B,AEO7C,AIAY,AmBOC,AZNA,ACIA,AGTwB,ARuDtB,AalDf,AlBsCa,CEvCA,AYwSG,ATrPA,CV7DI,ACG2B,AWoDvC,AdVO,AoBvCwB,AGJtB,AIAA,CbqDD,AbIR,AsBzDU,AIAA,CbqDV,AO2PW,CvBvPX,AI3De,AkBMmB,AC4StB,ARxPZ,CfCW,AI3DK,AYuDL,AMjDwB,APoDxB,CCHX,AdVA,AYgBI,CT1DyC,AOmD7C,AEOe,CT1D+B,AOmDhC,AICA,ChBIC,AYLA,AICf,ActCA,AZNA,ACIA,AJ2Ce,ANTf,CEvCA,AmBOgB,AZNA,ACIA,CdZ+B,AMO/B,AK6CC,ChBIC,AYLF,AIChB,ASrDI,AX2DgB,ACHF,AcxDd,ApB+Cc,CLjDN,AQsDZ,AUhD+B,AC4SvB,AEhTa,AIAA,CzBFI,AYuDL,ActCpB,AZNA,ACIA,AGT4C,Ab2C5C,CLjDQ,AOUR,AC4CmB,AkBrCE,AZNA,ACIA,AGTU,CfIvC,AIA6B,AC4CrB,AW4PwB,ATrPT,CdFQ,AcEE,ACHF,CHzB0B,AIsB3B,AMjD0B,ARuDjC,CFPQ,AkBrCE,AZNA,ACIA,CMbrB,AIAA,C7ByDc,AsBrDa,AGJF,AX2DA,ACHX,AcxDW,C7ByDD,AgBJF,ADGE,CfC5B,AgBJ2B,AW5CnC,AZ+C0B,COpDoC,ARuDlD,CdFgC,AgBJpC,ASrDiC,AIAA,Cf2DC,ACHJ,CDG1B,CdFJ,CWjDA,AWJyD,CPoDzD,EezCqB,AZNA,ACIA,AJ2Ce,CezCN,AZNA,ACIA,EJ2CS,EezClB,CLfQ,AVwDa,AcxDb,CCeO,AZNf,ACIA,AMbiB,AIAA,CCejB,APiSb,COjSR,AZNsC,ACIA,CDJjB,ACIA,CAArB,AMb6B,AVwDkB,AcxDlB,CXSY,CACrC,AOVwC,AIAA,CJAf,AIAA,CdwDa,CUxDK,AVwDK,AcxDL,CJCvC,AVuDR,AcvDQ;A7ByDR,AI5D4B,ACGpB,AKwER,AHtFR,ACuEI,AQJI,AetCA,A5B2CA,APRC,AkCnCD,AZNK,ACKL,ACTI,AlBsCP,AmBjCG,ACPQ,AC6SA,ACnTR,ACGS,AX2DL,AYpDC,ACrBb,AZsEQ,AapDI,ACJK,ApB+CZ,AuBIG,CzBjER,AoBAA,CpBAgC,ACuE5B,AmBvEmC,CzBuDnC,CFgBI,AgBJA,AetCA,ADAA,AfyCA,AiBLA,Ed1CK,AEJD,ANsDA,AYpDC,AEHD,C5BqDD,AK1D4C,AWsD5C,AE5CG,AIRwC,AIMxC,AXiDH,CfCC,AI5DwB,AM2ExB,AMnBA,AbKE,A2B3CF,AXDE,AEJA,ACTuB,AGDpB,AVwDL,AcxDK,CzBHoB,ACIrB,A0BcJ,ADAC,AZNG,AIRJ,AEJC,ACGK,AX2DH,AYpDC,AGPE,CEeL,AjB4CG,CV9DuB,AgBQvB,AKLI,AGIJ,ACJI,AGmDL,CxBMX,AQJI,AbKU,AiBrDD,AQDA,AI+CD,CxBMZ,AUhDgB,ACKD,AKjBF,CxB4DT,AkBhDa,AKuSC,ACnTJ,CxB4DC,Aa7CJ,AV8CM,AsB1DG,AIAA,CVcF,AMdG,AX2Db,Ae3Da,CzBHoB,AM2ExB,Ac3EA,AT2Db,CX3DsC,AmBmTpB,ACnTlB,AEUiB,C1BkDF,A8B1Cf,AJRkB,ChBiEF,AqBzDhB,A5B2CkB,A2B3CF,AXDE,AKjBF,CpBAuB,A2BkBvB,ARiSM,ACnTL,CxB4DC,AUelB,AHtFR,ACuEI,AUhDY,AEJJ,AOnBZ,ACkBY,CrBlBZ,ACuEI,AUhD0B,AEJF,AOnB5B,ACkB4B,AI+CpB,CFpCA,AZNQ,AGCc,AGbF,ACGR,AIAA,AGmDQ,CDpCpB,ADAqB,ALfK,AIAA,CEeL,ARiSK,AEhTd,AIAA,C7ByDW,AkBhDG,AEJtB,ACKqB,AEsSE,AGzSnB,AEHJ,CzBsDS,AiBrDY,AMEE,AEHF,CzBsDE,A2B3CF,AZNrB,AOT0B,ACO1B,AGP0B,C1B0DjB,AgB5CC,CnB2CI,AQAtB,AW3C0B,AEJO,AGb7B,CxB4D4B,AoBpDxB,AQDA,AI+CJ,ChCMkB,AGCa,AqB7DF,ACGrB,AIAA,CrByDZ,AYpDmC,AIRD,AIOC,CGW/B,AZD0B,AIkSJ,CvBvPQ,AmB3CH,AKjB3B,CIOI,CzBsDgC,AiBrDhC,AG2SkC,ACnTJ,ExB4DlC,AoBpDqC,EpBoDD,AGCL,A2B3CV,C3B2CoB,A2B3CX,APiSY,CfvPrC,ALC0B,AgB5CT,ACTlB,ACKqB,AEsSkB,CvBvPJ,AmB3CH,AEJF,CFIZ,ACTqB,CjBqDA,CHDD,AQA9C,ALCI,C2B3CqB,AXDmB,ACTpC,CZoDgB,Aa/CmB,CSKD,AXDxB,AEJ0B,CSKnB,C9B0C0B,AmB3CH,CWCH,APiSH,COhSlC,CXFU,CnB2C4B,CAAU,AmB3CH,AIkSQ,CvBvPzD,AqB/CkC,CFIpB,AEJmC,CAAxB,CFI4B,AIkSM,CFtSP,AEsSd,CJlSxB,AIkSO,CJlSrB,AEJyB,EAA+B,AEsSS,EFtSxC,AEsSjB,EFtSoD,sBAAnC,CAAzB;ArBgDA,AI7DQ,ACIC,AMOT,AHkDA,AINA,AIEA,AbKA,A2B3CK,AZPyB,ACM9B,AEJA,AEsSQ,ACnTJ,ACEgC,AX4DnC,AYrD6B,AXkD9B,AczDoC,A5BkDpC,A+BGA,IhCKA,AWlDA,AC4CA,AIEA,AGvCA,AJ0CA,AdPA,E6BlCK,AZPyB,AQFA,C1BmD3B,AI/D2C,AQyD3C,AIEA,ActCG,AZPyB,AQFA,AXkD5B,AdPA,CDQC,AI/DyB,ACMpB,AOmDL,AIEA,AbKE,AkBhDA,AIX8B,AVyDhC,AczDgC,A5BkDhC,A+BGE,C5B1DF,ACMM,AyBeF,AZPyB,ACM5B,AMfgC,ACOJ,AGPI,CVe/B,AKjBI,CnBGE,AGyDL,ALCE,AsB3D8B,AIAA,CrB0D/B,AODR,CezCY,AZPyB,AGE1B,CrB+CX,AgBJA,AbKY,A2B3CC,AZPyB,AKwSxB,ACnTA,CxB4DH,AKzDK,AqBMuB,AzB2CvC,CIjDiB,AGyDL,Aa/CE,AKJ0B,CfC3B,AHkDA,AINb,AYtDiB,CbUH,AHkDF,CRAG,AQAP,ALCS,AoBsPE,CJlSnB,AEJkB,CFID,AKjBI,AQuDJ,ChCKC,AQAA,AsB1CV,AZPyB,AKwSX,COjSA,AZPyB,CbRnC,AyBeJ,AZPyB,AQFA,AM8CZ,C3BpDK,Acc1B,AIkSQ,AG1SyC,CrBNzC,AGyDc,AW3CA,AORW,C1BmDV,AQAA,ALCX,A2B3Cc,AZPyB,CPDnD,AHkDsB,ALCI,A2B3CtB,CnBRqB,AHkDjB,ALCI,AuBpDyC,CPQ3B,CnB2CR,CAAU,AQAA,ALCE,A6BND,ChCKX,AWlDlB,AUGc,AW0CgB,CrB7CA,AUGP,ErB+CO,AQAE,CAAC,ALCE,CQnDD,AHkDF,AgB5Df,ChB4DV,AgB5DuB,CxB4D9B,AQAA,CLC8B,AkBhDA,CrB+CM,AGCI,AkBhDT,ClBgDD,AgB5CR,CAAS,CnB2CQ,AwB5DH,CrB6DM,A6BNrB,C7BMrB,A6BN4C,ChCKF,AGHO,AgBxC3B,ChB6CtB,CgB7CqC,AEJd,AGbgB,CbUT,AQOR,AEJkB,AGbvB,CbUsB,AUGzB,CrB+CiC,AmB3CP,AKjBE,CLkBtC,AELuC,CGb1B,ExB4DyB,AqB/C5B,AGbgC,CxB4DM,CAApD,AqB/CgD,AW0CQ,EX1C1C,AW0CO,CRvDJ,AQuDjB,CrB7C8B,AUGsB,CGbC,CbUD,CAAtB,AUGhB,AGbG,CHajB,AGbI,CbUmD,CACnD;AXkDJ,AK1D6B,AKwE7B,AChEK,AHkDR,AING,AIEA,AetCA,AnCmCA,AkCpC6B,AZPzB,ACOC,ACVD,AlBqCP,AmB/BG,ACPI,AC4SI,AClTJ,ACCI,ACOJ,AXmDJ,AarDI,ACLI,ApBgDZ,ARGC,EQHD,CDSA,APtCA,CDwCI,AYNA,AIEA,ADGA,CGlDyC,AQHK,CfIzC,AmBOwB,AZRR,ACQhB,ACVD,AEDA,AENA,AEMmB,AEAnB,C5BsDD,AWlDG,AC4CH,AIEA,AcvC2B,AZR9B,ACQM,AMjByC,ACM/C,AXqDG,Ac3D4C,C7B4D3C,AK1DyB,AOoDzB,AIEA,AetCE,AnCmCF,AyBxCE,AN8CF,CVzD0B,AKwEzB,AChEG,AmBOwB,AXAxB,AMfA,AIAA,CpB+CZ,CJ/CoC,AeKxB,AEDA,Ab2CZ,CW1Ca,AEDA,AENC,AIMA,ClBoED,ASzDG,AEJD,AGbA,AIMA,ClBoED,AEpBV,AOrCa,AIiSc,ARvP3B,CRjDO,AK4CI,AkBrC2B,AHN/B,Cf2CP,AkBrCuC,ATJzB,CrB+Cd,AK1DsC,AKwEzB,AMlBb,AQxDI,AIMA,CvBJmC,AKwEvC,AEpBc,AYtDE,AIMA,ChBgDD,AhBDA,A2B6PiB,CbxOhB,AEpBhB,ASzCkB,AZoCtB,CJ/C4C,AKwEvB,ADzBrB,CEvCyB,AQOb,AGXJ,AC4S+B,AClT/B,AIMA,CjBIkB,AoBQD,AnCmCF,AuBpCG,AGXF,CZoEA,AdrBA,AkCpCY,AXA5B,CWA4C,APiSxC,CQhSgB,ADDpB,CRXA,CFCA,AEDqB,Ab2C7B,CCyB6B,AdrBA,AwB9CC,CWWE,CpBRpB,AWJJ,Ab2CR,CEvCmC,CAA3B,ASHA,ACMU,CDNiB,ACMR,CX6DH,CAAY,CdrBhC,AwB9CI,ExB8C+B,EyBxCL,AZoC1B,CCyBJ,AW7D+B,EX6DS,CAAC,EAAzC,CqBxDwB,AtB+B5B,CCyBiD,AqBxDP,CVLf,AZoCF,CYpCmB,CAA1B,EAA6B,GAA7B,AZoClB,CsB/BmD,CAAC,AVLA,AZoCZ,EYpCtB,EAAsC,GAAtC,CUKwB,AVLtC,CUKyD,CAAjC,EAAoC,GAApC,EAAyC,EAAzC,CAAxB;A/B2CA,AI7DI,ACEI,AKyEJ,ACjE8B,AC6ClC,AIEA,AbKA,APRI,AkCrC+C,AZLnD,ACKyB,ACTxB,AG2SO,ACjTJ,ACAK,AX6DT,AYrDA,AXmDA,AatDC,ACLQ,ApBgDT,AuBKA,IhCMA,AYNA,AIEA,AbKA,AelDA,AJmDA,AYrDA,AXmDA,AiBNA,E5BvDI,AOU8B,AmBOiB,AXA1B,CnB4CtB,AK7D4C,AMUZ,AC6ChC,AIEA,AbKA,AgB7CuB,AL8CvB,ACFA,CfAC,AK7DyB,AOuDzB,AIEA,AbKA,AelDA,AOVK,AX6DL,ACFA,Ac3DK,CxBFL,AMUiC,AOEhC,ACKuB,AMflB,AIAA,CnByEA,AoB1D6C,ANf7C,AEQJ,CtBVE,AqBEI,ACQL,AGRK,C7B2DZ,AI7DS,A0BiBgD,CpB0D5C,CEpBb,AIEA,AGxCiC,AIkSnB,ACjTA,CZqDH,AIEA,AGxCuB,AMflB,AX6DhB,Ae7DgB,AGqDL,CtBoBK,AEpBhB,AIEY,ASvDK,AIAA,AGqDL,C7BOZ,AqB5DiB,AT2DjB,CHNc,AW4PI,CX5PH,AIEF,AE7Cb,CPFgD,AC6ChD,ATOgB,AelDA,AHiDA,CJnDiC,AYyS3B,ACjTD,AEQrB,AM6CA,C5BvDI,AYyDJ,AU/CkB,CtBVE,AM2EG,AS1DK,CT0DH,AMlBP,AE7ClB,ACK2C,AMf/B,AIAA,AGqDQ,ChBEpB,AE7CqB,ACKjB,AMfsB,AIAA,C1B4DJ,AoBqPI,AEjTlB,ACQR,AGRQ,CzBFJ,AmBmTuB,AGzSJ,CtBVE,AW6DzB,CLc8B,ACjEO,ARoDZ,AelDA,CPFiC,CPVtD,AsBUuB,GhBiEF,CAAW,APbd,AoBqPD,CS5PD,E7BOc,AoBqPK,ACjTtB,CAAa,CDiTtB,EbxOiB,AQ/DJ,CAAS,CQFP,CFRa,AEQJ,ChBiEe,CAAvB,APbxB,EelDqB,CR+D+B,AczEb,CdyEhB,AQ/De,AMVrB,AEQM,ChBiEnB,AQ/DiB,CR8DwB,AQ9D7C,AMV0C,AEQF,ChBkEpC,AgBlEmB,CFRN,CEQ0B,CFRG,AES1C,KFTa,EAAoC,EAApC,CAAb;AxB4DJ,AK1DI,AMMA,AHmDZ,AILQ,AIEA,AevCA,A5B4CA,APRI,AkCtCA,AZHJ,ACG8C,AjB+BlD,AmBlCI,ACPI,AC6SI,ACjTJ,ACDyB,AX8DhC,AYrDQ,AXmDL,Ac5D6B,ApBiD7B,ARER,A+BGY,E9BRR,CYrBA,CdmCI,AYNA,AIEA,AevCA,A5B4CA,AkBjDA,AP5BR,AC4EQ,CJrDuD,AmBOd,AhBiD7C,CT7DQ,AyBYiB,AXCyB,AjB+BlD,AoBzCQ,AEJA,AEQC,AM6CD,ChCMD,AWnDC,AC6CD,AIEA,AbKA,A2B/CH,A5BgCJ,AwBrCU,AXmDH,CfAC,AYNA,AIEA,AbKA,AejDE,AOZuB,AV4DzB,Ac5DyB,ApBiDvB,CDUd,AuB1CY,AVLA,AIZ0B,ACStB,AGTsB,A5BmDtC,C8BlCa,AZF6C,AEH7C,AEsSG,C3B7PC,A6BrDuB,AIAA,CxBEtB,AaUA,ACG0C,AGV1C,AEJA,CnBCC,AiBGA,AC6SA,ACjTA,AvBkDnB,CDSQ,AYNA,AIEA,AO0PY,AdjQA,CGKD,AIEA,AE5CE,AQHC,Cd6CF,AIEZ,AdVJ,AwBrCmB,Cd6Cf,AhBDI,AMPR,AsB7CQ,AfgDW,AuBKA,ChBED,AQvDE,AQqDA,CxBKxB,AILuB,AIEf,AbKA,AejDiB,CbVb,AOoDY,AmBrChB,AVLA,ACPI,APuDJ,CV1DmB,AOoDnB,AmBrCgB,AVLA,ACPG,Ab4CA,CNYD,AoBqPV,ACjTJ,AfgDgB,CPHxB,AqBoQyB,ARtPF,COvDf,AIII,CrBPJ,A0BeJ,AVLA,AKHwB,AjBwCT,CsBhCM,A7B6BzB,AmBlCyB,ACdO,AIWpB,AjBwCgB,Ca1CpB,AC2SI,CpBrPgB,CoBqPG,AGzSC,AM6CxB,CAAwB,C7BOD,AYD3B,ANX6B,GciQrB,CGzS0B,CxBqC/B,AqBoQ+B,AGzSC,CvBoDX,EDf5B,AOGmB,AuBKX,C7BOgC,AoBqPE,AdjQtC,AuBKsC,CDrCtC,A7B6BkC,CgBlCrB,AGAb,CHA8B,AKsSS,CFtSA,CW0CnC,C7BOJ,A6BP4C,C9BRhD,AqBoQY,CGzSoB,CxBqCqB,AmBlCjD,AEsS6C,AGzSG,CRGX,AQHT,AM6CxB,Cd1CkC,AGAQ,AW0CG,CN7CE,CAA/C,CHyS8C,EFtSlD,CEsSmD,CF5TlB,CHsBH,AGG9B,CHH+C,CAAlC,CKsSL,AS5PJ,Cd1C8C,GAArC,EAA0C,EAA1C,EAA8C,CAA9C,CAAb;AlBkDA,AI9DI,ACIA,AKuEA,AClEC,AHzBb,AIuEQ,AIEA,AbKA,APRC,AkCpCD,AZLA,ACEI,ACPJ,AlBuCA,AqBoQK,ACjTJ,ACFO,ACS8C,AEHtD,ACNQ,ApBkDR,ARpER,A+ByEY,CxBvEZ,APFA,EOEA,APFA,CDgFQ,AYPA,AIEA,AbKA,A2B5CA,AZLA,AhBkCA,CiBjCwC,CRLnC,AQKiB,AOLgC,AM8ClD,ChCOD,AWrDG,AC8CH,AIEA,AbKA,AgBhDH,AjBiCG,AuBjD4C,ACWQ,AGXR,C7BgE3C,AYPA,AIEA,AbKA,AejDA,AELE,AlBuCF,AuBjDyB,AGQvB,ACRuB,ApBoDvB,CEzCE,AOIH,AOfD,ACWqD,AGXrD,CzBEM,ACIA,AKuEF,CoBzDD,CAAC,A5B6BR,AOGU,ELlDI,ACIA,AOmDd,AIEA,CNkBa,AEpBF,AIEA,AdXsC,AwBrCc,AjByClD,CGKD,AIEZ,AIjDc,AlByCd,AwBxCgE,C1BqDhE,AI9DiB,ACIA,AOmDjB,ATOA,COagB,AMlBF,CJFC,AIEA,AE5Cf,AELiB,AQFA,AnB4CA,AuBKF,ChCOC,AWrDG,AC8CH,AIEhB,AE5CgB,ATqCE,AuBKF,C5BvDK,ACIA,AMKD,AC8CpB,CkBrCA,AFZoB,ClBqEC,AoBzDF,AVVE,AX0CR,CSrCb,AQJyD,AjByCnC,CSrCD,AQJoD,CAAhB,AEHjC,CEYxB,C9B4CA,A8B5CwB,AEqCpB,CtBoBY,AClER,AOIiB,AQJoD,AjByClD,CCyBC,AClEC,CDkEb,AClEZ,AqB8CuB,CtBoBvB,AoBzDwB,GEqCxB,CJjDgB,CAAQ,AnB4Cf,CLlDI,ACIA,AI8CjB,CLlD8B,ACIA,AI2CM,CWvCnB,AQFG,AnB6CpB,CW3C8B,CFKT,AUPY,CVOH,CdbK,ACIA,AeIlB,ChBRmB,ACIA,AyBcZ,AFZJ,CEYa,AVVE,CFKd,AUPiB,CRErB,CFKmB,AUPhB,CEYI,AZLH,AELkB,CFKvC,AUP0C,CEYH,C1BlBT,ACIA,AyBcN,AFZJ,CxBNyB,ACIA,AyBc7C,AFZA,CxBN8B,ACIA,AeIb,EAA6B,ChBRG,ACIA,CeIhC,CAAjB,ChBR8B,ACIA,GDJyB,ACIA,CDJC,ACIA,GDJC,ACIA,EDJxC,ACIA,EDJ4C,ACIA,EDJ5C,ACIA,CDJb,ACIA;AL2DJ,AI9DI,ACIA,AMI4B,AC+ChC,AIEA,AexCA,A5B6CA,Ac/CR,ArBuCK,AkCnCG,AZNA,ACIA,ACTA,AEDI,AGNA,ACOA,AXoDJ,AatDA,ACLI,AGsDA,GpChBR,CIuBI,AYPA,AIEA,AexCA,A5B6CA,Ac/CR,ACFQ,AUPA,CFC2C,CtBPvC,ACIA,AMI4B,AcP5B,AIAA,AGsDA,ChCOD,AWtD8B,AC+C9B,AIEA,AbKA,AuBrDC,C1BqDA,AYPA,AIEA,AbKA,A2B3CE,AZNF,ACIE,ACTA,CTA6B,AOK9B,AH+CA,AatDA,CNCK,AMDJ,CxBNG,ACIA,CDJC,ACIA,AyBeA,ALlBA,AIAA,CJAC,AV2DF,Ac3DE,CjBsDX,AIEA,AbKA,AmBvDc,APqDJ,CZEC,A2B3CE,AVXA,CDSC,CPWmC,AIDA,AMpBhC,APqDJ,CHHb,AIEA,AInDgB,ALoDhB,CgB3Ce,A5B6Cf,A2B3CiB,AZNjB,ACIiB,CnB6CjB,AWtD8C,AoBS9B,AbJA,AOZZ,AV2DY,AatDhB,ACLI,AGsDY,CrB/C+B,ARsDhB,AmBvDV,AGNF,AV2DF,AatDA,ACLE,AGsDF,C5BvDb,ACIA,AYWZ,AGP4B,CpBsDD,AI9DE,ACIA,AcaA,ChB6CrB,AejDA,AH+CoB,CG/CC,AOZjB,AGKJ,ACLI,CDKkB,CxBNlB,ACIA,CDJsB,ACIA,CMIS,AOKV,AH+CA,AiBLrB,CrB/CoD,AoBSxD,AHX0B,C5BwD1B,A+B7C2B,C3BjBG,ACIA,AeId,AY+CY,CFpCf,AVXW,CUWC,CCFzB,CAAgC,AXThB,CY+CZ,CZ/CyB,AEDZ,CAAa,CSUM,CDEJ,AXFf,ACTD,ALoDI,CezCa,AZNZ,ACIU,AJ2CO,CG/CR,AELI,AQFZ,CAAS,CxBNL,ACIA,AeIV,AEDoB,ClBPD,ACIA,CcaC,ACTE,CDSD,ACTrB,ALoDhB,CG/CqB,AELrB,ChBR0B,ACIA,AyBeD,ARZc,APqDO,CezCJ,AZNJ,AINrB,APqD8B,CX5DN,ACIA,AyBehB,AZNJ,CdbK,ACIA,A0BaM,ATVU,APqD1C,CgB3CyC,AbJA,CdbG,ACIA,AyBeE,AZL1C,AIPa,APqDkC,AatD7B,CxBLd,ACIA,AcYuB,CWElB,AXFiC,AGVA,AMDF,CTWb,ASXT,CEa4B,AFblD,ETWkD,CWErC,ARZI,CSUe,AZAf,CWEsC,ARZF,CSUD,AZAE,CYAtB,ADEnB,ARZI,CSUjB,ATVI,CQYuD,CAA9C,CAAb,AXF2D,CAAC,QAAN,CAAe,CAApD,EAAuD,EAAvD,CAAjB;AfhBS,ACIA,AKsEL,ACnEA,ARuDJ,AchDR,AaKQ,AZNK,ACIL,ACTA,AlBwCA,AmBlCA,ACPI,AC4SA,ACjTJ,ACAI,AX4DR,AYtDS,AXoDD,Ac1DA,ApBgDJ,AuBKC,ElBOL,EXAI,A2B3CA,AXFA,ACTA,AlBwCA,CS3CuD,AqB8CvD,CrB9C8B,AOQzB,AQLA,CfHL,ARyDG,AejDG,AhBmCH,AwBxCG,CtBRG,ACIA,AF0DL,A2B3CA,A5B6BA,AmBlCE,AGZF,AfgDE,CLlDI,ACIA,AMhBuB,AmB+B5B,AZNG,AQLA,ChBkEA,AChER,AUIQ,ACPE,AGLA,AV0DF,Ac1DE,CzBFE,ACIA,AeIL,CDSC,ACTA,AG2SA,CLtSI,ACIH,AEHE,AEqSF,ATrPb,ALZe,CNYX,AejDa,AINC,AELJ,ACAI,AX4DlB,Ae5DkB,CzBFE,ACIA,AKsEH,AFfN,ALGI,AuBtDG,AzB2CP,CGnDU,ACIA,AgBUjB,AKNe,AXoDD,ANVA,CPFd,AoBzCiB,AC4SJ,ACjTA,ACAI,AIAA,ApBgDF,CciQX,CpBrPW,A2B3Cf,ANjBA,AT0DiB,CezCD,A5B6BA,AqBmQA,CD5SK,AGLA,AIAA,C1B4DH,AejDV,AELR,CFKsB,ACItB,ACTmB,ANsDvB,CV9DgB,ACIA,AyBeZ,AZNQ,ACIY,AL6CxB,AYtDY,AXoDc,ANVA,CLlDI,ACIA,AyBeL,AJXG,CtBRZ,ACIA,AH4CU,AwBxCd,ChBkEiB,APZF,AejDG,AEL1B,AX0CyB,CSrCrB,ACIJ,ACTwB,ChBRM,ACIA,AyBeL,AXFA,AjB+BA,AwBxCG,EvBsDV,AuBtDd,CvBsDwB,AiBtDA,ANsDhC,CV9DY,ACIA,AF0DR,AgB7C6B,AViCd,ENYgB,ADdT,AYc1B,CCFqB,ANViB,CMUC,CZEnC,ADdkC,AuB9CjB,AV0DA,Ac1DA,CJAa,AV0D1B,Ac1D0B,GCiBT,CAAS,ArB+BW,CCwBrC,AR1BJ,AoBzCiB,AGLkB,AIAA,CTMX,AEDU,AGLE,AX4D/B,Ae5D+B,CnBwED,ASzDV,ACTQ,AX0CW,CqB/BvB,AXFa,EWEE,ARZE,ARuD1C,CgB3CyB,ARZkB,Ab2CzB,CKYM,CgB3CmB,AXFd,CWGrB,ALlB0B,AIAA,CVeW,ACTjB,AKNqB,AIAA,ApBgDO,CUjC3B,AMfK,AIAA,CVe9B,ACT2C,CAAnB,CAAxB,AEDkC,AGLe,AIAA,CPKD,Ab2CS,Ca3CvB,CGLJ,AIAA,EPKsB,Ab2CA,Ca3CnC,AGLsC,AIAA,ApBgDO,CgBhDN,AIAA,ApBgDxD,Ca3CuD,EGLE,AIAA,EPKE,AGL1C,AIAA,CPK2C,CGLC,AIAA,EJA5C,AIAA,CJAb,AIAA,IPKmD,CAAc,CAAd,GAAkB,EAAxD,EAA4D,EAA5D,EAAgE,CAAhE,CAAb;AtBuDJ,AI9DoC,ACIA,AKuE5B,AElBR,AIEA,AezCA,A5B6CA,AcjDR,ArByCI,AkCnCS,AZPwB,ACM7B,ACVA,AlBwCA,AmBlCA,ACPI,AC4SI,AEjTJ,AX4DJ,AYvDgC,AXqD5B,AavDJ,ACHI,ApBgDJ,EbIJ,EgBEI,AIEA,AezCA,A5B6CA,ADdA,A0B3CA,EEcK,AZPwB,AILzB,AGLA,ACK4B,AXqD5B,Ac1DA,CjBsDD,AIEA,AbIA,A2B3CG,AZPwB,AhBoC3B,AwBzC8B,CtBRG,ACIA,AKuE5B,AElBJ,AIEA,AbIA,AgB5CE,ACVA,AlBwCF,AmBlCE,AZoCA,CTWD,AI9DgC,ACIA,A0BcjC,ADEI,AZPwB,AQLG,AXqD5B,AavDH,CGYC,AdJb,AKNgB,APqDA,AavDH,CxBNkC,ACIA,AiBI9B,AGLA,AX4DF,Ae5DE,CVgBC,AMhBA,AIAA,C7B2DD,AUaI,AdpBjB,AkCnCgB,ATLD,AZoCA,CTWD,AGCV,APRJ,AkCnCiB,C3B2CF,AelD2B,ACMzB,AL4CF,AYvD8B,ChBmEzB,AO7DxB,ACD+C,AGEzB,APgDF,AYvD8B,AjB2C5B,CTWD,AI9DgC,ACIA,AKuE5B,AElBjB,AIEA,AIlDe,ANsDJ,ALZI,CTWf,AI9D8C,ACIA,AWuDhC,AC7CtB,AHiDe,CEJQ,AbIA,AgB5CE,AjB8BjB,AaYI,CfCY,AYLA,AmBvChB,AXTkB,ACMA,AOTlB,C5BwDiB,AI9D8B,ACIA,A0Bc/B,ATVZ,ARuDa,AczDD,ClBqEA,AMhBA,AbIE,A2B3CV,A5B6BU,AoBzCE,AGLhB,AX4Dc,ACFE,Ac1DhB,CnBwEI,AMhBR,ApBJJ,AkCnC0B,ALjBD,AIAA,C7B2DD,AJPxB,AkCnCY,AZPwB,AEJV,AMDa,AjB2Cb,COQH,AezCnB,AbLgD,AQLG,AEFnD,ChBmDsB,AIEtB,AezCqB,AbLjB,AILA,ARuDkB,AYvDa,AEFd,CzByDE,A2B3CG,ARZD,AGLrB,AX4DmB,Ae5DnB,ApBgDqB,COzBwB,AcN7C,A5B6BoB,AuB9CE,AX4DJ,Ae5DI,C7B2DD,AYLA,AIEF,ApBJ3B,AkBQqB,AYvDsC,CZuDhD,CiB7CP,A5B6CkB,ADdS,AoBzCE,APqDzB,CZEwB,APRhC,A6BpDkC,AIAA,C1B4D9B,AgB5Ca,AL4CgB,ALZd,CUhCU,ChB4CM,CMZG,CUhCrB,AjB8BW,AmBlCV,AOTd,ChBmDsB,ATMY,AkBhDP,APgDO,CK5CJ,CjB8BM,AmBlCP,CrB+CT,AYLiB,ATMA,CHDC,AmB3CzB,ACVK,CAAc,ACMA,APgDH,ALZY,CbI7C,AuBpCuC,AGXV,ARuDe,COhD1B,ACPoB,AGLR,AIAA,C1B4DgB,AgB5C7B,ACVK,AKNiB,AIAA,ApBgDS,CPF5C,AmBlCoC,CrB+CpC,AmB3CuC,ACVF,ANsDrC,CK5Ca,AEJC,ACPW,CtBsDqB,AYL9C,ATMqC,AgB5CrC,AMhB0B,AIAA,ApBgDZ,CTWiC,AGCA,AiBtD7B,ACMsB,ACPA,CnBuDxC,AmBvDyB,AGLgB,AIAA,C7B2DzC,AoBrD0C,AEDtC,AGLsB,AIAA,CpBgD0B,CTWD,AoBrDjC,AKN0B,AIAA,CTM5C,ACMc,AIXN,AIAA,ERWuC,CZoCU,CYpC3C,CAAd,EZoCoD,CAAU,CAA9D;ATYI,AI/DI,ACIA,AKwEH,ACjEL,AC+CA,ATMA,AclDyB,ArB0CzB,AkCpC6B,AZPsB,ACOnD,ACVA,AlBwCA,AmBlCA,ACPI,AC4SI,AClTR,ACCS,AX4DZ,AYxDO,AXsDA,Ac1DK,AGoDT,Ef1CyB,CHgD7B,CFJI,ATMA,AgB5CA,ACVA,AlBwCA,A8BMA,CpBEC,AcpD0C,CIcd,AZPsB,AIJ/C,APqDA,CX/DwC,ACIA,AF6DzC,A2B5C2B,A5B8B3B,AwBzCC,CfEE,AC+CF,ATMA,AgB5CA,AjB8BA,AmBlCE,AIZG,AIAA,CzBHD,ACIA,ATmDH,AkCpC2B,AXA3B,AKjBA,ACCK,AV0DH,Ac1DG,C7B2DF,AkBlD+C,AIJ/C,APqDA,CEhDiB,AKLhB,AGLG,AIAA,CjBsDJ,AK5CiB,ACDgC,CPF9C,AC+CF,AQhDA,ACME,AGbF,CrB6DT,AiBtDU,AG2SE,AClTF,CrB6DC,APRX,A6BpDgB,AIAA,C7B2DF,AWpDA,AC+CV,AS1CU,AIZG,AIAA,CjBsDJ,AVRb,AsB/Ca,AQqDF,CpBEG,AhBFA,A4BrDd,AQqDY,ChCOK,AGCjB,AgB5CA,AJ0CI,CJnDc,AQSF,AjB8BA,AmBlCE,AGbF,CZuDD,ATMgB,ADd/B,AoBzCI,AENa,CZuDb,AhBFJ,A0B/CoB,EtBsDE,AYLJ,ATMgB,AgB5ClC,ACVA,AIPoB,ACCR,AIAA,CjBsDO,AOtCE,ACVA,AKNK,AIAA,CPKtB,AC4SoB,AEjTZ,AIAA,C1B4DyB,AmBvDZ,CViDL,CAAhB,AOtCqB,ACVzB,AG2S2B,AEjTG,AIAA,CjBsD9B,AK5CyB,AGJC,AG2SlB,CD5SqB,AEN7B,CrB6D0C,AclDjB,COXI,ACCrB,AIAA,CTMsB,AIPA,AQqD9B,CAA6B,ChCOZ,AGCoB,AqB7DrC,CxB4DmC,AGCY,AkBhDjC,CrB+CG,AGCjB,AclDyB,AIEE,AGbO,CxB4D9B,AiBjDqB,CIEI,EFIR,AaoCrB,CrB7Cc,AQSgB,AEJE,CVLD,AWFN,AU+Ca,CXxCxB,ACPoB,EHWb,ACVK,ACMU,CDND,CDUC,AEJtB,CFIO,CAArB,AEJwC,CCPf,EAAkB,CFCjB,AEDD,AU+CwB,CrB7CN,AUK7B,AWwCoC,CrB7CN,ASDA,AEDE,CFCpB,ACMqB,ACNvC,CFAR,CCMc,CAAd,AWwCA,IrB7C+B,CAAsB,CAAtB,GAA0B,CAA3C,EAA8C,GAA9C,EAAmD,EAAnD,EAAuD,CAAvD,CAAd;AXqDI,AI/DK,ACIA,AMOT,AC+CA,AICA,AexCA,A5B6CA,APRA,AkCrCI,AZPA,ACQJ,AjB8BA,AmBjCA,ACRS,AENL,ACAgC,ACK/B,AXsDD,AaxDJ,ACHoC,ApBgDpC,AuBKA,IpBEA,AICA,AexCA,A5B6CA,APRA,AuBpCA,AjB8BA,A8BMA,CFtCuC,AZPE,ClBoDrC,AkBpDiB,AQHhB,AXsDD,CHJD,AICA,AbKA,A2B5CC,AZTJ,AhBuCG,AwB1CG,CtBRG,ACIA,AMOH,AC+CF,AICA,AbKA,AgB5CA,AjB8BA,AmBjCE,ACRG,AGN2B,AGG9B,ACH8B,ApBgDhC,CTYG,AI/DG,ACIA,A0BeN,AZCC,AGXK,AGN2B,ACK7B,AXsDD,Ac3D8B,ApBgDhC,CTYG,A+B5CH,APhBK,AT2DF,CX9DI,ACIA,AiBKA,AGN2B,AIAA,CpBgDnC,CMWA,CAAQ,CX9DI,ACIA,AMOH,AUMA,ACRG,AEND,AEKD,AjB2CH,CLnDM,ACIA,AiBKA,AIDF,CdkDf,AICA,AbKA,ADdA,A8BMW,CrB7CK,AC+CF,AVRA,AmBjCE,AGdE,AIGF,AIkDJ,ChCOR,AYLJ,AOtCA,AJ0CiB,CI1CD,AV+BZ,CGOa,AgBpDE,C5ByDC,AWpDA,AC+CF,ASzCE,AGdE,CtB+CH,A0B5CnB,CxBNY,ACIA,AToDQ,AuBpCpB,AGXY,AIDJ,AjB2CY,CLnDM,ACIA,AOsDP,AhBFE,AuBpCA,AGXK,AIDF,CtBRhB,ACIA,AOsDR,AmBvCA,ATVY,AIDJ,AMgDR,CDrCsB,AhB2CV,CfCc,AYrCuB,AGoCvB,CHJH,AOtCE,AGXK,AIDF,AXsDhB,ANXa,AuBKF,CpCAG,A0B/ClB,CtBsDqB,A+B5C7B,A7B+Bc,AwB1CV,CKWuB,A7B+BC,AaYE,ANXF,CPD5B,A8BMA,E9BN+B,AOC/B,CehDkB,CAAU,AfgDK,CMWG,CAAC,CfCX,AEbU,AaYhC,EI1CiB,AJ0CmB,CfCC,AmB3CX,AKjBI,C5BqDd,Ce7CJ,Af6ChB,AyBvCgB,CVNiB,AUMA,CUEjC,AhB2C6C,CbZd,AsB/CM,CbQrB,AoBrBiB,AZ8BZ,AjB8BwB,AsB/C3B,COkBlB,A7B6BA,CSvCsC,AQSA,AEHA,AGdE,CxB4DpC,AmB3CiB,AEHkB,EVNvB,AQSyB,CACrC,AJyCoC,CJnDG,AImDW,CS3DR,AT2DN,CJnDxB,EAA+B,AUMd,AN6CyB,CJnD1C,AUMgC,CVNhD,AUMiC,CGdiB,CAAhC,CHckC,CAApC,AGdqC,AT2DW,CAAC,CM7CV,AN6CnD,EAAgE,CM7CpD,AN6CZ,EM7CwD,AGd1C,AT2DqD,CAAnE,CM7CY,AGd8C,CT2DY,CM7CV,CAAhD,AGdE,CHclB,CGdmE,AT2DS,ES3D1D,CAAd,CT2D4E,CAAC,EAA7E;AfEA,AIhEyB,ACIA,AKwEzB,AChEJ,AKgDA,AbKA,AczCJ,ArBiCC,AkCrCQ,AZLL,ACMK,ACXL,AlByCA,AmBjCA,ACTiC,AC4SzB,ACjTJ,ACDI,AX6DhB,AYxDwC,AXuD5B,Ac5DI,ApBiDJ,AuBKJ,GpCHJ,CoBMI,AbKA,AelDA,AELA,AlByCA,AmBjCA,ErB8CI,A8B5CC,AXCA,AKjBD,AEI4B,AXuD5B,CCHD,AbKA,A2B7CG,AXCA,AjB8BH,AuBjDyC,ACMX,AGNW,CzBFf,ACIA,AMQvB,AKgDF,AbKA,ADdA,AoB1C6B,AUgD3B,ChCOC,AIhEuB,ACIA,AyBgBtB,AXCA,ACXJ,AED8B,AGL1B,AX4DhB,AYxD2C,AXuD5B,Ac3DC,C7B4DA,AWpDA,ASFH,ALqDG,ANXA,CLpDwB,ACIA,AKwEvB,AOpDb,ACTW,AGGA,ACT6B,Ab2C3B,CNaT,AelDQ,AGGA,AGdE,CbQC,AmBQC,AXCA,AKjBD,CRwDX,AcxCa,AXCA,AjB8Bb,AaYI,ANXI,CCwBK,AMhBF,AdTA,AoB1C6B,AC4S3B,AG7S4B,ChBoE3B,AMhBd,AMnDyC,AIDC,CtBRJ,ACIA,AMQvB,AUMf,AGdI,AfgDW,CLpDwB,ACIA,AWwDzB,AK1CA,AGdE,CxB4DZ,AUYa,AMhBF,AOyPE,CbzOb,AMhBJ,AIlDA,AlByCgB,AqBkQE,ATrP1B,CVhEgD,ACIA,AeMxB,CVkEI,AoBxDZ,AZLR,ACMQ,AV+BA,AuBKU,CtBmBG,AoBxDC,AZLH,ACMG,AIgSD,ACjTjB,CMgBA,AXCI,AGZ4B,AC4S5B,AG7S2B,CNEnC,AEDkD,AIDC,AMiD9B,CtBmBG,AUlEH,AEDe,AC4SZ,AG7SW,AjB4CX,CSrCxB,ACM0B,AEH1B,AEmSyB,CLtSD,AhBoCxB,Ce3BJ,AEHQ,AGZkD,AIDC,CTgB/C,AfmByC,AmBzBvB,AEmSE,CbzOC,ARxB7B,AmBlCA,ACTQ,Ab2CqB,CCwBC,AQ7DF,CEL5B,AY+C6B,CvBLG,AuBKF,CZ/CA,AG2SE,AdjQC,CQ5BrC,AM6RqC,EbzO7B,AOpD6B,AR4B7B,ECwBkC,AChE3B,AFwC2B,CCwBC,AChEX,EDgExB,AUlEJ,AG2S4B,CZzSjB,CDgEgC,AQ7DnB,AELgB,CTEP,AOGA,AKsSU,CAAnC,AS5Pa,CAAuB,CrB7CjC,AYySmC,CLtStB,AKsSuB,CZzST,COGC,AKsS/B,CZzSG,AOGa,CAAxB,AELA,AG2SmD,CZzST,CAA/B,CAAX,IqB6CyD,EAApC,CAArB;AhCQI,AIjEI,ACIA,AKyEA,AC/DR,AC6CA,AIEA,AbKA,Ac1CJ,AaJ6B,AZHzB,ACI8B,AEF9B,ACV0D,AC6S9C,AElTH,AXvBjB,AY2BY,AXwDA,AazDJ,ACHS,ApBiDD,CKxEhB,EAAA,CHiCQ,AC6CA,AIEA,AbKA,CuB7D2C,C1B4DvC,A8B7CqB,AXCK,AJ2C1B,CXlEwC,ACIA,AOyDzC,AIEA,AbKA,A2B9CuB,AXCK,AOZ3B,CtBXsB,ACIA,AK2ElB,AElBJ,AIEA,AbKA,Ac1CR,ACPU,AGEA,ACVoD,AGLjD,AIAA,C7B6DF,AInEH,ACIA,AMYC,AmBMuB,AXCK,AMjBvB,AV4DH,AazDF,ACHK,C7B6DF,AWnDF,AIkDE,CU5DI,AIAA,CCgBR,AZHM,AIRoD,CtBwD1D,AUYS,AOrDjB,AWjBa,AnB8CI,CTYD,AUYE,AMhBd,AbKA,AmBzDiE,AMFvD,ClBsEG,AMhBF,AE5CE,ACI0B,AEF1B,ACVqD,AGLlD,AIAA,CnByER,AMhBR,ACpCA,AEJwC,AIiStB,AElTD,AIAA,CnByEA,AElBjB,ATRiD,AyB5CpC,CZsDC,AbOd,AkBjDgB,AOZhB,AnB8CQ,CTYS,AgBJF,AE5CE,AKqSI,ARtPjB,ANXe,CEvCnB,AK+CA,AMpDuE,AMFvD,CAAC,ClBsET,AOpDR,AINoB,AEmSI,ARtPJ,CLaG,AC/DJ,AMWnB,CNVI,AQM6B,AMjBrB,AGGQ,ACHR,CViBqC,AMjBvB,AGG1B,ACH0B,CViBtB,AMjBI,AIAA,C7B6DI,AUYJ,AOpDR,AM6R4B,AK/SL,C5B0DG,AUYE,AC9DpB,AMUR,AM6R6B,AK/SL,AnB8ChB,CTYI,AUYJ,AKbJ,CazDJ,CnB8C+B,CTYD,AiBxC9B,AWlB4B,AnB8CI,CCwBC,COpD3B,EPoDE,CDxB6B,CTYD,CAAC,CAAjC,AiBxCJ,CNVI,CXkDoC,AWlD3B,AOEA,AToCmB,CSpCF,AKqSN,AdjQmB,CciQE,CN7RhC,AING,AEmS8B,CFnSb,CrB8CY,EiBzCjD,AM8RsD,CLrSb,CAAC,AGEA,CAAC,AZkCP,CciQoB,CZvShD,AYuS0C,CvBrPN,AuBqPhB,AdjQ+B,CTYD,AWlD3B,AYuSf,AdjQoB,CTYQ,AWlDpC,EAA0B,AOEA,AToC6B,CTYD,AkBhDX,AGEd,CVJ7B,AOE0B,AGEkB,CVL7B,AUKc,EVH7B,AOC+C,AToCa,CYlCZ,CrB8CY,AkBhDnD,AGEG,CrB8CiD,CAA7D,AWjDI,AOC+C,AGEA,ErB8Ca,CAAhE,AkBhDS,AGEG,CZkCe,CTYwC,AkBhDX,AGEA,CrB8CxD,CkBhDS,AGEG,CrB8C0D,ASZE,CSpCZ,AGEA,CHFnD,AGEG,CHFhB,AGEA,CrB8C4E,CWjDxE,AFqC6E,CErCpE,EXiDmE,CAAC,EAA7E,EWjDA,AFqCI,EErCc,CAAlB,EAAqB,CACjB;AXiDJ,AK5DA,AKwEC,AC7DI,AC2CT,AIEA,AexCA,AnCqCJ,AkCvCqC,AZFjC,ACGoD,ACVpD,AlB0CA,AmBjCA,ACXQ,AC8SI,ACjTR,ACFyB,ACKxB,AXwDD,AazDA,ACJyB,ApBkDrB,AuBIR,EpCCJ,EgBCI,AIEA,AE5CA,AEPA,AlB0CA,AmBjCA,AWsCA,EhCQI,AK5DA,AMWK,AmBGwB,AXCmB,AOZ/C,AXwDD,CJhDM,AC2CP,AIEA,AdTA,AoB7C2C,AICxC,CdmDF,AIEA,AexCE,AbJF,AhBmCA,AuBjDyB,AIAA,C7B8DtB,AWjDK,AOCP,AEPD,AEDI,AGNsB,ACKtB,AXwDD,Ac7DuB,C7B8DtB,A8B9C6B,AXCmB,ACVnD,ALsDG,AazDE,ChBoDV,ASxCO,AGdE,ACFuB,AIAA,CxBEtB,AOsDF,AkBxC+B,AXCmB,AEDlD,AEmSI,ClBjTD,AOsDX,AhBDJ,CIOQ,AWjDa,AK6CjB,ApBHJ,Ce1CsB,AC2CP,AIEA,AQxDE,AEGC,AjB6CC,AuBIJ,CpBEX,AIEY,AQxDE,AEGC,AEDC,AIkDJ,C3BpDR,AWwDJ,AdTA,AmBjCA,ChBdgB,AOsDF,ASxCA,AN6CV,CHLJ,AIEe,AE5Cf,AMZiB,AT2DA,AazDE,AnB8CX,COQQ,AE5CA,AMZZ,CZsDa,AIEjB,CXxDI,AOsDJ,AYtDoB,AQoDpB,CrBzCY,AoBKS,AnCqCzB,A4BrDyB,AIEE,CjBSI,AC2CP,AhBDxB,AsBzCI,AKqSwB,AG9ShB,CfQI,AOCS,AQTG,AXwDD,AiBPF,CDpCG,AXXxB,AILwB,AEGpB,AXwDoB,CKtDF,ACStB,AN6CuB,CJhDQ,AC2CT,AW2PM,ARtPxB,CJhDI,AOCiB,CtByC7B,AyBvC8B,AN6CE,CgB3C5B,AXXA,ACSA,CTwC0B,AQjDC,CRiDA,AhBD/B,A4BrDQ,CDiT8B,CX3PlC,AW2PmC,ACjTF,AT2DA,CS3DC,CQoDb,CT6PiB,ACjTlC,CDiTmC,CCjTD,CJKtC,AQHmB,CVUE,AUVY,CVUH,AH+CF,CQsPO,ARtPO,CnBN9C,A2B4PiD,ARtPjB,EG/CP,AUViB,CbyDQ,AazDP,CVUH,AKqSD,CLrSd,AKqS6B,CAAf,CLrSI,AKqSL,CLpS9B,AKoSwB,CRtPwB,CAAC,CAAP,AazDb,CL+SwB,AK/ST,CAAf,CbyDsB,EazDH,CL+SU,CAAlC,ARtPxB,CQsPQ,CRtPiD,CazDJ,CAAC,GbyDQ,QAAL,CAAc,CAAd,AazDT,CAAoB,CAApB,CbyD2B,CazDJ,CAAxD,EAA2D,EbyDO,CAAC,AazDnE,CbyD0C,AazDzD,GbyDsF,EAAtF;AfEA,AIjEA,ACKH,AMUiC,AC4ClC,AIEA,AbOA,AclDJ,ArBwCI,AkCxCI,AZDC,ACED,AECJ,ACZS,AC8SA,ACjTD,ACHA,ACKmB,AXyD1B,AazDG,ACLI,ApBmDH,AuBID,IpBEJ,AIEA,AbOA,AclDJ,AIEI,CSJuC,AXEE,CflBrC,AOe8B,AmBCb,AZChB,ACCgB,AOXM,AEAvB,AIkDA,CrB1C+B,AC4ChC,AIEA,AbOA,A2BpDH,AZCM,ACCN,AMlB4C,ACOhB,AGPgB,CjB2DxC,AIEA,AbOA,AmB5DK,AGRiB,AIAA,ClBeW,AMGzC,ArBwCS,AsBzCG,AITE,AGRN,ACO0B,AGP1B,CZkBR,CblBY,AiBoBD,ACZK,ClBRH,AQ2DT,ASvCQ,AGfM,AIEJ,CVUE,AUVD,CZsDX,AE5Ca,CF4CF,ApBHX,A4BrDiB,AV2DV,AYzD6B,CVsDxB,AUtDyB,CVsDrC,AbOA,A6BXe,CfvCnB,ArBwCkB,A0BlDK,AEHC,AQoDJ,ChBID,AMrDK,CNqDJ,AbOA,CaPhB,AC3CgB,CblBZ,AciBI,AGGR,AGfwB,CpBLJ,AR0DpB,AsBzCsB,AGGH,AObf,CVUI,AQVsB,AEAR,CXW1B,ASXkD,CAAhB,CtBP1B,AciBsB,AGG1B,ACZY,ClBRa,ADoEzB,AenDI,AGGoB,ACZK,AMDzB,CNCI,AID0C,AEAvB,AIkDvB,CAAwB,CNlDxB,CtBPA,AiBoBwB,CObG,GJFX,CACR,EQmDR,CAAkC,ERnDrB,CAAC,EHcM,CAAS,AObN,AIkDvB,CJlDgC,AIkDS,IXrCrB,AGdZ,AQmDR,CRnDuB,AICA,AIkDuB,CXrCV,AGd5B,CHcY,AObmB,CPa3C,AOb2B,CJDI,CICe,EAAnB,CAAvB,CJDgC,CAAC,CQmDjC,WRnD2B,CAAmB,CAAnB,EAAsB,CADjC,EAER,KAAK,CAAC,QAAN,CAAe,CAAf,GAAmB,KAAK,CAAC,IAAN,CAAW,CAAX,GAAa,CAAhC,GAAoC,EAF5B,EAGR,EAHQ,EAIR,CAJQ,CAAZ;ApBJP,AM4EG,AC9DI,AC6CR,AIEA,AezCA,A5BgDA,APVA,AkCvCA,AZH6B,ACK7B,AjB8BA,AmB/BA,ACbgC,AEGxB,ACPJ,ACGkD,AEClD,ACJA,AGsDA,IpBEJ,AIEA,AezCA,A5BgDA,A2BjDA,AXEA,AEDA,CVPyB,CD+DrB,AQ5DyB,AObzB,ACGkD,AEClD,ACJA,AGsDA,CrB1CI,AC4CL,AIEA,AbOA,AepD2B,CN2C1B,AIEA,AbOA,A2BjDA,A5BgCA,AoB5C4B,AEGxB,COUH,AnCsCA,AkCvCA,AZH2B,AITC,CSa3B,ALdoD,CPenD,AEDA,ACb4B,AEGxB,CLWH,AEDA,AGVI,ACPF,ACGkD,AGHlD,C3BgDD,AuBhDE,AIAA,CjBwDX,AIEA,CNea,AYrE0B,CZqEzB,AYrE0B,AMA1B,ChBgBmC,AmBHjD,ANjBI,AGIW,ACJX,CjB0DJ,Aa1DgB,AIAA,CCgBhB,AEsCe,CtBmBX,AqBxDY,A5BgDhB,A2BjDgB,AEsCA,CtBmBG,AkBrEf,CTcJ,AEDA,AGVQ,ACPJ,AGIgB,ACJhB,C1BiEe,APVnB,AuBrCmB,AEDA,AGVI,CdkEnB,AoBzDJ,ARZmC,CQYd,A5BgCjB,AoB5C6C,C1BmD3B,AMPA,AoB5Ca,CHcnC,AEDA,AGVQ,CLWgB,AEDA,AGVI,AIHxB,AIkDA,CFtCqB,ARZ4B,EnB6DrD,AmB7DQ,AUkDmB,CDrCX,AZCY,AjB8BxB,AmB/BwB,AGVI,IQ+C5B,C9BN6B,CAAjC,EAAoC,E4BhCf,CAAS,EXEN,AEDA,AGVI,CLWK,AEDA,AGVI,C5BgDM,CAAC,CkCvCvB,CXEG,CWFc,ATCd,CSDH,AXEkB,AKXI,C5BgDM,AuBrCzB,AEDgB,AGVI,CMSH,AXEzC,AEDwB,AGVmB,CMUvC,ATAJ,AGV4B,EAAoB,CAApB,EAAuB,CACvC,E5B+CgC,CAAgB,IAAhB,CAAqB,IAArB,CAAD,CAA3C;AIQC,AK5DD,AKuEC,AC9DQ,AKgDT,Ae1CI,A5BgDJ,Ac4SJ,ArBtTC,AkCvCQ,AZJD,ACOJ,ACdH,AlB2CO,AmB/BJ,ACdyD,ACgTjD,AC5SK,ACPZ,ACEG,AX2DJ,AazDC,ACJA,ApBiDG,AuBKA,GpCFR,CoBOI,AbMA,Ac4SJ,AI5VI,CXkCJ,AMQK,AEhDsC,AQbI,ChB6E3C,AChES,AmBKJ,A5BgCD,AwBlDmB,AMwDnB,CrB3CM,ARsDP,A2BjDG,AZHF,AQfJ,CrBII,AF+DA,AgB9CE,AGhBmD,CXQ7C,AKgDP,ACkTT,Aa7VY,A5BgCD,AaaF,CgB5CG,Ad4VZ,Af7TY,AqBmQA,AC5SK,Af0CL,CsBhCC,AVAF,AGVO,CRoDd,AbMA,AgB9CU,AEFF,ACdqD,CQajD,ANTI,ATsDP,Ce7CI,ARbkD,AP0DrD,CZIC,AgB9CE,AIgSD,CZxSO,AoBML,A7B+BV,AqBmQS,AC5SM,Af0CL,CEtCM,AoBML,A7B+BA,AsBzCK,ATsDP,CV3DC,AU2Dd,CZIe,AgB9CE,ChB8CD,AYJA,AiBPA,C3BpDC,AY2WrB,AFhTqB,ANZT,AuBKS,CDrCR,ADDD,A5BgCY,AmB/BpB,ChBfA,A0BeqB,ADDC,ATCH,CJ4VT,Aa7VF,Af6CY,CJlDR,ARsDD,AqB1DK,Af0CO,CEtCM,ARsDP,ADjBP,AsBzCc,CbIrB,AoBMC,ADDiB,A5BgCD,AmB/BzB,AGVgB,COUU,ADDtB,A5BgCW,AmB/BS,CUAf,AhB4CgB,AiBPrB,CDrCA,APV6B,Af0CL,CNgBD,ADjBE,AsBzCjB,COUkB,A7B+BA,AmB/BF,AEkSpB,AS7PoB,CbnCf,AIgSiB,AdlQC,CU9BN,ChB8CH,ADjBlB,CCiB4B,Ac4StB,AR5TN,AuBKA,C7BWkB,ADjBa,AqBmQD,CdlQE,ENgBF,CAAZ,AgB9CU,CAAC,AjB6BO,AqBmQF,ARtPlB,CQsPmB,ARtPA,CZIH,CAAzB,AkBhDa,CnB+BW,AmB/BF,CnB+BY,CAAV,CCiBM,AYJzC,CI1CyB,AIgSK,CJhSY,AjB6BO,AmB/BzB,AN4CuB,CI1CtB,AjB6ByB,AaaF,CM5CR,AEkSS,CFlSzB,AEkShB,ARtPR,CI1C8C,AjB6B1C,AmB/BJ,CEkSoD,ARtPA,CI1CvC,EAAqC,EIgSM,CJhS3C,AIgS4C,CpBlPzD,CgB9CuD,EAA1C,EAA8C,CAA9C,AIgSuC,CJhSpD,EIgSmE,CAA3D,EAA8D,MAA9D,EAAsE,cAAY,YAAZ,GAAwB,GAA9F;AnBrTR,AOagC,AC+ChC,AIEA,Ae1CQ,A5BgDR,Ac4SA,Aa9V6B,AZHxB,ACOL,AjB6BI,AmB/BJ,ACfQ,ACiTH,AC7S+B,AEDpC,AXwDI,ANZI,AuBKP,IpBGD,AIEA,AbMA,AgB9CA,AEFA,CWiCA,CrBxCgC,AmBKH,AZHxB,AhBoCD,CStC6B,AC+C9B,AIEA,AbMA,A2BlD2B,AZHxB,AIZwC,CVyD1C,AIEA,Ae1CI,A5BgDJ,AgB9CA,AGnBqB,AIKnB,CtBRD,AOa8B,AmBKH,AZHxB,ACOH,AjB6BE,AoBhDH,CpBgDI,AsB1C4B,ATuD5B,CM5CD,AGX8B,CZmDrC,ASxCQ,CjBpBC,AceG,AMN2B,Af2C1B,CLpDH,AceG,AQPD,CIU0B,CAAC,A5BiCnC,AsB1CsC,ATuD5B,CXhED,AY8Db,AbMA,ADjBe,AsB1C4B,AED5B,CtBRf,AKoDQ,CU9BR,AJ0CiB,ANZE,CLpDH,ADoEA,AgB9CA,CftBC,AY8DA,AUtDE,CVsDnB,AE/CQ,AhBoCY,AmB/BpB,CUAuB,AbLD,AGKH,CjBpBC,A2BoBI,ADFQ,AZH5B,ACOJ,AJ0CsB,CXhEtB,A0BkBgD,AXI3B,AKbkB,CrB2DjB,ADjBP,AsB1CqC,CpBT7B,AFmDE,AmB/BzB,AGXuC,CpBTf,AFmDT,AmB/BS,AZgChB,CNgBiB,AgB9CA,CftBzB,A2BoBQ,APXgD,CtB0C3B,AOCE,CLpDH,AFmDE,AmB/BF,AZgCI,GPD5B,EAA+B,AaalB,ANZoB,CNgBf,ADjBlB,AaagC,CWxDrB,AXwDE,CWxDY,AXwDzB,CZIiC,CgB9ChB,AV8BW,CU9BF,AOdf,AjB4C4B,EYhCnB,AKZU,CLYD,ClBgDjC,CgB9CqB,AOdN,EPcsB,AOdE,CPclB,AEFG,CKZT,AjB4CiB,CU9BQ,AEFA,AKZxC,CPeI,AEHoB,CAAxB,AZgCuD,CAAxB,IAA6B,KAAK,QAAzD;ATcR,AIjEI,ACIJ,AMQQ,ACgDR,AIEA,Ae1CQ,A5BkDR,Ac0SA,ArBtTJ,AkCzCQ,AZHqB,ACQpB,ACdb,AlB2CY,AmB9BJ,ACfI,ACgTH,AC9SW,ACLZ,ACKA,AXwDI,Aa1DJ,ACHA,ApBiDQ,EbMZ,EoBII,AbQA,AuB9DA,CfEyB,AmBMgB,AFVzC,CjBII,AmBMiB,AZFI,ACQpB,AjB6BD,AoB7CA,AP0DA,CJxDe,AKsDhB,AbQA,A2BtDH,AZF0B,ACQpB,AShBN,CjBEA,ACoDM,AIEF,Ae1CI,A5BkDJ,AkBjDE,AIlBF,AIAA,C7B8DC,AK7DA,AyBtB4B,AZgCL,ACQpB,ACdhB,AlB2Ce,AsB5C4C,ATyD5C,CXhEG,AagXJ,Aa5VN,A5B+BQ,AwB3CF,AXwDE,Aa1DR,CNAS,AEGG,AEDL,CRMH,AIRM,CtB2DD,AK7DA,AOwDE,AmBxCE,Ad4VJ,ArBtTb,AuBpCgB,CnB2CF,AK7DA,A0BgBI,AnCsClB,AuBpCiB,CShBT,AnB8CW,CLpDC,AQ4DF,AIEd,AbQA,Ac0SY,Af7TR,A0B7CC,C5B2DQ,AK7DA,AFkEA,ADnBE,CFcf,AK7DA,AoBDc,AIAA,CzBHK,AY8DJ,AKzCE,AN2Cb,ANZI,CTaQ,AK7DA,AOwDA,CZKC,AK7DA,AY4WD,AQ7WC,ACKjB,AGLiB,C1BmEC,Ac0SD,AE1VT,AjB6BY,AmB9BA,ACfhB,AIEc,AXwDE,CXhEG,AR0D3B,AuBpC0B,AGhBD,AGHrB,AIAA,C7B8DoB,AK7DA,AOwDA,AhBFxB,AuBpCY,ACdhB,CfJQ,AOwDqB,AmBxCb,Cf0CR,Ae1C0B,A7B+BX,AmB9BS,AKbxB,CrBJuB,AOwDT,AOtCY,AjB6BD,AoB7CrB,AIEmB,CrBJC,AH+CT,AoB7CW,CtB2DD,AiB+SzB,AE1VI,CdlBJ,AOwD0B,ATUb,CDnBgB,AwB3CF,AXwDvB,CV5DwB,AFkE5B,AmBhE8B,AMA9B,EzBgE8B,APZlC,AMPQ,A0B7CkB,ChBsDS,AmBxCvB,CAA4B,A7B+BF,CNOtC,CgCpDI,CzBgEmC,AyBhET,ExBNP,AFmDoB,CFcnB,AIjEa,AQ4DjC,CZKuC,A+B7C/B,CAAoC,AVCxB,AKbG,AEFvB,C1B6CkC,AmB9BA,ACfR,AIEM,AEFN,C1B6CkB,AoB7CT,ClBNG,ADsER,ADnBI,A0B7ClC,CxBNuC,ADsEK,CHL5C,A+B7CQ,A5BkDR,APZJ,AgCpDkC,CGcoB,A7B+BF,AoB7CtB,CtB2DqB,AGKA,ADnBE,AwB3C1B,C1ByDyB,AqB5CP,ACfA,CDeC,ACfhB,AIEc,C1ByDxC,AEdI,AwB3CmB,CKYf,ATdoC,AIE5C,C1ByDoD,AIjEnB,ADsEmB,AmB/D5C,ClBPwC,A2BoBS,C3BpBxB,CwBMjC,ExBNoD,AiBqBlB,CAAiB,CAA/B,ClBiD2B,CCtEd,ADsE4B,AkBjDP,CUD9C,A5BkDR,ECtE2D,AiBqBvC,CjBrBwC,CiBqBD,EjBrBE,AiBqBzC,CAApB,CjBrBmB,EAA8C,GAA9C,CAAf;AJkEA,AIjEA,ACIA,AKwEJ,AC9DA,AKgDA,Ae1CQ,A5BmDR,AcySA,ArBtTA,AsB7CiC,ACQH,AC9CtC,AlB4EY,AmB9BJ,ACfS,AEEI,ATwDT,ANZC,AuBIL,CZjFR,CAA8B,ETuCtB,AKgDA,AbSA,A6BfA,E5BxDI,AagXJ,ACnWiC,ACQH,AjB8B1B,AaaA,CCFD,AbSA,AgBlD4B,CHyC3B,Ae1CI,A5BmDJ,AkBlDE,ACfG,CZsEJ,AOoSF,AE3V8B,AjB8B1B,AoB7CG,AP0DH,CfCC,AK7DE,AY4WN,ACnWiC,AhBsC7B,AsB3CK,ATwDL,CJlDD,AWRK,AEEE,CpBRJ,AOcF,AOD+B,Cdb5B,AoBQK,CPwWhB,AE3VsC,ChBkDtC,AgBlDuC,CnB4CzB,AK7DE,AH+CZ,AoB7Ca,CNwDjB,AdXe,AoB7CG,CUkDN,ChCSK,AK7DE,AgBiBF,AGbK,AQgDT,CtBoBb,AcpEuB,CdoEN,AcpEK,ATwDlB,CJlDJ,ASvCR,AlB4E4B,AmB9BA,AGbJ,CpBRZ,ACImB,A0BgBA,AZCU,AC9CzC,AIiCkC,CxByDJ,AIjEA,A2BoBE,AZCwB,AJ2CzB,CJlDF,AWRT,CXSR,AToCW,AmB9BS,ACfG,CZsE3B,ARzByB,AoB7Cb,ClBNR,AFmDW,CEnDY,AWgEC,CLbhC,ACpCY,AoBKA,ATduB,CZwE/B,AR3B6B,AsB3Cb,CAAmB,CpBRJ,AoBQnB,CtB2CR,AaamB,CO1Da,AP0DF,AiBRlC,C9BLkC,AoB7CG,AUkDP,ChCSb,AEdb,CFcgC,CAAnB,AeDM,CfCnB,AeDmC,CV5DpB,AU4DI,CV5DU,CMW7B,AqByCJ,CrBzCa,AUMO,CAAc,AN2CU,AiBRL,C5BxDZ,CAAS,ACIE,CAAC,AiBER,CAAmB,GlBNvB,AiBqBc,CAAC,ACfU,ClBNT,AkBMZ,AP0DR,CXhEI,CCIM,AiBEsB,AUkDL,C5BxDJ,ACIE,AMW5C,AWTI,AP0DgD,AiBRL,C3BpDlB,CDJN,AOeC,CPfxB,AOeA,CNXgD,AgBiBlB,CVNH,AUMoB,CVL3C,AUKY,AWmCpB,E3BpDiC,AgBiBqB,CN2ClD,EV5DuD,AgBiBvC,ChBjBwC,CgBiBD,EhBjBE,AgBiBzC,CAApB,ChBjBmB,EAA8C,GAA9C,CAAf;AL8DA,AK7DA,AMWK,AC4CT,AIGA,Ae1CK,A5BmDR,Ac0SG,ArBvTA,AkCvCA,AZPI,ACQA,AjB+BA,AmB9BJ,AChB0D,ACiT1D,AC/SsC,ACLtC,ACKA,AXyDI,Aa3DJ,ACHA,ApBkDC,AuBID,G7BbJ,CamBI,AKzCA,AKdA,AMiDA,Cd9CuC,ACSC,ASdxC,C5B4DI,AK7DA,AMWK,AOLY,ACSA,AjBgCjB,AaaA,CJjDM,AK+CP,Ae9CC,AbNJ,ACSA,ASdA,CZyDI,ApBJA,AkCvCE,ARdoD,CtB4DnD,AWlDK,AC4CP,AhBDA,AMPE,AoB9CoD,AGHtD,ACKD,AXyDG,Ac9DF,C7B+DG,AiBgTF,Af9TE,AqBmQJ,AC/SkC,AEAjC,AXyDG,Aa3DR,CX4WO,Aa9VE,ARdoD,AEEtB,CnBH7B,A2BoDF,C3BpDG,AOuDF,AmBvCE,APb8B,ACLhC,AIAA,AGsDA,CpBGC,AIGV,ACmTU,ArBvTA,AkCvCE,ALjBF,AIAA,Cb4DC,AKzCA,AChBsD,ACiTzD,AKjTJ,CjBUe,AK+CP,AdXR,AmB9BQ,AChBsD,ACiTzD,AC/SmC,AIFvC,CjBUe,AC4CP,AYpDgC,ACLhC,AIAA,CjByDb,AkBxCgB,ALjBhB,AIAA,C7B+DI,AgBHS,ACmTC,AFjTV,CHLY,AKsTD,ArBvTX,A6BxDY,ACKhB,AGLgB,CjByDC,AazDA,ACKD,AGLC,C7B+DG,AgBHpB,ADEoB,CV5DhB,AU4DA,CV5DkB,AOuDF,AIGF,ApBJE,A0BrDyC,AGHzC,AIAA,ClBaR,AK+CO,AMzDwD,ACiTvE,AC/SqC,ACLzC,ACKA,AGLA,ClBa6B,AUM7B,AChB6D,ACiT1C,AC/SmC,AEAjC,AEFrB,AImDA,CrBzCY,AMkWZ,AI5VuB,AGdkB,ACLlB,AIAA,AGsDA,ChCSG,AK7DtB,AW0DgB,AC8SV,AQ1Wc,AGGR,ACHQ,CxBEG,AOuDF,AKwTzB,ArBzTyB,A0BrDsD,CXU9C,AaRyB,ACL1D,AIAA,C7B+D6B,AWlDrB,AK+CR,Ac3CY,ATEZ,AChB6D,ACiTzD,COnSmB,ATEK,AEiSH,AEpTG,ACK5B,AEFA,ACH4B,CxBEG,AuBCX,CNAgE,EVsDpF,AStCgC,CEiS5B,CX3P8B,AgBtDlC,AImDkC,CpBGC,AhBDf,AkCvCU,ARdyD,AMAnE,C5B4DM,A8B9CK,AEqC/B,CpBGA,AW2PkC,AKjTlC,ChCqDsC,A2B4PtC,AS9PuC,ChCSE,AYNF,AhBDnC,AgCrDoB,CLiTa,ElBlTV,CAAS,ATsDO,CkCvCpB,CAAiB,ATEZ,CSFhB,ATEyB,CzBqCU,CIO3C,AK7DuB,ATsDqB,AkCvCL,CFd3C,CvBD2C,CAAhB,ATsDgB,EStDG,AgBiBlB,CWmC5B,C3BpD2B,AyBeuB,ATEJ,AWmCU,C3BpDpD,ATsDoD,AkCvCL,ATEvB,CAA5B,IzBqC6D,CoCF7D,EFrC2C,AEqCsB,CFrCL,CAAjB,GAAqB,EAApD,ClCuC+B,CkCvCyB,ElCuCO,AkCvC/D,AEqCgE,CAAC,CFrCL,CAA5D,CAAZ,ClCuCgF,EoCFf,CAAmB,IAAnB,CAAwB,EpCEzF,EAA4F,OoCF3B,CAAjE,EArCsB,CAuCtB;AhCQI,AIlEA,ACKA,AKyEJ,AC/DoC,AC6ChC,AIGJ,Ae1CQ,AnCsCJ,AkCvCJ,AZNA,ACQA,AjB8BC,AmB9BD,ACjBQ,ACkTJ,AChTQ,ACJR,AV8DA,Ac9DA,AGwDP,IhBIG,Ac3CA,AZNA,ACQA,AEAA,ErB4CI,AIlEA,ACKA,AMUgC,AC6ChC,AGKA,CJlDiC,AKgDlC,Ac3CA,ARhByC,CZ0EtC,AMfF,Ae1CI,ADDJ,AZNA,ACQA,AIiSA,CvBrPG,AWnDgC,AC6ChC,AM9CF,ACQA,AGhBG,AED2C,AT4D5C,CfCC,AYNA,AYvDoB,ACFlB,AV8DF,Ac9DE,CzBHF,AR2DC,CQ3DA,AoBQE,CD+SH,CPxPR,AOwPS,CPxPE,AIvDJ,ACcI,ChBjBG,AW0DF,AKzCA,AGjBgB,ACFZ,AIAA,CxBED,AW0DJ,ApBJP,A4BtDI,CdyEQ,AoB1DhB,ClBwCI,AkBxCW,AZNf,ACQA,AMnBmB,AV8Df,Ac9De,Cb4DL,AEjDE,ACQA,CnB4CZ,AK7DA,AKyEe,CN9Ef,ACKgB,CDLA,AY+DpB,Ae1CuB,ADDvB,ALjBuB,AIAA,C7B+DD,A+B7CE,ADDJ,AZNpB,ACQA,CHyCmB,AEjDE,ACQA,AIiSjB,CbzOoB,AMfJ,AKzCpB,AEiSqB,CnBvTjB,AiBsBmB,CjBtBE,ACKrB,AyBeoB,Cd2CH,Ae1Cb,AbPiB,ACQA,EEAzB,AEiSI,CPxPJ,AKzC4B,AEiSD,EnBvTvB,EiBsB4B,AEiS5B,GbzOe,AayOe,CbzOI,AayOH,COnSf,ALjBD,AIAA,CCiBU,AZNR,ACQA,AMnBY,AIAA,CXWH,ACQA,EIiSI,COnSd,APmShB,CvBrP8B,AyB/DI,AIAA,CCiBH,ALjBI,AIAA,CnB2EpB,AoB1DC,AZNC,ACQA,AEAO,CXwD5B,AoB1DA,ATEqC,CHRC,ACQA,CnB4CC,AkBpDlB,ACQA,EDRoB,ACQA,CDPrC,ACQA,CMpB6B,AIAA,C7B+DC,AqB5CN,AInBoB,AIAA,C7B+DH,AyB/DZ,AIAA,CRmBa,CAAlB,CAA5B,AInBoD,AIAA,C7B+DlB,CAAgB,CAAhB,CAAZ,AyB/DW,AIAA,E7B+DqB,CyB/DK,AIAA,CJAC,AIAA,GJAC,AIAA,C7B+DvC,CAAlB,AyB/De,AIAA,EJA8C,AIAA,GJA9C,AIAA,CJAf,AIAA;A7BgEA,AK7DH,AMSO,AC8CJ,AIGJ,Ae1CQ,A5BmDZ,Ac2SI,ArBxTC,AkCvCD,AZNK,ACQA,AECL,AClBS,ACkTL,AC9SI,ACNJ,ACIJ,AX0DI,Aa3DJ,ACHI,ApBiDJ,ENoBJ,EaTI,Ac3CA,AJbA,AEDA,CjBO+B,CXqD3B,AYNA,AM9CC,ACQA,AMnBD,AV8DA,Ac9DA,ClBYI,AKgDL,Ac3CA,AZNG,ACQA,CHyCF,Ae1CI,ADDJ,ATGE,AClBG,ACkTL,CvBrPG,AYNA,ATYX,Ae1DY,ACQA,AGjBE,AIEN,AX0DG,Aa3DH,C5B4DI,AYNA,ATYZ,Ac2SU,AS5WD,AX0DG,Aa3DH,CNDO,Ab+CL,Ce3CO,ACNJ,AIAA,CEkBG,AbPD,ACQA,AIiSJ,AEpTG,AV8DP,Ac9DO,Cb4DX,Ae1Cc,AbPD,ACQA,AIiSJ,AC9SO,ATwDJ,CCFD,ACoTA,AK9WK,CVuDZ,AIGQ,AM1DK,Ab+CjB,CGQe,AYnDI,CZmDf,AKuTU,Aa/Vd,C9B8CI,AgBHS,AbSjB,A2BpDmB,Af6CE,CHLC,ATYtB,AoB+OQ,AKjTJ,ChBsDmB,AgBtDH,C5B4DI,AYNhB,AIGJ,AEjDQ,ACQA,AKbgB,CxByDpB,AiBiTc,Aa/VlB,AZNsB,ACQA,AIiSJ,AEpTd,AIAA,Cb4Dc,ACoTC,Aa/VC,AZNZ,ACQA,AECc,AClBV,AGFU,AIAA,Cb4DH,Ae1CX,AThBkB,AMC1B,CGe0B,AThBlB,AEIkB,AEF1B,AEDqB,CVQK,ACQA,AECD,AEgSrB,AC9Se,AEFG,AX0DV,CCFQ,AbSxB,A2BpD4B,AZNpB,AKuSiC,AElTjC,AV8DsB,Ac9DtB,CVmBA,AIkSA,AErTuB,AV8Df,Ac9De,CLMG,AIHL,CZyDzB,AbSJ,AkBjDiC,AGdE,AEF/B,CAA2B,AX0DG,CEkThB,AQhXiB,AIAA,CZgXF,Cc9VrB,APZyB,COYG,APZN,EEF9B,AX0DoC,CEkTtB,AFlTuB,CEkTF,AO1WC,AEhCH,AXwF7B,CZOC,A2BpDe,ANXZ,AEAR,CvB+DJ,A2BpDiC,Af6CW,CgB5ChC,CAAoC,A5BmD3B,AkBjDQ,CJ4VzB,AI5VkC,CSHd,ALjBO,AGGN,ACHM,CRoBF,AIpBW,AV8DS,Aa3DZ,ACHG,CCiBD,CCC3B,ADDY,ATGkB,CUFY,AHf7B,CEciB,ATGb,CSFrB,ALlBuB,AGGW,ACHX,CRoBe,CIpBC,AGGtB,ACHsB,CEkBnC,AVEiB,AIpBE,AV8Da,Ac9Db,Cd8D2B,Aa3DZ,CGee,AVEX,AIpBA,AV8DN,Ac9DM,EJAnB,AIAA,CJAvB,AV8DsD,Ac9DtD,EDGiB,EAA6B,EGe1C,AhB4CwD,CAAC,CAA7D,Aa3DiB,CAArB,Cb2DoE,CAAhE,EAAmE,CAAnE,CM1CqB,CAAzB,AN0C0E,IAAE,IAAI,CAAC,EAA7E;AfEA,AInEA,AM8EJ,AC/DS,AC8CL,AIGJ,Ae1CK,A5BmDL,Ac2SA,Aa9VI,AZRyB,ACQC,AjB+B9B,AoBhD6B,AEKrB,ACNJ,AV8DA,Ac9DA,ApBiDP,AuBOD,GvBzBA,CO6BI,EhBGI,AInEA,AOeK,AC8CL,AM/CyB,ACQC,AMlB1B,AV8DA,Ac9DA,ClBWM,AKiDP,AElD2B,ACQC,CH0C3B,AM3DyB,AEKrB,CxByDD,AUWF,AC/DO,AC8CL,AM/CyB,ACQC,AjB+B5B,AoBhDyB,AP6DvB,AiBNJ,ChCOK,AYNA,AKuTF,AFlTE,CXlEA,ADyED,Ac2SA,AK/WyB,AEKrB,CpBVF,AoBUG,CdoEH,APLT,COKU,AMdV,ACoTU,AFlTN,CCFO,AElD2B,ACQC,AGjBH,CVwDhC,AIGQ,AElD2B,ACQC,AGjBH,AGDvB,AIAA,CnB0ED,AEjBE,AIGJ,AdXX,AuBjDe,AIAA,CnB0Ef,AEjBI,AVRU,CFcV,AiBiTW,CPtSC,AEjBE,AIGJ,AgBJlB,CtBkBqB,AEjBE,AVRnB,AuBjDI,AIAA,ClBWqB,AC8CP,AYnDV,ACNY,AIAA,ClBWM,AKiD1B,ACoTmB,AO1WI,CdoEH,AQhEY,ACQC,AGjBD,CVwDT,AIGJ,AElD6B,ACQC,AGjBH,CN2D1B,AM3DY,CL+WX,AO1Wb,CpBVJ,AQ6Dc,AYnDU,ACNxB,AIAA,CzBJsB,AM8ED,AMdJ,AM3D6B,EXUtC,AC8CiB,AUxDG,CXUG,AC8C/B,AIGJ,ACoTyB,AO1WO,CpBV5B,AOeI,AMqWkB,CbpXK,AkBKwB,EZyEnC,CAAa,COsSZ,CAAW,AK/W0B,ClBLtD,GM8EJ,COsSqB,CPtSoB,AOsSH,AO1WV,CdoEc,AcpEL,EdoErC,EAA8C,AOsS/B,CAAf,CO1W2C,CAAC,CAAD,CAAf,EAAoB,CAApB,EAAwB,CAAC,GAAG,CAAL,GAAU,CACjD;AxByDR,AInEH,ACMD,AKwEI,AChEkC,AC+ClC,AIGJ,AbSH,APdG,AkCtCK,AZRD,ACQA,AjBiCJ,AmB/BA,ACnBQ,ACoTJ,AC9SS,ACNZ,AV8DG,Aa5DJ,ACFC,AGwDR,EAID,C7BOI,CaPI,AdVA,AmB/BA,AOjBA,CxBjCiC,ACiCjC,AaMyC,ACQA,CnB+CrC,AIjEJ,AOYsC,AC+ClC,AkBxCC,AZTgB,ACQA,AJ8CjB,CV5DJ,AMQuC,AKkDpC,Ac3CG,AZTN,ACQA,AjBkCG,AoBpDyC,CN8DxC,AdVA,AoBpDsB,CtBiEnB,AWrDkC,AC+ClC,AhBFF,AkCtCG,AZ3CyB,ACFA,AE+C7B,ACrBA,APgEG,Aa5DH,C5B6DI,AK7DR,AKwEQ,AEjBA,AM7CR,ACQA,AEDK,AGbQ,ATwDL,Aa5DH,CJIS,CMWH,APmSD,CvBrPN,A8B9CQ,ANXI,CxByDJ,AgBHZ,AdVA,CGhDI,AHgDO,CGhDN,AOuDD,AVPQ,AsB5CO,ATwDf,CSxDgB,CD8SJ,CvBrPC,CUWC,AWvDlB,AOjBA,ClBwEmB,AoBzDX,A5BiCS,AmB/BD,AEiSG,AKlTH,ClBwEE,AoBzDG,CpByDb,AdnBR,AkCtCQ,ETER,AGbgB,AIJhB,CvBAA,ATqDsB,AkCtCG,ATEJ,AEiSE,AC9SM,AIJR,C5B6DT,AUWa,AoBzDrB,APmSoB,AC9SR,CxByDU,AK7DV,CL6DJ,AEbZ,CsB5CiC,AIJR,CJIb,CxByDkB,AK7D9B,AKwE8B,CLxEV,AkBkTD,CAAY,IvBrPK,AK7DpC,AkBkTmB,CvBrPkB,AK7DjB,AKwEK,Aa0OW,CvBrPhC,AUWkC,CLxEtC,AKwEyB,CVXe,AqB5CxC,ChBjBoB,AKwEqB,CWvDF,AEiSpB,CAAf,CKlTiB,C5B6DwB,AJRF,AgCrDV,ClBwER,AdnBmB,CcmBG,CkBxE1B,CPiBrB,COjBsC,ClBwEb,AdnBwB,AyBpCD,CXuDI,AkBxE/B,C5B6DmB,AUWf,CVX6B,AK7DlC,AKwEhB,AkBxEsC,C5B6DF,AK7DpB,CKwEoC,EVXE,AqB5C1D,EAAyD,AOjBpC,ChCqDuB,CAAgB,AgCrDV,E5B6Dc,CAAC,AqB5CjE,CrB4CI,AJRwC,AgCrDvB,ChCqD4C,AyBpCD,AOjBhE,C5B6DoE,AK7DhD,CL6DhB,AK7DgB,EL6DmD,AJR3B,CIQxC,AJRuC,AyBpC3C,CzBoCA,CIQ0E,AqB5CH,IrB4CK,IAAI,AK7D5D,CL6D6D,AK7D7D,EL6DhB,AK7DgB,AgBiBpB,EhBjBwB,AgBiB4D,MhBjBhE,CAAA,EAAe,EgBiBnC,IhBjBoB,CAAA,EAA0B,UAA1B,CAApB;AL8DI,AUWI,ACjEA,ACiDJ,AIGJ,Ae5CI,Ad8VJ,ArBxTH,AkCvC+B,A5BkC5B,AsB7CoC,AEDpC,AX0DC,ANfJ,AuBaL,GpCXI,CoBYI,AdXA,CS3C+B,CXwD3B,AWxDA,ACmDA,AkB1CwB,CnBVP,AKuDlB,Ac7C0B,A5BkC1B,CcWC,AdXA,AwB9CE,C1B2DC,AWpDH,AC+CG,AkB1CwB,C9B+CvB,AYLA,AKqTJ,Aa/V4B,ANXI,CP0W/B,AO1WgC,CtB6CrC,CQwBa,AC/DL,AoBMG,APZ4B,CxB0DnC,A8B/CgC,Cb+V3B,Aa/V4B,A5BkC1B,CUQP,AKqTM,AO1WgC,CZqD3B,AIGf,Ae5CI,APZuC,AED5B,ChBsEP,CAAW,AOqSR,Af7TI,Ce6TX,Af7TY,AwB9CE,CVyDD,CJHb,AIGJ,CNaQ,AMhEyC,AcMjB,Cd+ChC,ACgTgB,Aa/V8B,AJZxB,CIYU,A5BkCrB,AsB7C4B,CdqEb,AC/DtB,ATuCkB,AsB7C8B,CbMvC,AaN0B,CMWW,Cb+V9B,CPrSZ,AOqSa,AO1WmC,CMWH,A5BkC1B,C4BlC2B,Gb+VtC,Af7TM,CSvClB,AMoWuB,Af7TK,CAAV,CSvCE,CAApB,CmBK8C,A5BkCd,CSvCT,AMoWX,Aa/V+C,AJZ7C,CfQV,AMmWyB,Aa/VD,AJZD,CxB8CpB,E4BlCwD,AJZjD,CIYa,Cb+Vf,Af7T2B,AwB9CP,GIYkC,AJZpD,CT2WwB,CAA1C,AS3WyC,ET2WI,GS3W3B,EAA8B,ExB8ChD,AwB9CkB,CAAlB;A1B4DI,AK7DJ,AKwEQ,AC/DC,AC+CR,AmBzCA,A5BmDT,Ac2SY,AahWA,AZJJ,ACQA,AjB+BA,AmBhCA,AClBI,ACmTA,AC/SQ,ACJZ,ACIA,AEHA,ACDA,I3BkDA,AmBhCA,AOjBA,CGMA,ADMsC,ALbtC,AIAA,C7B+DI,AWpDK,AWXL,CXWM,AmBKN,A5BkCD,AuBlDH,AIAA,CxBEM,AaSA,ACQA,AjB+BF,AwB9CE,C1B2DC,AWpDK,ARyDpB,AkBlDY,AGfyD,AIFzD,C5B8DI,AqB7CH,AIlBL,AGCK,ACDL,CXWS,ACQA,AGnBD,AEKI,CP0WJ,AK/WC,CZ0EI,AayOO,CLxSR,ACQA,CMnBR,AIAA,C7B+DA,AK7DU,AMSK,ARyD3B,AsBpEa,ACIS,AGJT,ClBWe,ATuCpB,AqBiQoB,CbzOZ,AOqSM,ACpWE,ACQA,CdjBC,AKwEE,AayOC,AG/SH,CxB8CD,A0BjDhB,CX8WiB,AW9WD,CX8WZ,AK/WA,ACmTgB,ClBjTC,AiBFD,ACmTA,AG/SC,EfOT,AYwSQ,AKlTpB,ClByEQ,AC/DqB,ATuCP,AmBhCtB,AIlBA,AGCqB,ACDrB,ClBWY,AUOU,AClBlB,ACmTgB,CDnTK,AGAT,AIAA,CnB0Ea,ARxBJ,CSvCQ,AYwSb,AKlTK,CjBUjB,AQQI,AEDZ,CFCuB,AEDI,AClBvB,AGAJ,AIAA,CJAoB,AIAA,CnB0EZ,AY1EuB,CCmTP,CAAC,ErBjQH,AoBlDlB,AGAJ,AIAA,CxBEiB,AciBa,AMnBV,AIAA,CxBES,AciBE,AOfd,CROL,AhBuCyB,AuBlDrC,ACI8B,AGJ9B,CxBEiB,AaSY,CGO7B,AIlBoB,AIAA,CxBEa,AqBEhB,CLcuB,ChBhBvB,AqBEkB,AEHd,C1BiDrB,A0BjDiC,CvBCI,AciBd,CDRa,ACQI,AOfvB,CROoB,ACQzB,CIgSR,AG/SoC,CPeG,ASlBL,CLkTlB,AKlTmB,CvBCtB,CkBiTG,ClBjTyB,AgBgB7C,AIlBoB,ACIH,AGJG,CJAA,AIAA,CXWS,AKwST,AG/S2B,CROD,ACQI,CDRtC,ACQuC,AIgS/B,AG/SH,CH+SG,AG/SpB,AEHiC,CVUgB,AUVD,CAA3B,EvBCJ,AuBDkC,CvBCnD,CkBiTI,CJhSuC,ASlBtB,CVUmC,ACQI,AIgSxC,CLxSqC,ACQd,AMnBvB,AGCoC,ACDpC,CNmTA,AEnTA,AIAA,EVmB4C,AIgS5D,EJhSQ,AIgS8B,EJhS0B,CDRnB,CAAiB,ACQtD,CDRqC,AUV5B,CTkBmD,CAA5D,ASlBwD,CVUE,ACQtE,CMnBoB,AIAA,CXWR,AOXQ,AIAA,CDCC,CVUqD,AOXtD,AIAA,CDCsD,CVU9D,AOXY,AIAA,CDCH,CVUyD,AUV9E,CVUY,CAAZ,EOXoB,AIAA,CJAA,AIAA,EJAe,AIAA,MJAf,AIAA,CJAA,AIAA,EJA0B,AIAA,UJA1B,AIAA,CJApB,AIAA;A7BgEC,AInED,ACMA,AKwEQ,AChE4B,AKoDpC,AblGR,AckZY,ArBvTR,AkCxCS,AZJL,ACQA,AjB+BA,AqBgQS,AC9SI,AEAb,AX0DA,ANXJ,CNvFJ,CP2FI,AaJA,CNvFJ,CakGQ,AEnDA,ACQA,AjB+BA,ESxCoC,AmBK/B,CnBLgC,AKoDlC,Ac/CG,AZJH,ACQA,AjB+BA,CEtDG,ACMA,AW4DF,AEnDA,ACQA,AjB+BA,AwB9CE,AX0DF,CJpDmC,AmBK/B,CNXK,Af+CjB,Ce/CkB,Af+ClB,CLvDc,AakXU,AFhTZ,CLYK,AdnBjB,AkCxCgB,ANXI,C5BmDpB,AkCxCiB,APmSA,CnBtTA,AWkEF,CV5DG,AmBEK,AEAL,AX0Dd,CCAA,AdZA,AqBgQgB,AC9SI,CdsEZ,AOoSkB,ACnW1B,ACQA,CdjBiB,AKwEE,AQ/DJ,ACQA,AOfE,CV0DD,AdZA,AqBgQA,Ad/PpB,CQ2TiC,AR3TjC,CQ2TQ,Aa/VI,APmSQ,ClBhTK,ATqDzB,AkCxC0B,AZJtB,ACQA,AI+RgB,AG9SK,C9BmDzB,AkCxCQ,AZJgB,ACQA,CI+RJ,AC9SA,CD8SP,AC9SoB,CAAb,Af+CpB,CSxC4B,ACQA,AjB+BxB,ENKJ,A4BnDqC,Af+CrC,Ce/CoB,E5BmDpB,C4BnDyC,EdsE7B,ActEI,GnBFK,AKwEsB,CLxEV,AIiD1B,CSxCiB,ACQA,CDRS,ACQA,CdjBZ,AqBEA,AjB+CrB,COWiC,AU1DI,CrBFC,ATqDtC,AaJsC,CSxCd,ACQA,CdjBH,AqBEA,CROkB,ACQA,CdjBG,AKwE9B,AQ/DY,ACQA,AOfkB,CV0DtB,AEnDhB,CFmDA,AG3CsC,AVgC1C,CU/BQ,AOhBa,CjB+CgC,CiB/CN,CrBF1B,CqBEA,CrBF6B,AqBE9C,SrBFiB,CAAjB;ADNc,ACOd,AKwEQ,ACjEA,ACgDR,AIKA,ACgTI,ArBvTJ,AkCzCyB,AZHzB,ACQK,AjB+BL,AmBhCA,ACnBI,ACmTI,AC/SiC,ACHzC,ACIA,AXyDA,Ac7DA,ApBmDA,AuBOR,IpBDQ,AIKA,AEnDA,AhBuCA,AOCA,AuBOF,CrBlD6B,CPbb,A0BmBW,AXKpB,AGpBD,CXWI,AC+CL,AIKA,AchDuB,AZHvB,ACQG,AjB+BH,AOCA,CJjDG,AOuDF,AIKA,AEnDA,AhBuCA,AmBhCE,AIlBA,ACIA,AXyDQ,Ac7DR,ApBmDF,CqBrCwB,AXKpB,CWLqB,APoSrB,AC/SiC,CpBRtB,AoBQuB,CR2D1C,ACgTU,AE3VC,AGpBD,AP8DQ,ANVlB,CLxDqB,AM+ER,ASvDD,AGpBD,ACmTA,AC/SiC,CMWX,APoSrB,CXzPZ,AIKW,AchDuB,AJVrB,AXyDQ,ANX4B,Ce/CF,ACHjC,AV6Dd,Ac7Dc,ApBqDd,CYnCe,ACnBX,AEI4C,CduExC,AElEyC,AMGjD,AIZgB,AIKA,AMsDJ,CtBgBO,AEfnB,AKmTiB,ACnWF,AKuSP,AElTS,AIAA,C3BkDjB,AmBhCkB,AEgSA,ClBhTC,AW4DF,AG3CT,AauC2C,ChBIjC,ACgTE,AE3VC,AGpBjB,AIKgB,CT0WC,AahWQ,AZH7B,ACQQ,AjB+BW,AuBlDE,AIAA,CxBEC,AyBYqB,AZHvB,AGOE,AEgSd,COpSqB,APoSN,AC/SqB,CR2DtB,ACgTE,AE3VC,AI+RjB,AC/SiD,CR2DlC,ACgTH,AO3WwB,CnBDlB,AyBYqB,AZHvB,ACQpB,EF2VwB,AM5DA,AC/SiC,CP2WzD,AahW8C,A5BoClD,CcYkB,AC8S2B,Aa9VM,ANXP,CR2Df,ACgTE,CPpSvB,CawOA,AC/S0D,EduE7B,AWxDnB,CL4CgB,AK5CP,CIlBV,AIAA,CCc8B,ALdlB,ACIb,AGJa,CCc+B,AZHxC,AQPU,ChBsEY,AMZb,AchDA,AZHA,AOXZ,AIAA,Cb8DsB,CX5DjB,AW4DO,AS9DI,ACIjB,AGJiB,CxBEC,AyBY8B,CAApC,AZHR,AOXH,ACIkB,AGJlB,Cb8D0B,CX5DrB,AaSa,AOXE,AIAA,CnB0EA,AQ/DjB,AGOkB,AKdtB,CrBFuB,AKwEW,AMZhC,AchDiD,ATI5B,AKdvC,CV0DiB,AEnDqB,CFmD3B,AElDP,CbVkB,AKwEe,CAAiB,Ae1ErC,AIAA,CxBE2B,AW4DO,CS9DN,AIAA,ERkBlB,CAAqB,CAA9B,EAAiC,CIlBlC,AIAA,CnB0EqC,Ae1EtD,AIAA,CxBEsB,AKwEgC,AWxDpC,EhBhBsC,AKwED,AWxDC,EL4CxD,AK5CkB,EAA0C,GAA1C,CAAlB,ChBhBsB,EAA6C,EAA7C,CAAtB;AL8DA,AIrEa,AM+E8C,AChElD,AKqDT,Ae9CA,AnCuCA,AkC1CI,AZDA,ACMyB,AjBgC7B,AmBhCA,ACnBC,ACmTI,AChTO,ACFZ,ACIA,AEJH,ACAG,AG0DJ,IhBII,AdZA,AwB9CA,CtBVA,A0BgBsC,AR5CL,CX2CxB,AmBCW,AXQS,AGjB7B,CXQU,AKqDP,AcpDH,AXQ8B,AjBgC3B,CFaC,AgBDA,AdZA,AmBhCE,AIlBA,AIAA,ClBSM,Af8CP,AuBrC2B,AKlB6B,EAGjD,CxB4DJ,A0B3DA,C9BmDC,AuBrC2B,AOd3B,C9BmDC,AuBrC2B,CnB6C1B,AGIJ,CHJP,AEbA,AuBlDc,AIAA,CnByE6C,AMX3D,ApBPa,AMLA,AmBhCE,CXuD6C,AChEvC,Af8CrB,CckB6D,AChEvC,AcTL,AIAA,Cb8DD,ApBPA,AyBrCE,CzBqCD,CuBrCe,AjBgCd,CiBhC4B,AMlBzB,ACIrB,AGJqB,CnByEsC,AdlBvC,AuBrCY,AEAV,AKdF,ChBqE+C,EChEvD,AQSsC,CRTnB,AKqD/B,AdZA,AwB9CA,ChBqE2D,AChEnD,Af8CiB,A8BnDA,ChBqE+C,ARvB9C,CQuBiC,ARvB3D,CQuB2D,CRvB9B,AwB9CA,CxB8C7B,GmBhCkB,CAAS,CzBqCP,A6BvDH,AIAA,CjCuDmB,A6BvDP,AIAA,GJAZ,AIAA,EJAiB,AIAA,CjCuDlC,A8BnDyB,CDJR,ACIiB,AGJjB,CjCuD2B,CAAC,AyBrCP,AIlBA,AIAA,CRkBC,CzBqCvC,EAAiD,E6BvDhC,AIAA,CHIQ,CDJqB,AIAA,CRkBnB,AKdkB,CLcG,AKdvB,CLcP,AKdlB,ELcmD,EIlBlC,AIAA,CRkBC,AIlBlB,AIAA,ERkBwD,EAAtC,EAA0C,GAA1C,CAAlB;ArB6CA,AInEA,ACOA,AKsE0E,AChExC,ACkDlC,AIIA,AC+SI,ArBtTA,AkCzCJ,AZHK,ACMD,AjBkCJ,AqB+PC,AChTY,ACFb,ACIA,AXwDA,Ac5DA,ApBoDA,AuBMJ,I3BxDI,AOwDA,AIIA,AchDA,A5BqCA,AwB/CA,AjBgDA,CUpCsC,CRRJ,AOG7B,CPH8B,ACkDhC,AIIA,AEnDG,ACOF,AjBiCD,AOCA,CTUW,AInER,AQ+DF,AIIA,AdXA,AuBnDE,AIAA,ApBoDF,CJlDA,AKsEiC,AChEA,AOG7B,AHiDH,CV1DA,AKsEG,AdjBE,A4BrDG,CMYN,ANZO,CxB4DI,AYJlB,AkB5CQ,AZHG,AQPH,CTyWC,AClWG,AMTI,AEEP,AXwDA,CnBLK,AmBKJ,CfEW,AEXrB,CFWA,AwB5DmB,CpBPJ,AakXF,ArBtTI,A4BrDG,AT0DP,ANRb,CQyTc,AFjTd,AiBFY,E5B/DM,ACOlB,AW4DA,ADFgB,ANRA,CJlDA,AY2WC,AClWT,AOXW,AV4DF,Ac5DE,CZ6Wf,ArBtTkB,AkCzCtB,AZHqB,CFmDF,AchDA,AZHX,AQPR,CtBTsB,AakXF,AQ7WE,ACIF,AXwDA,Ac5DE,CxBEtB,AY2WqB,AO3WL,CnBAK,AaSI,AMTI,AfkDP,CqBtCtB,AZHI,AMTY,CP2WQ,Aa/VA,ALdE,ACI1B,AGJ0B,CZ6WtB,ASzWqB,AXwDA,ANRA,CelDQ,CR4DjC,AC+S2B,AO3WX,CP2WY,ArBtTX,AkCzCW,ClCyCK,A8BnDJ,CrBF7B,AY2WI,ArBtTa,A4BrDoB,C5BqDjC,AaHkB,CJlDS,AY2WC,AO3WpB,AT0DZ,EAAkC,ANRA,CMQC,EXjEjB,AWiElB,CXjE+B,CWiEQ,CV1DvC,AoBFsB,AIAA,ApBoDtB,AuBImD,C5B7DjC,A0BmBM,ALdU,AIAA,CxBEO,AyBYR,AJVR,CtBTW,AsBSF,CDJZ,AIAA,CCcE,C1BnBN,AqBKqB,AIAA,CCcD,C1BnBG,A0BmBjB,CAAxB,ALdsB,AIAA,EJAsB,ACInB,AGJmB,EzBL1B,AsBS0B,CAAnB,CtBTuB,ACOhD,AqBEA,EtBTkB,CAAlB,GqBKsB,AIAA,EJAkC,AIAA,OJAlC,AIAA,EJA2C,AIAA,EJA3C,AIAA,CJAtB,AIAA;AnByEQ,ACjEA,ACmDR,AIIA,AC+SQ,ACnWoB,ACOvB,AjBkCR,AmBlCG,AEiSH,ACjT4C,ACAzC,ACGA,AXwDI,Aa7DZ,ACEQ,ApBmDA,AuBMJ,G9BpCA,CUoCI,AIIA,AK7CA,AKbA,AjBgDA,CE/C2B,AY0Q/B,CZ1QQ,AOKwB,ACOvB,CRjBgB,AC0DlB,AIIA,AEpD0B,ACOvB,AVmCH,CEpDH,AC0DI,AIIA,AS7DE,AIAA,ApBmDF,CS1C2B,ACOvB,AEAJ,AOlBZ,CVWwC,AGO3B,AGhBoC,AT2D/B,CS3DgC,AEGnC,AMsDF,CNtDG,CPaI,AKhBgC,ACAjC,AIAA,CjByDX,AKmTc,ACnWsB,ACOvB,CPyCF,AMhD0B,AHkDtB,CCEf,AS7Dc,AIAA,Cb6DD,AC+SI,CFjTC,CS3DgC,AfmDlD,CGMgB,AKmTI,AI5VpB,AGhBmD,ACAjC,AIAA,CRgBF,AGhBkC,CR6DhC,AG7CV,AKhBoC,AEG5C,AjBgDkB,CS1Cc,ACOV,AKhBgC,AEGnC,AXwDI,CGlDuB,ACO1C,CPyCO,AKmTa,ACnWQ,AGOhC,CTyCsB,AKmTG,AI5VJ,CL6CR,AU1Db,CV0DwB,AEpD0B,AQN1B,AjBgDA,EmBrDhC,ChB2DmB,AMhD0C,AMTT,AfmDjB,CS1C2B,AMTS,AEGnC,CV0Df,AQ7D+B,ACA9B,AV2DI,Ac3DJ,CjByDgB,AIIA,AS7DP,AV2DW,Ac3DX,CRgBvB,AN2CkB,CS3DiD,AT2D/D,AiBL+C,CXtCnB,AIhBlB,AIAA,ApBmDU,CenDoB,CZyD5C,AazD4B,AIAA,CXSsB,AT0Cd,CS1C2B,AMTS,CR6D3D,AEpDmB,AOTlB,AIAA,CZ4WM,CD/SpB,AC+S2C,AQ5WV,AIAA,CZ4WW,ACnWuB,AMTO,AEGlD,CV0DkB,AEpDX,AGO/B,AGhBY,ACAE,ACGmB,AGHnB,Cb6Dd,APVA,CQyT+C,AQ5WV,AIAA,Cb6DQ,CAAC,AEpDwB,GFoDvB,CU1DvB,CTyWJ,CAAZ,ASzWmC,CV0D3C,AU1DwB,CAAxB,EDHqC,AIAA;A7B6DrC,AInEA,ACQA,AKsEK,AC/DL,ACiDA,AIKA,AC8SQ,ArBvTJ,AkCxCJ,AZLI,ACOqB,AGjBzB,AEC6E,ACCzE,AV0DA,AanGZ,ACyCY,ApBmDJ,AuBMJ,CJlGJ,CAAoC,ExBkC5B,AOeA,ACiDA,AIKA,AcjDA,ArBsCA,CJlDA,AaKsC,CPEpC,AQOuB,CddzB,AMOG,ACiDA,AIKA,AErDC,ACMsB,AVoCvB,CGMC,AIKA,AMhEE,AbqDF,CTSC,AInED,A0BoBA,AXEwB,CftBvB,ACQL,AY2WQ,ArBvTA,AkCxCH,ANdwE,ACCnE,AV0D4B,Ac1D5B,CJAC,AIAA,AGyDN,EhCGI,AmB7CuB,CnB6CtB,AmB7CuB,AKhBgD,ACCnE,AIAA,CxBCV,AUyDuC,CVzDtC,AY2WS,AO7WqE,CxB6DtE,AWpDb,ACiDA,AIKA,ApBTe,AaFf,CTSA,AgBEc,AMhEE,AP4D8B,CCI9C,ChBFgB,AInEhB,AOegB,AMoWE,Aa/VlB,ALboB,AIAA,ApBmDJ,CTSC,AInED,AOgBZ,ACgDa,AIKA,ApBTE,AkCxCH,ARfG,AGEE,AIAA,ApBmDrB,CGMA,AIKkB,ApBTE,AuBtCQ,ASxDpC,CTwDkD,AJ2CS,AanG3D,C5BqG4B,AmB7CQ,CftB5B,AOgBQ,AKqDW,AcjDnB,ARfuB,ClBLF,AYqErB,AC8SwB,Aa/VH,Cb+VI,AE7VqB,CHbG,ChB0DxB,AgBIzB,AShE6B,AIAA,CZ4WD,AQ5WE,AIAA,CZ4WD,CZ3W7B,CyBYA,Af6C8C,CVzDxB,AToDd,AmBKsD,CXjE9D,A0BoB8B,Af6CiC,AiBLZ,ChCOnD,AiBgTyB,CAAU,CjBhTD,AK3DlC,AMQI,AcTiB,AV0D6C,Ac1D7C,C7B4Dc,AK3DT,AMQb,Af4CwB,C6BrDjB,AIAA,C7B4DpB,AiBgTyB,AQ5WrB,AIAA,CZ4WoC,Aa/VxC,C9B+CuC,AiBgTd,AFlT8C,CVzDvE,AMQI,AMmWoB,Aa/Ve,CzBZb,AY2WR,AK9WC,CXWC,AWXa,CjBGjC,AMQI,CmBIJ,CzBZ8B,AMQP,AMmWwB,ArBvT3C,CkCxCyC,Af6CC,CJjD1C,Af4C6C,AmBK7C,CJlDY,CWVwB,CXYpC,AMkWgD,Aa/VpD,ARfyC,CL8WvB,CAAV,Aa/V2C,EnBH3C,CNTR,CyBYA,EAAyD,ARfxB,CAAiB,CAA/B,EQenB,ARfqD,EQeU,GnBH3D,AmBGJ,CnBHa,CmBGuD,ARfR,CAAC,KXYzD,AmBGJ,EnBHsB,AmBGsD,CnBHxE,AWZiD,CAAiB,CXY7C,AWZ4B,EXYjD,CAFY,AmBKhB,ARf0E,CXU1E,CmBKoF,CRfjE,EAA4D,EAA5D,CQenB,CRfmF,CQjClD,ARiCd,CQiBnB,ARjBA;AtB+DI,AUWH,AEdD,AKmTK,ArBvTG,AsB7CH,ACMD,AjBqCZ,AmBnCQ,AClBA,ACtBA,ACsBY,ACER,ACGJ,AXuDI,Ac1DA,ApBmDJ,AuBMJ,IpBAI,AU3DA,ACtBA,AG2BA,AjBgDA,CCjBJ,AStB0C,CT6DtC,AQjEK,ACIe,AJ8ChB,CHDD,AMjDG,ACIN,AVuCG,CGMC,AhBJI,AyBrCF,AZmCF,CS3CI,AhB2ChB,AsBxDqE,AEQzD,C1ByDM,AuBpFJ,AEwBI,ACGL,AXuDG,Ac1DE,CNxBH,ACuBK,ACCD,AIAA,CjCqDC,CAAC,AsB7CD,AhB2CpB,CgB3CqB,AIVH,AGEI,AV0DF,Ac1DE,C7B4DC,AYHf,AU3DW,AP4DG,CQlFd,Cd2EA,CTSkB,AYHJ,ASzCE,AZmCF,Cc3EC,CDsBf,AGEoB,ACGpB,AXuDmB,Ac1DC,CRgBD,AClBF,AGEI,ACGL,AGHK,CXQb,AKhCR,ASiFgB,ChCGO,AkBpDD,AT2CH,CS3Cf,AHkDmB,CHDvB,AhBJQ,AyBrCe,AKbvB,CAAqB,GDHQ,AV0DD,Ac1DC,CPF7B,AGE8B,AV0DD,Ac1DC,CpBmDhB,CAAc,CTSV,AsB9DW,AP4DN,ANPvB,CTSkC,AsB9DlC,AIKA,C1ByDkB,AsBnGe,APiGpB,ANPkB,CTS3B,AsB9D4B,AIKD,EDHV,AV0DiB,Ac1DjB,Cd0DR,CU1DO,AIAA,ApBmDgB,CgBnDhC,AIAA,Cd0DsC,CWvD1C,AXuDY,EWvD4B,AMiDW,EXpChC,CAAkB,AN0CW,ANPjB,CAAc,CAA7C,GYnCmB,AKbnB,AXuDqD,CAAzC,CM1C+B,AKbO,AXuD9C,GM1Ce,EAA6B,GAA7B,CKbnB,CLaqD,CACjD,CAAC,KAAD,EAAQ,MAAR,CADiD,EAEjD,CAAC,KAAD,EAAQ,MAAR,CAFiD,CAAlC,EAGhB,CAAC,WAAD,EAAc,WAAd,CAHgB,EAGY,UAAS,IAAT,EAAwB;ArByCnD,AIlEJ,AOiBA,AC+CA,AIMA,ApBVK,AsB9CoB,ACQzB,AjB/DR,AmBmEY,AE3CJ,ACsBa,ACET,AV0DA,Ac1DA,ApBmDJ,AuBMJ,C9BzGJ,EAAA,CS0DQ,AC+CA,AIMA,AGhDA,AIvCA,Ad2EA,ES5CyB,AHmDrB,CHDD,AIMA,AExDuB,ACQvB,AVoCA,CL1DC,AQgEA,AIMA,AGhDA,AVoCA,CEzCA,AOHwB,ClBoDU,AWjDjC,AOHwB,AK/BvB,ACsBO,AT4DL,CQlFD,ACsBO,EHqBH,AGrBK,ACEL,AIAA,CXOsB,AGYrB,ANuCA,ANPZ,CTQ2C,AkBpDT,AHmDpB,Aa7DP,AnBsDI,EGMX,AIMA,AOvFA,ASiFW,ChCEmC,AmB5C9C,AEIgB,CjB1BD,AesBA,AEIE,AGrBK,CbYtB,AKqDgB,AK5CA,AE3CA,ACsBO,AT4DJ,ANPH,CEzCA,AUSJ,AGrBU,CpBLJ,AoBKF,CxB6DmC,AkBpDtB,ACQ7B,AIvCA,ACsB0B,CpBL1B,Acc2C,ACQvB,AJ2CG,CJhDvB,AOH6B,AGYN,CVTF,EOH0B,ACQvB,AMfD,AIAA,ApBmDvB,CYhC2B,AInBH,AV0DI,Ac1DJ,CRmBI,ANuCC,ANfoB,CEjCjD,AOHkD,AGYvB,AGrBX,AfsDhB,CS7CmD,AGYxC,AGrBwB,ACER,AIAA,C7B2DmB,AWjDlB,AaZhB,ACED,AV0DY,Ac1DZ,C7B2DmD,AqBxC9B,AInB5B,AIAA,C7B2D2D,AeDlD,GfCqD,AqBxC9B,ANuCE,CMvCD,ANuCxB,CJhDb,AOH+C,AGYX,CHZwB,ACQxC,AEIY,AWgCmB,CrBzCd,AOHR,ACQA,AJ2Ca,CfC6B,AgBI3C,ADLhB,CJhDZ,COHgE,CAApC,ACQR,AEIwB,EL4CX,AGhDE,AJ2Ca,CI3C5B,CnB4C0B,AkBpDqB,AGYnB,CrBwC5C,AmB5CkC,AEIW,CFH7C,AEG4C,CL4CpB,AK5CjB,ANuC0C,CCKd,AK5CnC,ANuCQ,CAAR,ICKwB,IAAoB,CAAhC,EAAmC,MAAnC,CAAhB;AhBHI,AIlEJ,ACMH,AO0DG,AIMA,AC4SI,ArBtTH,AkCxCD,AZPI,ACUA,AEGH,ACtBD,ACpBA,ACoBsC,ACGrC,ACED,AXwDC,Ac1DA,AGyDL,IpBAI,AIMA,AU7DA,C9B4CJ,AsB3C0C,AGWnB,AIlBL,AIAA,C7B+DV,AJJJ,AsBpDoB,AGWpB,AIlBA,AIAA,CjB6DG,AIMA,AE5DH,CdVI,AQgEA,AIMA,AclDE,ARhBA,ACpBA,CGyBF,C1ByDI,AwB9D8B,AEKjC,CFLkC,CMgB7B,APpCA,CNkYD,AO9WgC,CxB8D7B,AYFZ,CZEc,AYFH,AkB5CE,APpCA,CXgFb,AWhFA,CPsFA,AC4Sa,AK9WE,AU4DJ,CpBAG,AKkTA,CblXC,AQgEA,AkB5CE,ANhB8B,CxB8D5B,AsB9DD,AEA8B,CP8W/B,AO9W8B,CpBJ7B,AQgEF,AKkTZ,AO9WqC,CAAU,CxB8D5B,AIlEvB,AakXoB,AK9WE,CL8WD,CLlTrB,AcvDA,CAAsB,CTyWG,CjBhTG,AiBgTF,CjBhTG,CwB9DY,AEKzC,CTyW6B,AO9W+B,AEKjC,CTyWvB,AO9WqC,EP8WR,CAAC,AO9W8B,CMgBnD,ARhBK,CL8Wd,Aa9VuB,ARhBA,AEAc,CEKzC,CTyWsC,AezTa,ChCS5B,AwB9D8C,CxB8D5B,A8B9CV,CAAC,ERhBE,AEAqC,CFApC,AEAvB,CxB8DW,CAAwB,G8B9CpB,C9B8CJ,A8B9CkB,C9B8CW,A8B9CvC,CRhBc,CQgBiB,ARhBA,CAA1B,EtB8DuC,AsB9DV,CtB8DW,A8B9CV,CAAC,KRhBK,CAAC,CtB8DhC,CAAV,A8B9C+B,CAAc,CAAd,C9B8C2B,CAA1D,C8B9CiD,CRhBf,CtB8D4B,A8B9C9D,ARhBmD,CtB8DpD,AsB9DmC,CQgBmB,EAArD,ARhBuD,CQgBpE,C9B8CiF,AsB9D/D,EAAsD,EAAtD,CtB8DoE,CAA1E,AsB9DgE,CtB8DxE,KsB9Dc,CAAlB;AtB+DI,AIlEJ,AM8EA,AC9DA,ACgDA,AIMA,AC4SQ,ArBpTR,AkC1CA,AZNA,ACQK,AjBmCb,AoBrDQ,ACpBA,ACmB0E,ACI1E,AIAA,ApBmDA,AuBMJ,IrBhDI,ACgDA,AIMA,AclDA,AZNA,AhB2CR,AqBzEQ,Ad0EA,ETQI,AmB5CC,CP0CF,AIMA,AGhDG,AVoCH,CL1DC,AM8EA,AEdA,AIMA,AclDA,ARhBE,AGGA,AIAA,ApBmDF,CE1CA,AmBIC,AXEG,AItCJ,CvBkFI,AWlDH,AYhCA,ACmBqE,CRmE1E,AExDO,AhB2Cf,A8BOa,ChBMG,AExDA,ACQG,CHgDX,AGhDY,AMfD,AIAA,C7B2DC,AYFZ,AKkTc,AO/WgE,CxB+DhE,AYFH,AIMA,CJNX,AIMY,AQnEoE,ACIlE,AIAA,CnBuED,AOoSI,AK9WF,ACpBf,Ad0EA,CGMc,CRhEC,AQgEA,AIMF,AclDb,C9B8CmB,AUYH,AC9DhB,ACgDc,AIMd,AC4SoB,Aa9VJ,ARhBE,ACpBH,AEuBG,AIAA,ClBSF,AQMR,CftBU,AYsEF,AExDhB,ACQqB,CP0CF,AIMnB,AExDmB,ACQX,CnB4Ce,AIlEvB,AM8EA,AoB1DA,ARhBsB,ACpBtB,CZgCA,AKsDmB,AC4SK,Aa9VH,CnBJA,ACgDrB,AIMA,AC4SyB,AE5VA,CDRzB,CFwDsB,AExDE,ACQpB,CnB4CwB,A8B9CH,C9B8CI,EgBIL,AExDI,COPd,AIAA,CJAS,AIAA,Eb+DK,AgBduB,CrBxCnD,AKsD6B,AMlEX,CAAS,CXYO,AKsDlC,AS/D4B,AIAA,CJAC,AIAA,C7B2DN,CAAkB,A8B9CpB,Cb8VD,Aa9VU,Cb8Va,CAAvB,ACpWI,AIVU,CXYlC,AMkWQ,ACpWyB,AIVE,CtB8DZ,A8B9CF,C9B8C0B,AWlDJ,AcTpB,AIAA,CCaa,AZNZ,AOPc,AIAA,CCajB,ALbP,AIAA,CCad,AZNsC,ClBoDf,AkBpDC,AOPiB,AIAA,C7B2DW,AkBpDpD,CIV2B,CAAiB,CAA1B,CXYlB,AcT8C,AIAA,C7B2DW,AsB9DV,AGGA,AIAA,C7B2DW,AWnGzB,CAmDjC,KWdsD,CAAC,AGGd,AIAA,C7B2DlB,AyB3DiC,AIAA,C7B2D3C,AyB3D4B,AIAA,G7B2D8B,AyB3DX,AIAA,C7B2D/C,CyB3DC,AIAA,CPHiC,CtB8D4B,AsB9DX,AGGA,AIAA,C7B2DpD,AsB9DmC,CGGjC,AIAA,EPHsD,AGGA,AIAA,E7B2Da,AsB9D/D,EAAsD,EAAtD,CtB8DoE,CAA1E,AsB9DgE,CtB8DxE,GyB3DgE,AIAA,QPHQ;AtB+D3E,AIlED,ACKR,AKyEQ,AEdA,AIMA,AC4SQ,ArBpTR,AkC1CA,AXC6B,AjBmCrC,AmB/BQ,ACrBI,ACnBJ,ACiBY,ACKR,AVyDJ,AczDI,AG0DR,IpBDI,AIMA,AK7CA,EFJ6B,CP2C1B,AIMA,AGjD2B,CfrB1B,AM8EA,AEdA,AIMA,AclDE,APnCA,AR+EA,CV3Dd,AcgBwC,AEI5B,AG3ByD,CPoXrD,AE7VyB,AEI5B,AG3B8C,ACSzC,AIAA,Eb+DV,AclDU,CRhBE,AEDA,CZ6DZ,AO3CqC,AKjBzB,CMgBC,AXCyB,CF6VxB,AFlTA,CXhED,CM8EC,CoB1DG,APnCA,AEsBE,AVyDF,AczDE,CzBPH,AakXE,AIzVlB,ACrBmB,CZ0EF,AWrDD,ACrBI,ClBJpB,AM8EA,Aa7FoB,AEsBE,AIAA,CVcW,AJ2CZ,CI3C0B,AJ2CzB,CI3CW,AEIjC,CJyVwB,AIzVH,ACrBT,ACnBY,CNiYC,AK9WC,CHiByB,CdhB3D,AU2DyB,CEkTW,AFlTA,CEkTC,AE7VyB,AGjB1C,CHiB2C,AGjBxB,CAAnB,CAAD,AP4DqB,CUzDG,AVyDF,AczDE,CZ2WV,AIzVzB,AIlBoC,AIAA,CZ2WD,Aa9VtB,ARhBwB,CQgBV,ATtDM,ANkGL,CMrC5B,ANqCqC,CI3Cc,CF6V1B,AE7VuC,CF6VxB,Aa9VT,AXCE,CF6VR,Aa9VO,APnCZ,CNiYI,AK9Wb,ACnBsB,AEsBX,AVyDoB,AczDpB,CZ2WJ,AE7VkD,CMdhE,AIAA,CVc4B,AGjBe,ACnB3B,CR+EiB,CEkTU,AMjYT,AR+ES,CAAV,Ce5CV,AXC6C,AIpCpD,COmCqB,CAA5B,APnC6B,AR+ES,CEkTE,AK9WjD,CL8WkD,Aa9VV,Gb8Va,AMjYrC,AR+EQ,CEkTyB,Aa9VL,CAAC,APnCA,AR+ES,EEkTG,AMjYzC,CNiYF,AMjYlB,CNiYQ,CFlTuD,Ge5CnB,CAAc,Af4CA,Ce5Cd,Af4CwB,CAAV,Ee5CI,Cf4CU,Ce5C3D,EAAqD,Af4CtC,CAAX,Ce5CJ,Af4Cb,Ce5CA;AzB3DR,AOwGQ,AIMA,AC4SK,Aa9VL,AZNA,ACMI,AjBmCZ,AoBnDS,ACnBD,ACmBY,ACGR,ACAP,AXyDG,AczDI,ApBkDJ,AuBQJ,C3BzGJ,CAAmC,EOwG3B,AIMA,AclDA,AZNA,AK7BA,AR+EA,CI9CsC,AGhBpB,CAAlB,CV8DG,AIMA,AGjDC,AJ2CD,CHAC,AIMA,AclDA,Af4CA,ANPA,CqBrCC,AZND,AK7BA,CL6BC,AhByCb,AqBtEa,ER+EL,CUzDW,AIAA,ApBkDF,AuBQF,ChBKP,CDNW,CbTnB,CUSQ,CVTR,C4BnCQ,CAAgB,AZNhB,CNkDiB,AMlDD,AK7BhB,ClBzBR,CAAA,AUwG2B,Ce5CnB,APnCmB,CX+EA,AkB5CE,AZNrB,AOPqB,AIAA,ApBkDjB,CGOJ,AMlDqB,AHkDC,ANPA,GqBrCG,GrBqCrB,CS3CJ,COPI,AIAA,CXO0B,AK7B9B,EdwEiC,CAAjC,EMOA,ANPoC,EqBrCf,AZNrB,CYM8B,CZNS,EcwCY,CFlC9B,CZNrB,CYMoC,CAAf,AZNwB,CYM7C,GZNA,EAAmD,IAAnD,EAAyD,IAAzD,EAA+D,GAA/D,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,MAApF,EAhDiC,CAkDjC;AlBkDA,AIlEA,AM8EA,AC7DA,ACgDA,AIOA,AcnDA,AXAK,AjBkCS,AoBlDd,ACnBA,ACkBa,ACIZ,AVyDD,AczDC,ApBkDG,AuBQR,E9BXkB,EUUd,AIOA,AMnEA,AP4DA,CU5Dc,AIAA,CVgBT,AMhBL,AIAA,ApBqDI,CGOD,AIOA,AGnDG,AJ4CH,CfCG,AWjDA,ACgDF,AIOA,AcnDE,APnCA,AR+EF,CXjEC,AeqBG,AVqCD,CetDM,AfsDL,CCoBD,ARvBO,AsBnDA,CMiBJ,A5BkCI,CEvDL,AeqBG,AKjBI,CpBJN,AeqBG,AGhBH,CNmEV,AcnDa,ARhBF,CtB6DG,AWjDA,AabK,AfsDf,AuBQM,C5BlEG,AQiEb,AW/Ee,ACkBK,AT6DpB,ANPe,CL1Df,CJkEiB,AWjDA,AmBIA,A5BkCH,CEvDE,AmBdE,AR+EF,CXjEC,AM8EA,ARvBH,CiBlCN,AVqCY,CTQC,AWjDA,AQIC,CnB6CA,AIlEF,AM8EA,ASzDhB,AInCkB,CnBctB,AkBKA,AEDgB,CFCM,AEDO,AfsDd,CL1DQ,AFuDT,AsBnDE,AT6DhB,ANPyB,CL1DD,AFuDV,AOGC,CTQE,AUYQ,CVZG,AIlE5B,AkBKA,AEDiC,CFCN,AEDf,AfsDiB,CL1DD,AK0DE,ETQE,AUYZ,CVZa,AUYF,AYzEA,AbqD3B,EqBrCS,APnCK,AdwEiB,CTQP,A8B7CD,APnCA,CvBgFU,EWjDpB,CD6DG,AC7DW,AmBIA,ArBqCS,CqBrCR,C9B6CU,CUYH,AsBxBY,CtBwBnD,ADpBmC,CEzCC,AFyCS,CTQR,AUYK,AC7DL,AWZV,AbqDQ,CTQY,AsB7DX,ACnBE,CvBgFD,AuBhFE,COmCZ,ArBqCsB,CqBrCR,ArBqCS,CTQC,A8B7CtC,EAA+B,ArBqCxC,CEzC2B,AWZJ,CXYmB,CXiDlB,AWjDX,AWZ4B,ACnBlB,COmCqB,ARhBrB,ACnBqB,CvBgFU,AWjDT,AmBIA,ARhBjD,ACnBkB,EAAiC,GvBgFY,AWjDT,CAAC,EmBIX,C9B6Cc,A8B7CA,C9B6CU,A8B7CxB,C9B6Cc,E8B7CI,APnCA,CvBgFU,AWjDvB,AY/Bc,CZ+BC,AmBInD,CnBJoC,CXiDrB,A8B7CsC,C9B6CjD,CAAjB,AWjDoE,AmBIvD,CAAb,CnBJiB,CY/BkC,CZ+BqB,AY/BA,CAArB,CZ+BlC,CAAjB,CY/B4E,EAA1D,EAA8D,EAA9D,EAAkE,YAAA;AvBiFpF,AIlEI,AM8EA,AC7DJ,ACgDA,AIOH,AC0SO,ArBpTJ,AkCzCA,AXDyB,AEMzB,ACrBA,ACnBI,ACiBgC,ACKpC,ACAR,AXyDQ,AczDA,ApBkDI,AuBQR,GhBhEA,ChBgEI,AWjDA,ACgDA,AI5GR,AcgEQ,ATKA,ACrBA,AP4DA,CCQJ,CNKQ,AS1DqB,AVsCrB,CTQD,AYDA,AO7CuB,AJ6CvB,CfCC,AYDA,AKiTA,ArBpTE,AkCzCF,ALbE,AVyDF,AczDE,CCaD,AXDuB,AGfvB,AIGb,AjBkDe,CL1DG,AeoBmB,AEMvB,ACrBA,AEF8B,AfuD5B,CGOR,ASvCO,AGvB8B,CxB+DrC,AWjDQ,ACgDA,CDhDC,ACgDT,AKiTQ,AMhYI,ACiB2B,ACK5B,AIAA,CzBRG,AakXL,AE9VwB,CnB8CtB,AK7DJ,AO4DI,AO7CuB,CT0DpB,AEbd,AY9D0C,ACK5B,AVyDd,AczDc,ApBkDV,CL1Da,AoBG0B,AT8D9B,ANPE,CGOD,CAAd,AkB5CA,ClCyCkB,AkCzCF,ARhBhB,AGGkB,AIAA,CzBRG,AQiEJ,ASvCjB,ACrBiB,CV4DjB,ASvCkB,AZgCE,AuBQJ,ChCAG,AWjDnB,Af6C6C,AuB1ChB,AJ6CV,CJhDC,ACgDA,AkB5CpB,AXD2C,AIlCpB,AR+EH,CnBHpB,AkCzCqB,AXDQ,AGf7B,ACnBwB,ACiBe,CxB+DjB,AqBxCtB,ACrBsB,AEF8B,AfuDrC,CYhCQ,AGvBgB,AfuDd,CEzCzB,ACgDsB,AO7CyB,AOZvD,AXyD2B,ANPJ,CEzCU,AmBIA,Af4CZ,CO5Da,ACnBd,ACiB4C,CLiBN,AIlCpB,AdwED,CGOH,AKiTtB,AE9V+C,AEMnD,ANuC4B,ANPE,CEzCD,ACgDF,AKiTC,AQ1Wd,AIAA,CJAS,AIAA,CjByDvB,AW/EY,AdwER,CcxE+B,CAAvB,AR+EC,ANPsB,CL1DlB,AmBdN,AdwEP,CL1D0B,AqBQF,AIAA,C7B0D5B,AiBgTmC,AE9VY,AMZlB,AVyDO,AczDP,CVY+B,AIlCnB,COmCpB,AXDQ,CF8VS,Aa7VR,ARhBR,CAAS,ClBLK,AeoB4B,CfpB3B,AOiBZ,AIgDiB,CJhDR,AmBIb,AXDO,AJ6Ce,CEiTD,AMhY/B,AEsBY,AIAA,CzBRe,AakXK,Aa7VP,ALbE,AIAA,CCajB,ALbP,AIAA,AG6CqC,C5BrDlC,A0BqBjB,AXDoE,AIlCjB,AR+ET,CJhDjB,AcTgB,AVyDzC,AczDyC,CzBRC,COiBD,AWZnB,AP4D4B,CXjEjC,AOiBQ,CPjBrB,AOiBJ,AMiW4B,AK7We,CAArB,AGGwB,AIAA,CNtB1C,AEsB2C,AIAA,CZ0WM,AK7WP,AP4DS,CEiTnD,AK5WA,EL4WoD,IQ1Wf,AIAA,CJAe,AVyDN,AczDM,CJAf,AVyDuB,AczDvB,CZ0WrC,AFjTJ,EEiTiE,AQ1WL,AVyDO,AczDP,EJA9C,AIAA,EJAkD,AIAA,CdyDQ,CEiTpE,AQ1WU,AIAA,EZ0W2D,AQ1WL,AIAA,KdyDD,CAAc,CAAjF,KUzDoE,AIAA,IZ0WmB,MAAd,GAAoB,GAAzF;AjB/SJ,AIlEI,AM8EH,AC7DD,ACgDA,AmBxCA,AnCqCA,AsB/CA,ACII,AjBmCR,AmB5BI,ACrBK,ACnBJ,ACgBW,ACMR,AC/CZ,AXyGQ,Ac1DI,ApBkDA,AuBQR,CNzGJ,CAAkC,E1ByG1B,AYDA,ASvCA,ANwCA,CIlDsC,AIhCpB,CnBgBd,AegBgB,AGXf,ACrBL,Ad0EI,CTQD,AYDA,AOjDH,AGXM,AP6DH,CfAC,AWjDE,ACgDF,AhBHE,AsB/CA,AHmDF,CMxCC,ACrBG,AELI,Af0DL,CYhCD,AIlBI,AIAA,ApBkDF,CPJZ,AsBnDgB,ACKD,AIAA,CXOD,ENkDV,AazDc,AIAA,CXOD,AHmDb,CNRI,CTQJ,AIlEe,AOiBA,AFyCA,CL1DC,AR8DA,AMRpB,CgBvCqB,AhBuCT,AoBjDU,CtB6DF,AWjDE,ATqCtB,AmB5BI,ACrBmB,AGGC,AIAA,CjCsDD,AyBpCF,AIlBI,AIAA,CzBRjB,AFsDe,AwB7F3B,AjBiG4B,CL1DC,AR8DrB,AMRJ,AwB7FJ,AMyGyB,CrBjDK,CTqCQ,AmB5B9B,CAAsB,AZgCP,CL1DX,AK0DqB,CarDjB,AbqDO,CPJnB,AoBjDgC,AGGC,AIAA,CPHzB,AGG0B,AIAA,C3B8Cc,AOIf,CYhC7B,EZgCI,EAA8B,CS3CrB,CAAc,AhBuC/B,AuB9CyB,AIAA,E3B8CsC,AuB9CvC,AIAA,CJAhB,AIAA,ApBkDmC,CEzCrB,AOFa,CPEC,AOFA,ClBmDH,CSRK,CAAU,CAAV,AuBNiB,GhCcnC,AWjDuB,AFyCS,CTQhD,AWjDwC,AOFb,AT2CsB,CS3CR,CAA5B,CT2CT,CS3CwC,IPEZ,AOFgB,CPEC,AOFA,CPE/B,EAAkC,KOFR,CAAc,CPEC,AOFf,CPEgB,EOFE,EAAjD,EAAqD,EPEd,AOFvC,CPEwD,AOFrE,CPEoD,GAAqB,EAAvD,EAA2D,EAA3D,CAAlB;AXkDA,AIjEI,AOgBJ,ACgDA,AKiTI,Aa9VJ,AZLA,ACKA,AjBiCJ,AmB3BI,ACtB+B,AEFlB,ACMT,AV0DP,Ac1DO,ApBkDA,AuBQR,GjBtDA,CfsDI,AWjDA,ACgDA,AkB7CA,AZLA,ACKA,AEMA,ECtB+B,AbsD3B,CTQD,AYDA,AU7D6B,CtB8D5B,AYDA,AMlDA,AhBsCR,C4BjCQ,AZLC,AIX6B,AbsD3B,CLzDG,A0BmBL,ATMC,AGxBO,ACMH,AIAA,ApBkDF,CUtCD,AEMA,AGxBO,ACMH,AIAA,CZ0WH,AE9VA,CRHC,AMiWA,Af7Tb,AsBnDoB,CpBDF,AOgBJ,AWb6B,AGIzB,AIAA,CjByDd,AU7DwC,CtB8DxC,AEZA,AOII,CTQS,AIjEI,AaiXJ,ARxTE,CGzDkC,AKiX7C,CL/SJ,AMpDA,AMbsB,CPgXN,Aa9VhB,AZLgB,AMbO,ACMH,AIAA,CzBPC,A0BmBL,ATMhB,AGxBsB,ACMD,AIAA,AG0DN,Cb9Cf,AjBkCA,AmB5BkB,AGxBF,AfwDI,CTQD,AmB9CA,AjBkCnB,AoBlDkC,AEFR,CxBgEN,AWjDpB,AOFA,AIXiD,CXa5B,AmBGrB,AZLqB,CYKA,ATMrB,AZgCe,CUtCf,AjBkCA,AmB5BuB,AZgCE,CTQN,AmB9CK,AjBkCxB,AOIe,CTQF,AWjDb,AOFyB,AOPI,AIAA,ClBSH,AmBG1B,ALZ8B,AIAA,CLNd,AfwDa,CTQD,A8B9CD,AXAC,AjBkC5B,AmB5BA,AGxBmC,CAAvB,CbekB,ATqCxB,AOIF,CPJJ,C4BlCA,ArBsCkC,CTQrB,AEZJ,AOIL,CLzDa,A0BmBgB,A5BkCjC,AuB9CqB,AIAA,CzBPS,CJiEM,AEZxB,AuB9CQ,AIAA,CJAhB,AIAA,CCYJ,AZLqB,Cdda,AccJ,CddK,A0BtCF,A5B2FjC,C4BhCA,AXFwB,CnB8CkB,AmB9CT,AjBkCf,CFYyB,AWjDjB,AOFL,CPEc,COFC,ACKZ,CDLH,ClBmDqB,AkBnD1C,ACKsC,CnB8CtC,AIjE8B,AemBN,CfnBoB,AemB5C,AjBkCA,CFYkD,AIjEpB,COgBJ,ATqCC,A8BHwB,C9BGnD,CErDgD,AOgBJ,CAAlB,CXiD6B,AIjEtC,AOgBjB,EPhBoD,AFqDvB,EErDZ,CAAb,CFoDR,EFasD,CAAc,CAAhE,EAAmE,KAAK,QAAL,CAAc,CAAjF;AAEA,AIlEI,AM4EJ,AMNJ,AC2SY,ArBrTR,AsB9CA,AGWA,ACvBI,AClBJ,ACgBsC,ACOlC,AIAA,ApBkDA,AuBQR,EhBKA,ENMI,AWnDA,AEzCA,CDiB8C,ClBD1C,AkBCkB,AbwDlB,CaxDJ,CtBiEM,AkBpDA,CtB8CD,AyBnCA,AEzCD,AdyEG,CQwTC,AIxVF,AEzCD,ACgBiC,ACO5B,AIAA,ApBkDF,COaZ,AQtE2C,CRsE3C,AExDc,CR8DD,AdhBA,A4B5DgC,ACO5B,AIAA,CjCqDH,CqBqTE,ACnWC,AQRN,ChBsEK,AOqSC,AQ1WG,AIAA,ApBkDZ,CTSW,AIlEA,AR4DF,CQ5DG,AR4DhB,CsB9CiB,AMd8B,CxBkE7B,AJNF,AyBnChB,AEzCA,ACgBgD,CRsEpD,ApBVqB,AyBnCA,AEzCD,ACgB+B,AQiEhC,C5BjEX,AYsER,AQtE6C,ACOnB,AIAA,CzBPD,AoBA8B,ACO5B,AIAA,CnBqEH,AdhBA,CIMG,AqBzCvB,AEzCA,CFyCsB,AEzCD,CnBgBjB,EALwB,ARiEH,CQ1DrB,AYoER,CQtE6C,CHyBzC,AGzB4D,CRsEhE,AQtE6C,Cd4EX,AOqStB,CjB/SU,AiB+Sc,AMjYhC,CvBkFkC,AiB+SD,AOjX+B,ACO5B,AIAA,CnBqEH,AQ9DpB,AOPwB,AIAA,CnBqEzB,AQ9De,AMdc,Cd4EzC,AOqSoC,CjB/SA,AiB+S5B,COjX6D,CPiX9B,ACnWR,CFwD1B,AC2SG,ACnWwB,ElBoDS,AiB+SC,ArBrTtB,A4B5DmD,ACOhD,AIAA,CjCqDmB,CoBU9C,AS/D0B,AIAA,CJAlB,AIAA,Cb+DgB,EC2SZ,ACnWmB,ClBoDT,AJNlB,AsB9CyC,ClBoDzC,AiB+SkD,ACnWrC,CtB8CqC,AoCXC,CpCWA,AsB9CP,EtB8C5C,EAAuD,AsB9CP,CAAC,QDmWc,ACnWnB,CAAc,CAAd,GAAkB,CDmWZ,CCnWrC,EDmWwD,ACnWH,EAArD,CDmWL,ACnWR;AR+DA,AC7DA,ACkDA,AIKA,AC2SK,ArBrTD,AsB9CJ,ACKA,AjBiCA,AsBrDY,ACQR,AV0DR,Ac1DQ,ApBkDH,AuBQL,EjBAA,EJlDI,AODA,ACKA,AjBiCA,COZiD,CAmBjD,ES7CI,CR8DC,AC7DD,ACkDC,AMnDA,ACKD,AjBiCA,AsBxDQ,CbmBP,Af6CK,AuBzCL,AjBiCA,AuB7CK,AIAA,Cb+DH,AQtEK,CRsEJ,ADLZ,CHAa,AGAb,CLWI,AEXU,AhBLI,C6BrDC,AIAA,C3B6Cf,A8BaU,CtBWG,AEXA,AIKA,ApBVI,CgBKjB,Aa1DkB,AIAA,CXOlB,AhBsCc,CSrCd,ACkDgB,AMnDA,ACKhB,CRJgB,ACkDC,AO9CD,AMZK,AIAA,Cb+Db,ApBVc,AMRtB,AaaJ,CLWuB,AMNA,ADLvB,CLWwB,AEXA,AMnDpB,AOPwB,AIAA,ClBQxB,AODqB,ACKrB,AMZkB,AIAA,ClBQG,AQIA,EHmDb,AS/DoB,AIAA,CjB0DH,AMnDA,AOPrB,AIAA,Ed0DR,CCKgC,CAArB,AGnDP,CTyDa,AC7Db,AKuDA,ADLJ,CLWmC,ASzDD,CRJC,Ef6Cd,CAAsB,CcgBH,AdhBnB,CAAb,CgBKgB,AMnDC,ACKrB,CP8CuC,AMnDT,CCKS,AJ8ClC,CJlDL,CqBiCmD,CdlC9B,CR8DU,AKXnC,CLWiD,AEX7C,AMnDoC,ACKpC,CDLqB,AHmDD,CHA2B,AMnD/C,ACK8C,CP8CE,CFWjB,CAAmB,AEXlD,EAAoD,AO9CpD,ETyD+B,ASzDsB,CTyDxC,EAA4C,CSzDzD,EAA2D,IAA3D,ETyDa,ASzDoD,CTyDjE,GSzDA,EAAuE,IAAvE,EAA6E,GAA7E,EAAkF,MAAlF,EAA0F,MAA1F,EAAkG,MAAlG,EA7DiC,CA+DjC;AnB6CA,AIhEI,AM2EP,AEXO,AIKP,AC2SI,ArBrTG,AkCzCJ,AZLA,AGUH,ACtBG,AClBA,ACea,ACQT,AV0DJ,Ac1DI,AG0DR,GtBpCA,AMuCA,CMlEI,ItB+DI,A8B9CE,AZLA,AK9BA,ARiFF,CO/DA,ClBDM,AQgEA,AhBLF,A0B1DH,AEHQ,CAAC,CpBEF,AcaF,AHmDF,CnBLG,A4B7DK,ACQL,AIAA,CG0DH,C5BhEO,AcaF,AHmDF,CXhEK,AQgEA,AhBLS,AmBKzB,CfAa,CJLT,CgBKe,AMnDF,AMfK,CpBEF,AkBCpB,AEHuB,CxBkEN,AIhEI,A0BkBF,ARjBH,AEHM,CAAN,CDfK,ACeK,CZkEF,AkB9CF,CRjBtB,CAAqB,AClBG,AEuBF,AIAA,ECYI,C1BlBV,CJgEU,AIhEI,CJgEH,AIhEX,AmBjBhB,ACegB,ACQW,AIAA,CLRQ,CAAvB,CxBkEK,AIhEiB,CqBMH,AIAA,C7B0D/B,AsB/DA,AGKsB,AIAA,CjB0DH,AMnDN,ClBmDqB,AIhEI,AQgEA,AMnDX,AIZM,ClBDM,AQgEpB,Aa1DgB,AIAA,CjB0D/B,Ca1DkB,AIAA,AGwC6B,CdjCpB,CAAC,CYKV,ALZkB,AIAA,CCYN,ARjBlC,ElBDkC,AkBCQ,AGK/B,AIAA,CzBNqC,A0BkB1B,C1BlBP,C0BkBwB,CZLZ,AOPoB,AIAA,CXON,CdbU,A0BkB7B,AZLT,CdbT,C0BkBwC,AZLA,CYKC,ARjB7C,AGKI,AIAA,EPLiD,CJYL,CAAC,GYKL,EAAU,ERjBtD,CJY4C,CAAc,CAAd,EYKA,CAAtB,AZLwC,EYKE,AZLnD,EAAqD,EAArD,CYKS,AZLtB,EYKuE,EAAjD,CAAtB;A9B+CI,AIhEA,AOaJ,ACmDI,AMnDJ,AhBqCH,AsBrDyC,ACSrC,AVyDD,AczDC,AG2DL,IrBpDI,AOAA,CObc,AIAA,C7BgEV,AYAA,AahEJ,AIAA,EXaI,AHkDU,CfCP,AWnDH,ACmDG,AMnDF,ClBmDG,AIhEE,AOaL,ACmDG,AYnE8B,CAAC,CpBG3B,AW+DM,CSlEuB,CxBmErC,CIhEW,AW+DM,CAArB,CfCe,AeFK,CAEpB,CXhEmB,AQgEf,AMnDJ,AMhB+C,CpBG3B,AcaJ,AMhBgC,CxBmE7B,AwBnE4B,CxBmE3B,AYAA,AYnEqB,CAAU,CNgBnD,CAAqB,CPArB,CXmDe,AWnDO,CXmDI,AIhEX,CAAc,AcaJ,CdbV,COaf,AahByC,CbgBd,AahBiC,CpBG3B,AoBHQ,EpBGrC,CJgE8B,AwBnE8B,EAAvB,CxBmEN,CWnDnC,CahBqE,CxBmEtD,AWnDsB,AOAhB,CAAS,ENmDE,AYnEuC,CxBmE7B,AYAT,AYnErB,CNgBS,EAAe,CNmDC,AMnDhB,CPArB,AOAA,INmD0C,KZAtC,AYAiC,CAAW,KAA5B,EAAmC,MAAnC,CAAhB;AZCA,AIhEA,AM2ER,AEXQ,AIKR,AC2SI,ArBtTI,AkCzCJ,AXCA,AEIR,ACtBQ,AClBA,ACc0E,Af4D1E,AuBSJ,EtBUA,AMNA,EcpDI,APnCA,EvBkFI,AYAA,AKgTJ,EE9VM,AGlBA,AbwDA,CTQC,AYAA,AKgTJ,Aa/VC,ATKZ,CrB0CgB,AIhEE,AQgEF,AKgTJ,Aa/VC,ANrBqE,Af4DlE,COaZ,ApBXa,CoBWb,AGnDc,CflBG,AKwDF,Ce5DmE,Cd+ElF,AdjBiB,AuBxCA,AIpCF,CnBkBK,AM2EpB,AdjBkB,A2B5EF,ACcoE,CPoXhF,CjBhTI,AsBhEY,AbwDA,CTQC,AYAb,AhBNa,AuBxCA,CflBG,AaoVV,ArB1RN,AkCzCJ,CdoDJ,AC6SI,AajWgB,ARjBG,CNqEvB,ApBXwB,AaFT,AuBSK,CpCPK,AyBpC7B,ACtBQ,AClBA,Ad0EqB,CAArB,CCmBJ,AoB1DI,CpB0DJ,AdjB4B,AkCzCH,APnCC,I3B4EM,CAAC,CciBjC,EVXQ,AIhEY,AYqEpB,CZrEgC,AM2EhC,CVXsC,AJNV,CQ1DM,AYqElC,ApBXuC,AuBxCtB,CAAc,AIpCL,COmCtB,C1BjBiC,CJgEM,AJNf,CQ1DR,AR0DwB,AuBxCT,CAAC,CflBK,CM2ElC,CN3Ea,EAAyB,AM2E7C,AdjBQ,CIM8B,AgBKtC,ChBLoD,AIhEhC,AM2EkB,AdjBc,CIM5C,AJN6C,AuBxCtB,CflBkB,AekBJ,CnB8CU,AIhEnC,AR0DZ,AuBxCS,CflBT,CR0DiD,AuBxCT,CTyDhD,CsB/BuD,ChCoBK,AUWP,CSzDD,CAAC,MnB8CE,CAAc,CAAd,AmB9CP,CAAc,CAAd,CnB8CyB,EmB9CP,EAAjD,CnB8C6D,CmB9CR,EAArD,CnB8CwD,AmB9CrE,CnB8C+E,CAAV,GAAY,IAA7E;AACH,AIhEG,AM2EJ,AC9DA,ACmDI,AhBNI,AsB9CR,ACMA,AjB+BJ,AmBhGJ,AE6BY,ACaQ,ACWZ,AVyDA,AczDA,ApBiDA,AuBUJ,CXhHJ,CnBgGI,AmBhGyB,EX0HrB,AQ/DA,ACMA,AMZA,AIAA,EzBNI,AQgEA,AWlFA,Cb6FD,CAAC,AC9DE,Af6CE,AuBxCJ,AVqCoB,CLvDjB,AQgEA,AMpDH,ACMC,AjB+BT,AsB1DgB,ACeR,AVyDC,AczDD,CzBNI,AQgEA,AMpDH,AhBqCT,AsB/DgC,ACoBvB,AIAA,ApBiDqB,CbGf,CciBX,AdjBY,A4B9DD,AQqEL,CpBDF,AGDK,ANRoB,CE1CjB,ACmDA,AGDF,CCKd,CACI,ApBXQ,A4BxEoB,Cb2Bb,Af6CE,A4BxET,AT6EK,CAAb,ANRkC,CUrClC,AjB+BJ,CEjDQ,AQgEc,AMpDlB,ACMgB,AjB+BpB,AuB3CI,AVyDgB,AczDhB,CzBNmB,AOaA,ACmDA,AhBNE,AsB9CL,AK9BG,AEwBH,AVyDC,AczDD,CjB0DZ,AhBNkB,AyBzG9B,AE6B4B,AdyES,CYtGrC,AZsG+C,CGSjB,AO9CtB,AJ6CoB,ANRpB,CLvDI,AcYJ,ACMqB,AMZrB,AIAA,CzBNwB,AcYH,AONA,AIAA,CjCoDJ,CAAW,AMThC,AqBnEQ,CJoCqB,AJ6CA,CX/DG,AQgEA,AMpD5B,CNoD6B,AVfjC,CUeQ,AhBNa,AsB9CU,CtB8CM,CgBMD,AhBNf,A6BpDjB,AIAA,CjB0DI,AhBNI,CsB9CR,AON+B,AVyD/B,AczD+B,CjB0DI,CAA/B,AMpD6B,AHmDC,AiBpBiB,CrB9BpC,AIkDoB,CJlDN,ACmDS,CVfjC,AacL,CGnDA,ACMqB,CflBG,AOaT,AQKe,AJ6CS,CX/DN,AQgEO,AM7GP,AhB8FrC,AuB3CI,AIAA,ClBOkC,AOClC,ChBmCkC,AuB3CO,AIAA,CVYpB,CflBG,AOaT,ACmD6B,CAAC,AO9CT,CflBG,AOaA,AQKlB,CflBG,AQgEpB,AO9CJ,CRLe,CPb2B,AOa1C,EPbwB,CAApB,GqBMJ,AIAA,EJAwD,AIAA,KJAxD,AIAA,EJA+D,AIAA,KJA/D,AIAA,EJAsE,AIAA,KJAtE,AIAA;AzBLI,AM4EJ,AC/DA,ACmDI,AKiTJ,ArBvTK,AkCzCL,AXCA,AjB+BA,AoBlDA,ACjBI,ARiFA,ANRJ,AuBUJ,IrBpDI,AToCA,AOMA,ELvDI,AQgEA,AWlFA,ARiFA,CbdD,AOMA,CCqBG,AoB3DA,AXCA,AjB+BF,AOMA,CLvDG,AQgEA,AUjEF,ClBCG,AOaF,ACmDE,AKiTJ,AFlTI,CJlDD,CD+DG,AS1DA,CGnBD,CViEL,AkB/CQ,ARlBF,APgEE,AiBEJ,CtBWK,AOqSJ,AE/VI,EWDE,A5BgCf,AoBlDa,ACjBE,AdyEf,CaxDA,ACjBgB,CNmYH,AE/VI,CflBb,AM4Ec,AOqSlB,AKlXgB,APgEE,CX/DC,AOanB,AmBImB,ARlBF,APgEE,CJlDD,AMoWF,EKlXI,ClBChB,AkBDJ,APgEuB,CX/DC,AOaxB,AIkDwB,CJlDD,AWdA,APgEA,CLaV,AY7EW,APgEN,CLaS,Aa9FvB,ARiFQ,CX/DgB,AM4Ef,AY7Eb,ACjB4B,CZ+BD,CWdC,CZ6EG,AKbA,Ce9ChB,CAAS,EXCX,CT0DuB,AS1DT,AJ6CS,CQjFhC,ARiFQ,CQjF0B,ARiFlC,Ce9C0B,CpB2DC,AoB3DA,AXCA,AawBoB,C5B1C3B,AM4EiB,AS1DT,CflBC,AM4EF,AC/DR,CAAS,ED+DW,AC/DpB,AY/BnB,CnBkBoB,AM4ExB,Aa9F8C,CZ+BV,CPbG,AOahB,AmBIC,C1BjBA,AOaxB,AmBIwC,AXCb,CWDZ,AXC0B,CflBC,AekB7B,AIpCT,COmCuC,APnCS,CnBkB5B,AekBoB,CflBxC,A0BiBW,EAAgC,CXCC,CWDjC,AXCkC,EWDE,GAApC,APnCX,COmCJ,CPnCiE,CJoCrB,CAAc,CAAd,GAAkB,EAAjD,CIpCT,CJoC8D,EAArD,CAAb;AnB+CA,AIhEI,AM4EJ,AEZI,AKiTA,AahWJ,AXCA,AjB+BA,AoBlDI,AEJI,ACWR,AVyDI,AczDJ,ApBiDA,AuBUJ,IhCDI,AmB9CA,AjB+BA,AOMA,CgBjDA,AIAA,CjB0DI,AGDA,CfCD,AEfA,AuB3CH,AIAA,ApBiDG,CTSC,AUYE,AOqSF,AahWE,AXCF,AjB+BA,AsBtDI,Af4DJ,CGSG,AO9CF,CflBK,AQgEF,AUjEE,AGOV,AVyDQ,AczDR,CnBsES,EN5EI,AaiXL,AOtXI,CdiFA,AOqSH,AahWG,A5BgCZ,AsBtDa,AToED,ANRZ,CTSA,AEfW,AmB5BJ,AIfH,AIAA,ApBiDO,AuBUF,C5BjEO,AQgEZ,AUjEY,AGOX,AIAA,ApBiDL,CqBtCe,CrBsCM,CCqBJ,AS1DjB,AGnBmB,ClBCC,AekBJ,AjB+BA,AacE,ANRK,CqBtCJ,Af8CA,EOhEI,AbwDG,CUrC1B,AjB+BW,AsBtDH,Af4DmB,CQ0TvB,AE/ViB,AjB+BA,AsBtDG,AToED,CEkTF,AfhUV,Aaca,CLaZ,AKba,ANRzB,CCqB0B,CAAd,AS1Da,AjB+BA,AsBtDjB,CAAqB,AToED,CEkTxB,CPrS0B,AOqSH,AfhU3B,AuB3CA,AIAA,CLXQ,CpBKQ,A0BiBD,A5BgCe,AuB3CR,AIAA,CzBNM,A0BiBJ,A5BgCO,AacE,CEkT7B,CbjX0B,AM4EK,CetEnC,AIAA,CZ2WkC,AQ3WR,AIAA,CzBNO,AaiXE,AfhUC,CQ2BN,AoB3DA,ARlBX,ClBCH,AM4EwB,AoB3DT,AXCV,AGnBY,APgEV,CLaO,AS1DA,AJ6CZ,CX/DmB,AFiDN,AuB3C/B,AVyDY,AczDZ,AGmCmD,CfwUjB,AfhUO,AuB3Cf,AIAA,CzBNV,AM4E0B,AOqStC,AfhU0B,CQ2B9B,AS1DqB,AGnBiB,AGOtC,AIAA,CzBNyC,AkBDF,APgEO,CI7CV,AjB+BS,AuB3Cf,AIAA,CzBNd,A0BiBQ,AXCH,CWDmB,AXCxC,CflB6C,A0BiB9B,A5BgCf,CEjDgB,AW+DmC,CX/D/C,A0BiBuC,Af8C/B,CAAR,Ce9CW,ARlBkB,CAAe,CQkBD,ARlBd,CGOjC,AIAA,CCWe,CRlBqC,CQkBD,GAApC,CAAf,ARlByD,CAAC,aAAN,CAAoB,CAApB,EAAuB,CAAxD,EAA2D,GAA3D,EAAgE,EAAhE,CAAf;AtBkEP,AIhEO,AM4EJ,AChEA,ACoDC,AIGD,AC8SI,ArBxTA,AkCxCJ,AZLA,ACMA,AjB+BA,AoBlDI,AClBA,ARkFH,ANRD,AuBUJ,GhC1DA,CUqEI,AChEA,ATqCA,AOMA,ELvDI,ARyDA,A0B1DA,CZ6ED,AR3BA,AOMA,CCqBC,AMTA,AclDE,AZLA,ACMA,AjB+BF,AOMA,CLvDG,AOYH,AKuDA,CZnEI,AOYH,AY/BG,CPsFJ,CC8SI,AE/VE,AGnBA,CLkXD,AKlXE,CNoEP,AclDQ,A5BgCZ,AOMA,CUrCa,AjB+BF,AOMA,CbEG,CcmBd,AdnBe,AkCxCA,ArBsCF,CCqBC,AOqSD,CD9SJ,AC8SK,AE/VG,CflBb,AOYJ,ATqCgB,AOMC,CLvDE,AOYH,Af6CZ,AkCxCe,AZLA,AK/BA,ASoFJ,CtBWf,AdnBoB,A2B5EA,CDkBhB,AbwDJ,CCqBoB,AQhEE,AhBqCX,AoBlDW,ClBClB,AOYJ,AMqWI,AfhUiB,AOMC,CLvDE,AOYH,ATqCV,CQ2BX,AOqSsB,AMpYd,Ad0EgB,CS3CE,AIbtB,AClBsB,Cb0FuB,AMJ7C,AdlBqB,AoBlDE,ClBCC,AM6E5B,AMVoB,APZO,COYvB,APZwB,CE3C5B,AKuDI,AC8SsB,AfhU1B,AqBpEQ,CNoYmB,AKlXI,AClBA,COoChB,A5BgCe,AqBpEtB,Ad0ER,CqBtCwB,A5BgCxB,AqBpEI,EJqCS,AIrCsB,CPsFb,AGjDK,CF+VL,EahWQ,CdkD1B,AC8SgC,AahWL,AXCA,CflBP,AekBQ,CflBC,AcYX,CAAY,CFuDZ,AC8SA,AKlXK,CAAS,ClBCZ,AYmEF,AEvDA,EdZiB,A0BiBf,AZLe,CdZf,A0BiBgB,AXCb,AasBwB,CFvBpC,AXC0B,AGnBd,ClBCe,AYmEpB,AEvDA,ACMT,CWD8B,ARlBA,ClBCnB,AcYoB,ACMA,AGnBjB,ClBCvB,AcYyC,CIbC,CNoExB,CAAlB,AGjD4C,AGnBrB,CQkBsB,AXCA,AGnB7C,CQkB8C,CdkD5B,CEvDsB,EAAU,EFuDhC,CAAlB,AGjDwC,CWDD,AXCe,CWDC,AXCf,CHiDtB,AclDqB,CZLC,CFuDtB,AEvDA,ACMwC,CHiDtC,AclDuC,CZLC,ACMnD,CWDE,CdkDO,AGjD4C,CWDC,CdkDnE,AGjDa,CWDE,AZLO,ACMtB,CHiD+B,CclDwC,AZLA,EAAjD,CYKP,AZLf,CYKA;A1BhBI,AYmEA,AC8SH,ArBzToB,AkCvCrB,AXCA,AjB+BA,AoBlDI,AClBI,ACaA,Af6DR,AuBUJ,Ib/CI,AjB+BA,AOMA,ELvDI,AkBDA,CpBkDD,AOMA,CbCkB,AkCvCf,AXCF,AjB+BA,AqBpEI,ACaA,Af6DJ,CLvDG,AekBF,CflBG,CFiDR,CNOyB,AMPjB,C4BhCG,A5BgCX,AsBvDa,Af6Db,CbC2B,A4B9Db,Af6DH,CPNA,C4BhCG,A5BgCd,AoBlDc,AbwDD,CaxDE,CpBkDD,A8BgBF,Cb/CZ,AVqCiB,CLvDb,A0BiBc,AXCF,CflBG,AkBDf,CAAgB,AbwDpB,CPNmB,AqBpEI,CJqCvB,AIrCwB,ACahB,Af6Dc,CLvDlB,AekBiB,AKxBI,CpBMD,AKuDA,CPNV,CAAU,AoBlDpB,CHmBqB,AjB+BX,AsBvDN,Af6DmB,CLvDC,AmBnBpB,ACasB,Af6DF,EPNA,C4BhCd,ArBsCd,CqBtCuB,ANvBW,CtBuDlC,AOMiC,EPNA,AOME,CPNnC,EAAoC,AOMG,CqBtCT,CAAC,AXCV,CflBG,AekBM,AVqC9B,CLvDiC,AFiDO,CAAC,AOMG,EUrCvB,AjB+BrB,AsBvD8B,Af6DgB,CLvDtB,AoBNe,CLwBH,CflBG,A0BiBhB,AXCF,AVqC4B,CLvDzB,A0BiBgB,AXCxC,AKxB8B,Af6DoB,CqBtCpC,C1BjB4B,AoBNE,CMuBD,ANvBb,Af6D9B,CLvDwB,AoBNhB,CpBMJ,AKuDmD,CqBtCzC,CrBsC2C,CqBtCT,EAAlC,ArBsC8C,EqBtCR,CrBsCpD,EqBtCc,EAA2C;A9BgD7D,AI/DQ,AM2EJ,ACjEA,ACqDA,AIGI,AC8SP,ArB1TuB,AkCvCuC,AZL3D,AhBsCA,AoBlDC,AClBI,ACaA,ACUR,AV2DG,Ac3DH,ApBmDG,AuBjBmD,CAA3D,ChC0BI,EUYI,ACjEA,ACqDA,AMrDA,AhBsCA,AOMA,CQuRJ,Ca9T+D,C9BgD/D,AUYO,AEZA,AhBTC,AMND,AOMA,CTSP,AUYQ,AEZA,AVfA,AacE,ANRF,CE5CA,AOAA,CdVM,AOUL,AKwDG,AExDH,CFwDG,AcnDwD,EdmDxD,AcnD0D,C5BiClE,AacY,ANRZ,CGSA,AVfW,AOMA,CLtDK,AYkER,AdlBI,CFehB,AUYI,AKbe,ANRF,CTSjB,CI/DuB,CM2EH,AQjEhB,AT4CiB,COYJ,AExDG,AhBsCC,AacE,EX9DI,AKsDvB,CMQsB,CGpDtB,AhBsCY,AOMU,CTS1B,AWrDI,AOAqB,AhBsCC,CStCA,ATsCX,AOMa,CMQxB,CfCJ,CEf8B,AOME,CE5C5B,AKwDQ,CLxDmB,AKwDH,CAAhB,AdlBR,AOMA,COYQ,CdlBuB,CAAC,EStChC,CXqDK,AkBrDL,CP9DiC,AKsHP,CZlEP,AOYnB,AToCqC,CEhDJ,CJ+DrC,CI/DuB,AYkEX,ChBHY,AEfY,CEhDK,AFgDK,CAAX,CckBL,CZlEP,AM2Ee,CMTR,AdlBoB,CEhDJ,EAAvB,AFgDnB,CEhDI,CM2EY,AMTU,CNS1B,IMT0B,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,GAAF,EAAtB,EAA+B;AhBFnC,AI/DI,AM2EJ,AEZH,AIGW,ApBZP,AkCxCwD,AXEzD,AjBgCA,AacA,ANRA,AuBUR,GpB9EI,CFyFI,AEvIR,AO4EQ,AjBgCA,AOMA,AuBUJ,CpBAA,AkBlDkB,C1BdV,A0BcJ,CpB6DG,AR3BA,AOMA,CTSC,AUYA,AR3BA,AacA,ANRA,CUtCA,CAAC,EnB+CG,CgBGK,APZb,CAAW,CTSA,CAAX,ASTa,CLtDE,AM2Ef,AR3BA,CEhDgB,AYkER,ADJM,CCIK,APZF,CUtCjB,AagDY,CbhDI,AJ8CC,CX9Db,AKsDJ,CLtDqB,A4BgEuB,ChBEpC,APZc,CUtCtB,AagDR,CbhD6B,AJ8CC,ANRE,CMQD,EX9DnB,AKsDwB,CUtC5B,EAA2B,AJ8CC,ANR5B,EAAiC,EUtCjC,AVsCmC,EUtCF,CJ8CV,ANRgB,GUtCvC,AJ8CsC,ANRtC,CMQsB,CI9CiB,AJ8CvC,ANR4C,EAAE,GAAI,GUtClD,AVsCA,EU5GiC,AV4GsB,CUpCvD,CVoCyD,GAAG,GAA5D;ATSA,AUaA,AMTQ,ACjFR,Aa6BA,AZJA,AhBsCA,AoBnDA,AClBI,ACcA,ACSZ,AIAA,ApBoDQ,IQrEA,Af+DA,AOMA,CazDA,EpBmDG,AoBnDH,AbyDG,CTQW,AUaV,AoB7DE,AZJA,AhBsCF,AOMA,CCqBC,AezEb,AIAA,CZjBc,AKYN,AEJQ,CPRD,AOQE,CxBqES,AUaV,AMTI,CcpDD,APnCA,CL+BC,AhBsCZ,AsBvDY,Af6DZ,CTQqB,AsBjEjB,AEJA,Af6DO,CTQX,AUaY,AO1FZ,Aa6Bc,ARjBT,CtBgEe,AUcP,AMTI,AExDF,AK/BX,ACcW,Af6DF,CTSb,CiB9Ee,CP0FP,AoB7DU,ArBwCF,CCqBC,AQjEE,AT4CF,COYL,ACjFZ,CDiFuB,CPZvB,ECqBsB,ADrBA,EOYV,APZY,ECqBP,CAAU,AMTI,APZH,CCqBX,AMTT,AMrER,CQiBc,ADZtB,CbgE0C,AcpDX,AZJR,AIbO,AGK9B,AhBoDQ,CCqB+B,AQjEP,GRiEhB,AY9ER,CNqEuC,AMrEb,CZ8EU,CoB7DN,AZJA,CYIC,AZJA,EFwDG,AMrElC,CZ8EyC,AMTI,AMrEnB,EAA1B,EZ8EoC,AY9EN,CZ8EgB,AMTZ,AcpDX,AZJC,CRiEY,AoB7DI,AZJA,CYI1B,AZJC,CFwDsC,CNSH,AMThB,AcpDS,AZJA,EAA5B,CRiEP,AoB7DM,CpB6Dd,AQjE+C,CYIC,ARjBhD,CJae,CYID,CZJqC,CYIC,EZJrC,CYID,AZJd,EYIyD;A1BbrD,AM2EJ,ACjEA,AKwDK,ACjFL,ArBoEA,AkCxC2D,AZH3D,AhBsCA,AqBrEC,ACcO,ACrDhB,AVyHQ,AczHR,ApBkHQ,AuBSR,CP3HA,AIAA,CJAwC,AIAD,EZ6C/B,Af+DA,AOMA,CclFA,AS2FH,CFlD8D,C5BmCxD,AOMA,CCqBG,ACjEA,AOAA,AhBsCF,AOMA,CCqBG,AdtBF,AmBQA,AiBEJ,C5B/DO,AafF,CbeG,AafF,Aa4ByD,AEkDxE,CtBYkB,AR3BV,CNKS,AkCxCyD,ANpBrD,AToEJ,ANPT,CbDU,AsB3CE,AHmDF,ANPC,CLtDE,A4B+DN,C5B/DH,AKsDS,CCqBE,AO1Ff,ArBoEa,AsB3CE,AMjBE,AToEJ,CX7DG,ARqDhB,A4B5DkB,AToElB,CNPgB,CE5CE,AMzBF,ArBoEA,AmBQA,ANPC,CCqBP,AdtBO,AsB3CE,AMjBE,AToEJ,CLcG,AclFZ,ACrDhB,AIAA,CnBuIQ,ACjEqB,AMzBrB,AQ7CR,AIAA,ApBkHQ,CQxEiC,ArBuEb,A4B5DI,CPNxB,AOMyB,AToEJ,ANPC,EE5CG,AF4CD,Ce7DI,C5B4DH,AoCUjC,CjBFkC,ANPE,CuBSL,EvBTvB,CS5Ce,CAAS,AMjBhB,Af6DyB,Ee7DI,AToErC,ANPmC,Ce7DG,CToEH,CSpE3B,AToE4B,ANPE,CS5CR,AT4CS,CS5CR,AMjBW,AToE1C,EJnDqB,AImDmB,ANPxC,CE5CkC,Af2Cd,CAAsB,AaCE,EE5CvB,AF4CyB,EE5CP,AOAf,CAAgB,AT4CU,CbDlD,AsB3Ce,CPAM,Cf2C6B,AsB3CP,AT4C3C,CE5C4C,Af2CO,CsB3CpC,AT4CwC,CbDvD,CsB3C+C,AT4CU,CbDF,Ce3ClC,AOAN,CT4C6C,CE5CT,AOAA,EPA9B,AF4CrB,CE5CA,AOAe,CAAf;AlBqDA,AI9DQ,AM0ER,AChEA,ACoDJ,AIIK,ApBbG,AkCzCqD,AZFzD,ACMA,AjBgCH,AoBpDG,AEHY,AToER,ANPJ,AuBSJ,EpBDA,AoBCA,C9BxBA,COeI,COMA,AchDc,ARhBd,CQgBA,AfiDI,CHCR,AUlEI,Ab0DG,CCoBoB,AChEjB,ACoDV,AMpDU,ACMA,AVsCF,CTQC,AUYmB,CY9ExB,AEHY,CRyEL,ApBbE,CQrDK,AM0Ea,CVZlB,CAAC,AkBpDE,AT4CZ,Ca1DI,AEHa,Af6DN,CE5CG,AWdT,AEHa,AToEJ,CfCD,AUYmB,AEZpC,AMpDmB,AHmDA,ANPF,CTQb,AYAJ,AGDkB,AiBEF,CrBrDK,AImDb,AiBES,ChCDG,AI9DM,AKsDN,CTQC,AUYU,AQhER,ACMA,AVsCF,CCoBoB,AKbjB,CX7DM,AM0E1B,AChEqB,AImDA,AiBEzB,ChCDwB,AI9DO,AegBL,AVsCtB,AuBSkB,EpBDtB,AhBTQ,A0BzDJ,AEHY,Af6DU,CbDG,A4B5DI,CpBOE,AegBL,AGpBV,Ab0DQ,CTQC,AI9DA,AQ8D7B,AGD+B,ESpEf,Af6De,CLtDS,ARqDN,A0BzD9B,AEHkC,AToEH,ANPH,Ca1DR,CJcL,CAAS,AT4CxB,CTQA,AwBrEsC,CToEF,CfCF,AsBlElC,APiEoB,CfCe,AYA9B,AUlEe,CXcH,CXoDjB,AI9DyB,AOUK,AOAA,AId9B,AUmEmC,CdrDJ,AcqDK,ChCDG,AYA3C,AUlE4B,APiEmB,CX7DK,AOU/B,AQMK,AJ6ClB,AiBE+B,CpBDf,AO9Cc,CRNC,AqBqDK,EpCVf,AuBrCH,CRNL,Af2C8B,A4B5Db,C5B4DT,AsB3CD,ACMe,AKvBI,CbiBH,Af2CpC,AsB3CoC,CAAzB,CdV0C,ARqDN,AuBrC7B,AGpBtB,ClBI0D,AcUf,CdVgB,AegBf,AG1EX,CXoEhB,AQM4B,AGlB7C,AELiD,CAAC,CpBOU,AOUb,AajBI,CpBOM,CAAjD,AOUS,AOAgC,AcqDK,C5BhEtC,AOWhB,AOAkD,AMjBE,AQsEG,C5B9D/C,AoBRyC,CLuBL,AKvBV,AQsEoB,CAAnB,CpCV/B,AuBrCkD,AKvBE,AQsE5D,CRtE6D,C5B4DQ,EsB3CtB,AMjBiB,CNiBD,AMjBzB,CNiBS,AMjB/B,CLuBgC,CAAtB,CDNyC,CCMC,CDNjD,CtB2CX,CsB3C+D,EAApD,EAAwD,ACMjD,EAAmD,CDN1D,CAAf,ACMsB,CAAtB;AnB+CI,AUYJ,AChEA,ACoDA,AIII,AC/EJ,ArBkEC,AsB3CD,AKhCA,ACeS,AToER,ANPD,AuBSP,ItBWO,ADpBA,CMLoB,CfahB,AeAJ,CLYG,ADpBA,CCoBC,AChEE,ACoDF,AK3EE,ACuBA,AKhCA,Ad4EF,ETQI,CgBIC,CC/EC,CCuBC,AT4CX,CTQY,AUYZ,AEZU,AWpFE,Ad4ED,CCoBA,AOvFE,AQcN,AIAA,CnByEK,AMRR,AC/EJ,ACuBc,AT4CD,CGQA,AIIE,AOxFA,CZgCC,CDgEH,AEZb,AHRgB,CTQE,AkBpDA,AT4CD,CTQE,AWpDA,CDgEnB,AMRI,CPZJ,CCoBkB,CVZK,AUYvB,AChEuB,AKwDA,APZD,CTQE,CAAD,ASRC,CTQN,AuBpFQ,CvBoFd,AuBpFe,CPwFC,APZD,CAAC,ETQG,AkBpDjB,CAAS,AT4CvB,EAAiC,Cc5ElB,CvBoFqB,AuBpFA,Ad4ED,CTQvB,AuBpFZ,CvBoFI,AgBIA,AOhH6B,CLwDH,AK9B9B,Ad0EsC,CE5CnB,AOAY,AT4CQ,CE5CP,EF4ChC,CE5CmB,CF4CyB,CE5CP,CF4CS,CS5CvB,CPAJ,AOAqB,CAA1B,AT4CmC,CE5CP,AF4CQ,CS5CP,ET4C3C,CS5Cc,CPAK,AF4CoC,CS5CP,CPAC,AF4CQ,CS5C3C,CPAK,CAAnB,AOAoD,AT4CQ,GS5C9C,AT4Cd,ES5CyD;AlBqDrD,AI9DI,AM0ER,AChEA,AKwDC,AC/ED,AawBA,AZF2D,ACM3D,AjB+BH,AsBrDQ,Af6DL,ICoBA,AOvFA,AawBA,AXIA,AVuCA,ETQI,AkBrDuD,CRiExD,AcrFC,AfiED,CCoBC,AChEE,AF4CF,CQnEA,AawBA,AXIA,CnB+CI,AiB3EH,AawBA,AXIA,CDN2D,CdTlD,CM0Ed,AQjEkE,AMhBvD,CxBqEC,AUYF,AChEE,CDgED,CN1EO,COUH,AMvBf,ARmEA,CCoBY,CN1ES,CJ8DH,AiB3EH,AawBf,AXIA,CnB+CmB,AUYnB,AChEmB,AmBCH,AXIA,EffS,AM0ER,CAAjB,AOvFA,CjB2EuB,A8BnDvB,AXIA,CnB+CwB,AUYJ,AoB/DC,AXIA,CnB+CI,AUYJ,GVZO,AUYN,EoB/DtB,CpB+DA,CoB/D6B,C9BmDI,AUYN,CAAC,CN1EP,CAAY,CM0EJ,AS3D7B,CffqB,AOUN,AmBCf,CnBD8B,CXoDP,AI9Dc,AM0ErC,AoB/DqC,C9BmDnB,CAAN,AI9D2B,AM0EL,AChEnB,CDgEf,CChEmC,CPVO,CJ8DI,A8BnD9C,C1BXqB,AOUN,CmBC8B,C1BXC,AOUN,EXoDW,AI9D9B,AOUN,CXoDH,AWpDZ,CXoDI,AI9D8C,A0BWlD,C1BXqB,CAAb,A0BW4C,KAApD,EApEiC,CAsEjC;A9BkDC,AI9DO,AM0ER,AChEA,ACmDA,AIKH,AC9EG,ArBiEA,AsB7CyD,AIZzD,ACjBA,ACcQ,Af8DR,AuBQR,GhBRI,CNmBI,ADnBA,AuBQJ,ChCPwB,AkBhDN,ClBwDd,AkBxDA,CRkEG,ADnBA,CLvDK,AM0EJ,AChEE,AMtBA,AKQA,ACjBA,Ad4EF,CGMC,AhBRA,CoCUH,E5B/DU,CAAC,AM0Eb,AEbS,AhBRA,A4B5DI,AQsER,CtBWK,AEbA,AhBRA,AaEV,CCmBW,AChEE,CWdC,ACjBA,CXkFD,AhBRA,A4B5DI,CdiFL,AChEI,ACmDhB,AhBRA,A4B5DkB,AQsE1B,Cf3EyB,AKQA,ACjBA,CXkFD,AhBRA,CcqBhB,AEbiB,AhBRA,A4B5DI,CbiBD,AMtBA,AOKZ,CpBOA,AM0ES,AY9EI,ACjBA,CnBqBG,AM0EN,AEbE,AhBRA,A4B5DI,CAAC,CPLD,CPsFL,CN1EX,AoBPoB,CpBOC,AQ6DJ,AhBRA,CcqBzB,EAAwB,CN1ES,AM0ER,Aa/FR,CAAQ,CCcjB,CdiFkB,AEb1B,CYpEqC,CZoEH,AYpEI,CdiFtC,AEbmC,AUjElB,CXcD,AWda,AEHrB,CdiFuB,AChED,ACmD9B,AUjE8B,CZ8EE,AcjFU,CZoEH,AKzEnB,CNsBJ,AMtBiB,CPsFA,AdrBb,A2B1EgB,CnBqBP,AOUM,Af2CO,A2B1EL,CnBqBC,AaZlB,AKQgB,CZ8EpC,AY9EqC,CXcrB,AMtBsB,AKQF,ClBIP,AM0ES,AY9ER,CZ8E9B,AChEwC,AMtBpB,AKQoB,ClBIG,ARqD3C,CQrD6B,AOUb,AMtB0B,CNsB1C,Af2CkD,A2B1EzB,CnBqBqB,ARqDK,A2B1EL,CAArB,CnBqBI,ARqD7B,CQrDQ,AaZY,CrBiEmC,A0BzDzB,ACjBoB,CNSD,ArBkE7C,A0B1D6C,CAAnB,ACjBb,CNSG,CAApB,AMTsD,CDiBD,CCjBpC,EAAyC,EAAzC,CDiB0C,CAAC,ACjBE,CDiBH,CAAN,ACjBpC,CDiB8C,ACjB/D,QDiBqD,CAAmB,CAA3C,IAA8C,CAA1D,EAA6D,EAA7D,EAAiE,MAAjE,EAAyE,IAAzE,CAAjB;AlBKQ,AM0ER,AChEA,ACmDI,AKzEJ,ArBkEC,AsB9CD,ACOA,AjB8BJ,AoBjDI,ACjBA,ACcY,ATmEZ,ANLA,EPVJ,EQ6BI,AChEA,AMtBA,AMTA,Ad4EA,Cb9BJ,CgBoCQ,AhBLJ,CckBG,ADnBA,CLvDK,AM0EJ,AQlEE,ACOA,AGnBA,Ab2DF,CQnEA,AfyDR,CSnCU,AMtBD,AfyDT,AsBpDgB,CbiBL,AIkDA,CX5DK,AQ6DF,AWlFF,Ad4ER,CLvDa,AM0Eb,AEbW,AMrDA,AK7BF,Cb+FC,AS3DE,CT2DZ,AcjFiB,CNeH,AIZA,AEHI,CdiFL,AEbT,AO9CW,CT2DD,AEbE,CAAC,AVhBrB,AoBjDqB,CJYC,AhBqCtB,CQ6BmB,AChEf,AMtBA,AE2BmB,AJ6CnB,CJlDkB,CPVV,AQ6Da,AUjEA,ACjBrB,CnBqBwB,AM0ExB,AOtFmB,AMTC,Eb+FA,AChEpB,AajBY,CdiFZ,AChEuB,AajBM,CpBOrB,AQ6DkB,AVhB9B,AqBlEI,CnBqB6B,AM0EN,Aa/FE,Cb+FD,CChEG,ATmC/B,AsBpDgB,CAAsB,CpBOD,AM0ER,AEbJ,AMrDP,AK7Be,CXkFG,AMrDT,ACOR,CF3Bf,AE2BwB,CT2DxB,AOjGiC,AOgBrB,CPHZ,CPoF8B,CAA9B,AEbI,AUjEa,CAAY,CJYC,ACOA,AjB8BzB,AoBjDyB,CJYC,ACOA,ERLR,CAAS,ATmCpC,CE7CiC,AmBrBJ,CnBqBa,AF6ClB,AoBjDgB,ACjBF,CDiBG,CAAD,CJYb,ACOC,AGnBM,CJYU,ACOA,AGnBA,CJY1B,ACOC,EDP4B,ACOA,Cffd,Ceed,CffiC,AOUzB,AOFT,CdRe,AeekB,AIpCtB,CZ+BqB,AOFE,AIZlB,ClBIqB,AOU5B,AQKR,AGnBkC,ACjBF,CnBsBnC,AcOE,AIZgB,ACjBL,CZ+BwB,AQKE,AIpCnD,CZgCI,AOHgD,CIZC,CHmBtC,CDPD,ACOd,EDPyD,EIZE,CAAC,CAAD,CAAN,CAAU,QAAV,CAAmB,CAA3C,IAA8C,CAA1D,EAA6D,EAA7D,EAAiE,MAAjE,EAAyE,IAAzE,CAAjB;AlBKa,AM0Eb,AChEK,ACmDJ,AIIT,ActDQ,AZJ2D,ACQ3D,AjB8BA,AsBpDS,ATmEZ,ANJG,AuBOR,GjBlBI,CL6BI,AoB/DA,EnBDK,AOHsD,CRmExD,AChEG,CDgEF,AS3DE,CRLE,AKuDhB,ActDY,ArB6CC,AuBOJ,C5B/DY,A0BWR,C1BXS,AcOkD,AhBsCzD,CAAC,CE7CQ,AM0EhB,AQnEkE,CRmExD,AS3DE,CT2DZ,CR7BY,CE7CQ,AM0EP,AS3DE,AjB8BF,AOWb,CLxDqB,AM0ErB,AMTR,AdpBoB,AOWE,CPXN,A8BkBhB,CtBWwB,CAAC,AChEG,AQKD,AVyCnB,CE9CqB,AqBqDV,C9BlBQ,AOzB8B,CCsD/B,ADhBlB,EL1DgB,A0BWhB,C1BX8B,AM0E9B,AoB/DsB,A5BkCC,CE7CP,AF6CQ,CQ6BD,AR7BA,CQ6BvB,AChEQ,ATmCD,CE7C2B,AOUJ,AmBC9B,A5BkCA,CE7CY,AM0Ec,AChEtB,AmBCuB,CpB+D3B,CS3De,CAAS,IWJxB,EAAoC,AXIN,CAAC,MWJ/B,EAA6C,AXIrB,CAAgB,CAAzB,EWJf,AXI2C,EWJQ,AXIpC,EAAgC,EWJ/C,AXIe,EWJ0C,AXIN,GAApC,CWJf,AXIA;AnBgDA,AI/DqC,AM2ErC,ACjEiC,AK9EzC,AC0DQ,ACiByD,ACSzD,AjB8BH,AoBlDG,ACjBA,ACeK,AQsET,ChBpIJ,EAAA,AdgHI,CQ+BI,AY/EA,ACjBA,CL4Bc,CPGmB,AOHjC,CRoEG,ACjE+B,CXqD5B,AUYF,AOrFE,AE0BA,CRN8B,AWdhC,ACjBA,CnBqBiC,AkBJhC,ACjBA,CnBqBiC,EAAE,CJ+D5B,AmB/CA,CRN8B,CAAC,CXqD5B,AI/D6B,AM2E5C,AS3De,CfhB8B,EkBJ7C,ACjBA,CvBoFmB,AmB/CA,AGpBH,ACjBA,ENWK,CjByEC,AWrDc,CAAgB,AWdpD,ACjBA,CnBqBwC,AaVhB,AKMH,ACjBA,CnBqBiC,CJ+DvC,AI/DyB,GAAkB,AaV1D,CjByE8B,EmB/Cf,AGpBf,ACjBA,CJqCwB,CnB+CU,AsBnEH,CtBmEI,IAAE,AmB/CP,CAAC,EGpB/B,EtBmE0C,AsBnED,IHoBjB,AGpBqB,CHoBL,CAAzB,CnB+CmB,CAAJ,AmB/Ca,GnB+CU,CAAvB,EmB/CmB,CnB+CQ,AmB/CP,CnB+CnC,CAAf,GsBnEyC,CAAY,EHoBV,CAAgB,CAAhB,CGpBe,CAAC,CHoBI,EAAhD,EAAoD,EAApD,CGpBsC,CHoBkB,AGpBH,CAA3B,EHoB1B,AGpBwD,CHoBvE,EGpByC,EAAmC,UAAnC,EAA+C,IAA/C,EAAqD,EAArD,CAAzC,EA3DiC,CA6DjC;AtBkEA,AIhEY,AM4EZ,AClEI,ACoDJ,AhBLA,AuBxCA,AKtBC,ATmEL,ANHI,AuBMJ,EjBHA,ELcI,ADjBA,CElDiD,CAA1B,CDmEpB,ACnEH,AFkDG,AuBMF,ChCDG,AUYA,AS3DE,AV0CF,CL5D+C,AR0D9C,EQxDO,AQ6DL,AoBGF,CtBWL,AKdJ,AiBGU,CbhDK,AJ6Cf,EiBGa,CbhDK,AagDlB,CpBHI,AHHA,CTKc,AgCCF,CAAC,CpCRb,AuBxCkB,AV0CF,CTKC,CeFrB,AiBGoB,CpCRG,AmBKvB,GfE0B,ASLA,CTKC,AJPA,CAAC,CaEC,EbFN,CIOS,CJP5B,AuBxCc,CAAS,CJ6C3B,GAAA,ANH0B,AuBMU,ChCDT,AgCCU,EbhDH,AV0CO,CTKC,AmB/CP,CnB+CT,CAAtB,CgCCJ,EvBNI,AuBMyC,CAAC,EbhDnB,AJ6C3B,AiBGA,CbhD4C,CAA1B,AagDgC,EbhDH,GAA7B,EAAkC,EAAlC,EAAsC,GAAtC,CAAd;AfhBa,AM4Eb,ACjEA,ACmDH,AKxEG,ArBmEH,AkC9CA,AZJG,ACUA,AjB4BH,AqBjEG,ARkFA,ANHA,AuBMA,GpBTJ,AhBjCA,CcqDI,ACjEA,AMrBA,ACiBA,AToDA,GCiBG,ADjBA,CCiBC,AS3DE,AIrCA,Ad+EF,AuBME,Cd1DF,CdPS,AOWP,AOJD,CdPS,AOWP,EPXS,AeiBL,AIrCA,CbgGX,CMVO,AC5EI,CAAC,AE2BE,AIrCA,CnBoBM,AM0D6B,ADCjD,CL3DqB,AM8ErB,CsBbiB,Cd1DjB,ACUkB,AIrCA,CZ+BlB,AOJgB,CPIE,AqBsDE,Cf3EpB,ECiBA,CdPgB,AOWhB,AMrBsB,ACiBD,CdPS,AOWP,CPXP,GAAkB,AOWP,COJ3B,CdPY,AeiBE,CDVe,ACUN,AIrCT,CAAU,GNUF,Ae2Ec,CAAC,Cd1DrC,Ac0DoC,CbhDN,AIrChB,ASqFd,Cd1DqC,ACUN,CIrCC,CZ+BT,CAAS,CY/BlB,CAAd,CL2BA,EAA6C,ACUtB,CAAiB,CAA1B,CRNS,CQMoB,CRND,AOJ1C,CPIuB,CAAvB,AOJoD,ACUtC,EAAkC,EAAlC,CDVd,CCUoD,CD9EnB,CAsEjC,MCQc,CAAd;AnB+CA,AIhEsC,AM+EtC,ACnEA,AMrBI,AfuDZ,AoBhDQ,ACjBA,ACgBA,ATkEA,ANHA,IEhDA,AY/BA,Ad+EA,EQrEI,CRqED,Ca9DG,Ab8DF,CTIC,AElBb,AqBjEa,ACgBA,ATkEA,CX/DiC,AOYhC,AY/BA,CnBmBiC,AOYhC,EXoDE,AIhEgC,AkBF9B,AEDF,CxBmEC,AwBnEA,ATkEV,ANHA,CMGW,ANHA,CPdnB,AoBhDsB,CtBkED,AIhEgC,AoBHhC,Af+DA,CTIb,AIhE8C,AoBH9C,CTkEA,CfCgB,AsBlEE,ACjBlB,ACgBgB,Af+DA,CTIC,AWpDjB,AMrBmB,AMVF,ACgBA,CbeC,AMrBE,AFwEF,CNHlB,Ce/DoB,CxBmEC,AuBnFrB,Ad+EqB,CL5DoB,AOYzC,AY/BsB,Ad+EtB,CL5DuD,AOYhC,AImDA,CX/DkB,AaTrC,AOMkB,ExBmEI,AuBnFA,CnBmBiC,AOYhC,AMtBL,CACQ,CKOhB,CAAS,CEDvB,ATkEkB,CAAc,CfChC,AsBlEc,AEDiB,CAAC,CxBmEG,AsBlEP,CtBkEQ,AwBnEpC,CTkEqC,CfCrC,AsBlEc,AEDsB,CDhBd,CvBmFkB,AWpDjB,AWdU,ACjBF,CZ+BC,CWdlB,EAAuB,GPiEL,CAAgB,GJnDzB,AY/BD,ARkFU,CAAoB,CJnDR,AY/BA,CZ+BrB,AY/BD,CZ+BtB,AY/BA,CDiBqC,MPiEe,IAAA,EAAI;AfEpD,AIjEQ,AOaZ,ACmDJ,AhBLA,AkC/CJ,AXMQ,AjBUR,AoB7BY,ACjBJ,ACgBI,ATiEwD,ANF5D,AuBKA,C9BtCR,CUoCI,AhBLA,AM/BkB,ESfd,AQKA,AIpCA,Ad+EA,ETII,AErCZ,CUoCI,AVpCJ,AOiCW,CGGP,AHHQ,AuBKA,C5BpE+C,A0Bc3D,AXMY,AIpCA,CJoCC,AGnBK,ACjBL,ACgBK,CpBGE,AOYL,AWdI,CXcH,Cf8CZ,AmBIiE,CnBJjE,A0B5DkB,Ab8Dd,Cc/EA,Ad+EW,CTIG,AwBnEE,CxBmED,AYDnB,AGDqE,ANFpD,CTIC,AYDlB,AWlFiB,CvBmFT,AwBnEe,AQoEnB,CbhDA,AGnBoB,APgEgD,ANFpD,CU3CA,AGnBK,AUmEJ,ChCDG,AWpDpB,CXoDqB,AWpDF,Af8CvB,A2B7EI,ACgBuB,Af+DvB,CbFJ,AkC/CJ,AP/DyC,ARkHuC,CI7CxE,AInCA,ARgFyE,ANFpD,CU3CA,CRLrB,AFgDuB,CEhDC,AIkD4C,CfEzC,AsBlEE,CViEjC,AUjEkC,APgEmC,ANFvC,CAAC,CTII,AWpDH,AQK5B,CP8CJ,AGDqF,CI7CpD,AV2C7B,GTIoC,CAAhB,AsBlEC,APgEuC,CnBJhE,CuBzCI,AGnBoB,CAAhB,AEDe,CxBmEuB,AJN9C,AuBzCyC,AKpBJ,CxBmE7B,EWpDoB,ACmD5B,CDnDqC,EQKjC,AKpBuC,ELoBM,ERLrB,Af8CZ,C4B7D8B,CbeD,AaftB,CbeK,AQKxB,CRLA,Aaf6C,CLoBO,EKpBjC,E5B6DvB,A4B7DsD,CLoBlD,CvB0CA,A4B9DmB,CL7Dc,AK6D7B,CLsBJ,UvBuCJ,EAEI,UAFJ,EAE6B;AIKxB,AIjEY,AM+Eb,AOxFI,ArBsEJ,AkC5HR,AZwEQ,AIVI,AChBJ,AR+EuF,ANDvF,AuBKI,CFjIZ,CAA8B,EZwEtB,AToDA,CMCgC,CEvE5B,AFuEc,AiBId,CjBJJ,ANDG,CCkBC,AdlBA,AaAA,CSpDA,CdTS,AcSR,AIVK,ClBCI,AkBDH,ElBCK,AM+EP,AdlBA,C0B9DK,Ab8Dd,CAAW,CbAC,CQ7DQ,AaTL,ARsEF,AuBKE,C5BlEM,AM+EjB,AOxFY,Ae2EA,CtBaD,CYhFK,Ab8DJ,CbAC,A0B9DI,CZgFrB,AoB9IR,CAAA,ArB4HQ,CCkBoB,AsBbhB,CvBLiB,AuBKE,C5BlEP,AcShB,CdT8B,AcSR,AToDC,CL7DP,CaTZ,AKQyB,CLRD,AKQE,Ab8DJ,CL7DQ,AR6DtB,AsBpDZ,AToD2B,AuBKvB,CpCLwB,AsBpDD,CdTf,CK6DZ,Ia9DqB,CLRjB,ArBsEQ,AsBpDZ,CDlBsC,ArBsEF,A0B9DhB,CJUgB,AIVhC,MLRA,CAA0C,ACkB9C,CtBoDY,CAAZ,AsBpD6C,CtBmDpB,CACuB,CqBtE5C,CAAgD,ACkBpD,EAAmD,IAAnD,EAAyD,GDlBrD,CCkBJ,CDlBiE,CCrDhC,CAyEjC,ODpBI;AbSkC,AMgFlC,AClEJ,AWdI,ACfJ,ACaI,ATiEP,ANDG,AuBKC,GjBPL,CJ9CI,AFgDA,ECkBI,CDlBD,CAAC,CCkBG,AClEH,CPdkC,AMgF9B,AClEH,AWdK,AEFF,CpBE+B,AoBF9B,CFEG,Ab8DZ,CL9DyC,CoBF7B,CFEG,IZgFX,CClEJ,CPdiD,AOcjC,AahBZ,CpBE8C,AMgF9B,AYhFE,CAAC,AEFF,EbgBrB,CAAqB,EDkEK,AYhFX,CAAc,ClBAY,CAAkB,AMgF9B,CNhFY,AOczC,CWde,CXcc,AWdK,ClBA6B,AkBAhD,CAAX,IZgFsB,CClE1B,EDkEyC,AClEH,SDkElC,GClEJ,EAAoD,QAApD,EAA8D,UAA9D;AXoDA,AIlEY,AMiFR,AEjBJ,AKxEI,ArBsEJ,AuB1CA,AGnBI,AEFI,AfgER,AuBKH,IbhDG,AV2CA,ECkBI,CDlBD,CTGC,AYFA,AhBFA,A4B/DI,AfgEJ,CLlE+C,AMoF5C,AEjBH,AhBFC,AuB1CD,CT6DI,AOzFA,AE4BH,AGnBK,ClBAE,AQ+DR,EZEK,AsBjEI,CV+DT,AYjEU,CMcP,ANdQ,CFEC,Cb8DhB,Ca9DkB,CV+DT,EZEL,AUeA,AOzFe,ArBsEF,A0B7DK,CtBiEJ,AiB1EE,ArBsEF,A0B7DK,CtBiEnB,CUekB,CYhFE,AEFhB,CLqBR,AGnBkB,AEFQ,CPPlB,ArBsES,AuB1CK,CnB8CE,AiB1EE,ArBsE1B,CgBEI,AU/D0B,CZgFF,AEjBR,AhBFM,A0B7DK,AEFvB,CxBmEJ,AYFA,AO5CJ,AKrB+B,CZiE3B,AKxEI,AE4BmB,CT6DI,AOzFA,AKSC,CLTxB,AKSJ,CtBiE2B,AiB1E3B,AKKiC,AEEF,CFG/B,CLV+B,CLwEb,CO5CtB,CnB8CoC,CmB9CA,CT6DR,AEjBxB,GFiBuC,CEjBrB,CZES,CYFT,AO5CtB,AKrB+B,CAAS,CLqBK,EnB8CG,CAAhD,AYFsB,CFiBlB,AS7DJ,CnB8CmD,AwBnEL,CLqBK,AKrBJ,CAAD,CZiExB,AYjES,CZiE3B,CO5CJ,AKrBmD,CAApB,CxBmE2B,AYFpC,AO5CmC,AKrBjD,CxBmEmD,GAAR,AmB9CnD,CnB8C+D,AYFzC,CAAlB,AO5C2D,GP4CzC,EAAA,CAAE,EO5CxB,CP4CsB,EAAtB,EZEmD,AYFpB,EZEgD,UAA5B,EAAwC,YAAxC,EAAsD,IAAtD;AACnD,AIlEa,AMiFZ,ACnED,ACkDI,AKxEI,ArBsEJ,AsBnDJ,AhBmCR,AqB7DQ,ACcK,ATgEb,ANAQ,IEjDA,ATgCR,AOiBQ,CCeA,CdhBI,C4BjEA,AfkED,CQvEK,ACmBF,AK1BA,Ad8EF,CEjDA,AIiDZ,CX/DqB,AOcR,ATgCb,CFoBe,AIlEO,AMiFP,AEjBE,ERhEO,AoBDL,CfgEX,CCkBW,ADlBA,CGCP,CAAW,AW/EA,Ad8EF,CQvEK,ArBsEF,CqBtEG,ArBsEF,AmBCzB,CLkBwB,AQtEE,AK1BA,Ad8EF,CTGhB,AIlEwB,AK+DP,CL/DQ,AQgErB,CMrDiB,CtBmDL,A2B7EM,Ad8EtB,CCkBW,AEjBY,AhBFnB,CcmBkB,ACnEtB,ACkDwB,AHDF,CEjDA,AOHG,AToDzB,CbD0B,EQ9DV,CAAkB,AOclC,ACkD6B,AKxEV,CbQP,AOce,AfgDvB,CcmBG,AdpBmB,CACM,CcmBD,CEjBP,CAAW,EDlDnC,EOHqB,CNqDG,AMrDO,AK1Bb,CAAc,EX+EW,AMrDtB,CNqDE,CMrDa,EK1BE,CX+EU,AMrD3B,EAAoB,AK1BA,CL0BpB,AK1BH,EX+EmC,AMrDT,AK1BA,GL0BvB,AK1BH,CL0BlB,CK1BiD,EX+E7C,GW/EiD,CAAC,OAApC,EAA6C,EAA7C,EAAiD,EAAjD,CAAlB;AvBkFH,AInEwC,AMkFjC,AEjBH,AKxEW,ArBsER,AsBnDJ,AhBkCR,AoB5CY,AChBJ,ACcQ,ATzEhB,ANyIQ,AuBIJ,CjB7IJ,CiB6II,ChCjBA,Ae5HJ,CQ2DQ,Ad8EA,CGDA,CFmBI,CDlBD,CSpDG,AMZE,AfgEJ,CCkBG,CNlF8B,AMkF7B,AOzFI,AKSF,ClBF4B,AQiE/B,ERjEiC,AmBd/B,CAAC,ACcI,AfgEd,CehEe,AfgEJ,EAAE,Ca9DK,CZgFd,AQtEa,CToDD,CLhEgC,AkBE1B,Ab8DL,CLhEgC,AMkF7B,AQtEA,AIVG,CUkEN,CTlFjB,Ad8EA,AuBIkB,Cf3ES,AKSD,AChBL,ACcb,CPPoB,ACmBJ,AMZE,AfgEJ,ECkBI,AYhFG,Ab8DL,Cc9ExB,CnBcwC,AkBElB,AChBI,ACclB,CpBAkD,AMkF7B,AclFE,AfgEJ,CLhEa,AaP5B,ARuEgB,Ea9DO,AChBL,ASkFb,C5BpE6C,AoBA3B,AfgEnC,AuBIJ,CVlEyB,GAAoB,CZgFf,AYhFtB,GZgFqC,AQtErB,CAAa,GK1BP,CAAS,ACcJ,CAAS,GdkFpC,GclF0C,CNYD,AMZE,CNYD,EK1BpB,EAAsB,CAAtB,CCc4B,CDdH,CL0BlB,AKzB7B,CLyBmD,AMZA,CNYtB,AMZa,CAAf,ENY4B,AMZA,CAAC,GAAG,OAAJ,CNYY,CAAC,CMZC,CAA1C,CAAvB,SNYmD,CAA0B,CAA1B,EAA6B,CAApE,EAAuE,GAAvE,EAA4E,KAA5E,EAAmF,EAAnF,CAApB;AdZY,AMmFR,ACnEJ,ACkDI,AKxEK,ArBsEL,AsBnDJ,ACOH,AjB0BL,AoB3CY,AChBC,ACcA,AfgEL,AuBIP,IvBJO,ECkBI,AahGC,CAAC,Ad8EH,CEjDG,AOHA,AToDF,CLrE+C,AMuF5C,AO3FW,AMLV,CnBSqB,AMuFrB,ARrChB,CUoBiB,AKxEE,CbOA,CkBEA,Cb8DX,CEjDa,AMxBK,ARyEP,CLrEkB,AQsEzB,AK1EI,AfsDhB,CElDgB,AQsEO,AHDF,CEjDG,AT8BxB,AqB3DyB,CL0BA,AK1BC,Cd8EF,CCkBZ,ADlBa,CEjDG,ACkDhB,AMrDgB,ERsEE,ADlBtB,CGCuB,CAAC,AMrDA,AIVF,Ab8DA,CGClB,AW/EI,CAAmB,Ad8EH,Cc9EpB,CbgGwB,CDlBD,CAAC,CCkBG,CYhFpB,Cb8DX,Ga9DoC,GAAG,CZgFX,CQtER,CPGJ,AOHiB,CRsEU,ACnET,CWbU,IXa5B,EAAwB,EDmEpC,AYhFgC,CXapB,COH6B,CPGA,AOHC,AIVS,EAAnB,CXapB,EAAkC,AWbU,CXcxD,CAAC,COJ4B,AIVtB,CJU4C,AIVnD,CJU6B,GAA0B,KPIvD,EAAc,KOJqD,CAAC,MPIpE,CAD8C,EAE9C,CAAC,EOLsD,CAA0B,CAA1B,EAA6B,CPKpF,AOLgB,EPKN,AOL6E,GAAvE,EAA4E,GPK5F,CAF8C,COH9B,CPMhB,CAAC,AONkG,EAAnF,CAApB,MPMI,EAAY,UAAZ,CAH8C,CAAlC,EAIb,CAAC,MAAD,CAJa,EAIH,UAAS,IAAT,EAAwB;AXiDzC,AIlEY,AMiFP,AC/DG,AC8CH,AmB9BJ,Ad1CQ,ACmBL,AhBgCa,AoB1CZ,ACjB6B,Ad+E9B,ETGJ,AEvBiB,EOoBb,CCeO,AYrFO,CAAd,ACT8B,CvBkFlC,AuBlFmC,Ad+E5B,CTGP,AkBvDU,AToDF,Cc/E6B,EbiG1B,ARtCM,CE3CC,AF2CD,AOoBb,CE7CW,CAAC,CI4CL,CX9DW,CJkEtB,CAAA,AWhDoB,ATyBH,AqB3D6B,CnBgBrB,AOkBJ,AOPA,AK3B0B,CZkC3B,ATyBH,CSzBD,COPQ,CdXK,COkBH,EOPE,AhBgCX,CAAA,AqB3DoB,CZkCP,AYlC0B,CZkCzB,AYlCM,CvBkFrC,AWhD8B,CAAd,CYlC4C,CvBkF5D,CWhDoC,GPlBX,CAAY,AOkBG,CAAC,CPlBF,AOkBC,CAAzB,CAAP,CPlBkC,AcWlB,CAAa,ClBuDrC,AIlEyB,EAAqB,AcWtB,EdXwB,AcWN,GdXS,AcW3B,EdXC,AcWsB,EdXQ,EAA9B,CcWD,CdXmC,CAAlC,AcW6B,CdX1C,CcWY,CAApB;AlBwDA,AIlEQ,AMiFJ,AC/DH,AC8CJ,AhBHO,AuB5CZ,AGhBQ,AClBI,ACeA,AfkEJ,AuBER,GpBRI,CHMI,CEpDgB,AY9BmC,CbmG/C,ACrEJ,AadI,CDdA,AdgFD,CLhEK,AkBCF,Ab+DF,CCiBG,AShEf,CTgEgB,AdpBA,AoCKN,E5BlEU,CAAC,CKgEb,AuBIR,CvBJmB,CelEG,AfkEF,CelEG,EdmFX,CdpBc,A0B5DA,CEHd,AfkEa,CCiBG,AcnFA,CpBEZ,AR6Da,A0B5DA,ClBDG,CR6DpB,E0B5DqB,ClBDjB,AMiFkB,AcnFtB,CpBEyB,AKgE7B,ECiB6B,ENjFI,EeiBzC,KTgEkC,AYhFL,CAAS,EZgFW,CYhFpB,ElBDQ,AkBCM,ClBDG,EkBCjB,ClBDQ,CkBCW,ClBDG,AMiFvC,CNjFyB,AkBCR,ElBDyB,AkBCF,ElBDf,CAArB,ekBCa,CAArB;AtBkEA,AIlEQ,AMiFJ,AqB/CZ,Ad3CY,ACmBJ,ACjFR,AjBiHI,AqB3DS,ACeJ,AfkED,CUvIR,CAAyC,EDiFjC,ATsDA,ECiBI,AalGC,CAAC,AdiFH,CTEC,AIlEI,AKgEJ,CCiBG,AqB/Cf,AbxBY,AK3BI,CbkGA,AQvEH,ChBgCT,CE1CgB,AKgEZ,CLhEa,AaTF,CjB2ED,CuBnFI,AdiFH,ETEE,AiB3ET,AfmDR,CAAY,AqB3DS,CvBmFjB,AExBJ,AOsBmB,CStDf,AK3BI,AdiFY,CCiBZ,AQvEY,AhBgCG,CiBjH3B,AjBiHI,CE1CY,AevEhB,CfuEgC,AMiFF,ARvCQ,CgBhC9B,ATsDW,CStDU,ATsDC,ELhEd,AF0CZ,CE1CiC,A2BkCrC,CrB+CoC,ARvCgB,COsBjB,ELhEM,AMiFF,EDjBT,CAAU,CPtBpC,AOsB0B,CStDtB,ChBgC2D,CgBhCxB,ATsDC,ECiBR,CDjBjB,ECiBgC,CNjFd,CAAS,AKgEK,IStD3C,EAAgD,CRuE5C,CNjFyB,EAAmB,CAAnB,EAAsB,CACvC,AK+DZ,GStDA,EAA6D,WAA7D;AdTa,AMiFZ,AChED,AC8CR,AmBrIA,Ad6DS,ArBqEG,AMnBR,AoBzCI,AClBqB,AdkFrB,AuBGR,CDzIA,CAAmC,EpBuF3B,AWjBA,AbgEA,CQlFA,CMAqB,CAAC,AdkFnB,CPvBP,AOuBQ,CE/CA,AC8CZ,AU/DY,AClBoB,ASqFvB,C5BnEY,AOiBR,AWjBA,ClBAS,AR4DL,EQ5DO,AFyCpB,CUsBJ,ChBHqB,CAAC,AMlBd,CE1CoB,AKgEpB,CLhEqB,AmBlBY,C3B8EhB,A2B9EiB,CZmClC,Af2CI,A0B5DJ,AbgEgB,CE/CA,AWjBA,CStExB,AnCkI4B,AMlBpB,C6BhHR,AnCkI6B,AMlBrB,ESzBA,AWjBA,ClBAgB,AOiBK,Af2CG,A0B5DH,AbgEC,CLhEQ,AF0C9B,AqB5DwB,CnBkBR,AF0ChB,AqB5D2C,CAAnB,AdkFC,AuBGjC,CAA8B,C5BnEY,AkBAlC,ClBAY,AF0CZ,AqB5D+C,CZmC/C,AWjB4B,CpB0CtB,CNkB2B,AMlBjC,A8ByBR,CpCP0C,CMlBzB,A8ByB2C,C9BzBpD,AOsBsB,EPtBV,COsByB,GPtBrC,CoB1CA,C1B4DwB,AMlBN,CNkB2B,AaI7C,MbJI,AMlBJ,ENkBqD,AMlB1B,CNkB2B,AMlBtD,ENkBI,EAAsD,CMlB7B,IADjC;AFyBI,AIlEqC,AQ7E7C,AhB0IgB,AsBlDR,AK7BI,ACkBJ,AfiEA,AuBGJ,CpBjJJ,EAAA,CH8IQ,CcrFmD,CSwFnD,CTrFI,AdkFD,CStDG,AMXA,AfiEF,CTCC,CIlEgC,CAAC,A4BoEjC,CpCPS,CIKL,AIlE+B,CJkE9B,CmBjDH,CvB4CW,A4B7DJ,AQoEJ,ChCFG,AIlE+B,AKiE5C,CTCA,AIlE6C,CR6DxB,A4B7DJ,CxBkED,AkBvDE,ATsDF,AuBGpB,ChCFqB,CgCED,CdzDK,AMXA,ExBkEA,CIlEmB,CAAc,AcW7B,CdXe,AR6DV,AaI9B,CTCuB,AJLQ,EQ7D2B,GJkE9B,KJLP,A4B7DJ,C5B6DyB,A4B7Db,CxBkE7B,AJLqB,CAAb,CIK6B,AwBlEpB,CxBkEqB,CkBvDjB,AMXa,CxBkElC,AkBvDmC,CMXlB,CxBkEyB,CwBlEJ,MAArB,EAA6B,CNWC,CAAC,GMX/B,EAAoC,EAApC,CNWkB,AMXnC,CNWyD,CAApC,EAAuC,GAAvC,EAA4C,EAA5C,CAArB;AlBwDI,AInEQ,AMkFZ,AChEA,AMxBA,ACkBA,AhB+BA,AqB5DK,ACkBL,AfiEA,AuBGJ,ItBaI,AChEA,ATyBA,AOuBA,EcnFK,ASsFH,CtBaC,AanGG,AdmFH,CCgBC,AOxFE,ACkBA,AMXA,AfiEF,CLnE+C,AOmB/C,ATyBA,AqB5DI,CvBoFE,AWjDL,ATyBA,A8B0BC,C5BpEM,E4BoEH,ChCFK,AiBzEF,CcyCL,ARpDO,CrB4Dd,AsB1Cc,CxBkEG,AUejB,AOxFe,CMXE,CrB4DH,AsB1CG,CdiFD,AQtEE,AK7Bd,AdmFJ,CCgBA,CVfsB,AExBtB,CgB/BqB,AMXA,AfiEF,GEhDnB,CAAsB,AONG,CDlBC,CAAC,ENwB3B,AFgDA,CTCiB,AWjDU,CXiDM,CAAhB,CAAb,EiBzEW,CAAqB,CNwBpC,AMxBA,AOOiB,CAAY,GAAZ,ENWI,AMXa,CNWC,CMXlB,EAAqB,MAArB,EAA6B,CNWC,CAAC,GMX/B,EAAoC,EAApC,CNWkB,AMXnC,CNWyD,CAAtB,GAA0B,YAAY,CAAC,WcyD9E,EdzDiE,CAA2B,CAA3B,EAA8B,CAAtE,EAAyE,GAAzE,EAA8E,EAA9E,CAArB;AlBwDI,AInES,AMkFb,AOxFA,ArBmEQ,AsBjDR,AIZH,AClBwB,ACmBrB,AfiEA,AuBGJ,ItBaI,AQtEA,ATsDA,ETCI,AuBrFiB,ASuFnB,CtBaC,AapGmB,AdoFnB,CCgBC,AOxFE,AOOA,AfiEF,CcpFoB,CnBkBX,CAAC,CJmEJ,AJNE,AoCQJ,ChCFG,AInEK,AaNL,ELsEJ,AoBKI,Cf3EG,ArBmEN,AsBjDI,ATsDZ,CTCI,AInEgB,AMkFpB,AQtEa,ATsDA,CTCG,AInEK,AR6DH,EqBnEA,AMZiB,ASuFnB,CTvFoB,ACmBjB,AQoEF,ChCFG,ASDF,EejEI,CxBkEC,CInEP,CAAc,AcY9B,CdZgB,AcYQ,AMXE,AfiE1B,AuBGW,ChCFgB,AuBrFH,ASuFC,ChCFG,AuBrFiB,AdoFnB,AuBGf,C5BrEuB,AKkElC,CStDA,AcyD4B,ChCFL,AInEX,AcYiB,ATsDA,CQxEf,ARwEd,CTCoB,AiBzEI,ECkBS,ClBuDG,GiBzEtB,EjByEV,AiBzE4B,COOV,CAAY,CPPpB,EAAuB,AOOf,EPPR,ACkBe,AMXU,CNWD,CDlBG,Ae2E9B,CRpEW,AQoE2B,Cf3EnC,CAAd,AOO4C,EQoEjC,CAAf,KdzDiC,EAAuB,AMX9B,CNWO,CAA7B,AMXwD,KAAlC,EAAyC,EAAzC,CAAtB;AxBmEC,AIpEqC,AMmFtC,AOxFA,ArBmEY,AsBjDZ,AhB8BH,AqB7DO,AdsFJ,IQzEA,ACkBA,ATuDA,CczFmD,CAAzB,CAA1B,AdyFG,CCeG,ADfF,CCeG,AOxFF,CbKiC,AaLhC,CbKiC,CMmF7B,CNnF+B,CMmFzC,AdrBkB,CaMlB,CbNoB,AsBjDR,CdbiC,AcahC,CdbiC,CR8DvB,CqBnEvB,CAAiB,ErBmEU,CAAC,CqBnE5B,CbKyC,AaLnB,CbKiC,AcavD,CdbyC,AcajB,EDlBE,CbKiC,Cca3D,CAA6B,EtBiDjB,EsBjDqB,MDlBX,CAAS,MCkBF,CAAS,IDlBhB,EAAsB,CAAtB,CAAtB,ICkB6B,EAAuB,CAAvB,CAA7B;AdbY,AMoFZ,AClEH,AWjBL,ACjBQ,ACkBA,AfmEH,AuBCD,GvB5DA,CC0EI,AapGA,CboGC,AclFD,EAAA,AQoEC,CtBcG,CNtF+C,AkBG3D,CZmFQ,AclFA,CpBDY,A4BqEP,CAAC,CTtFG,CAAC,CCkBN,AQoEK,CRpEJ,AQoET,EAAgB,CAAC,GAAG,ETtFhB,CAAqB,CCkBrB,CFDR,CECwB,AQoEM,CTtFtB,ASsFuB,CTtFG,ECkB1B,CAAoB,CDlBU,CSsFlC,EAAmC,CRpE/B,AQoEgC,CRpEZ,CQoExB,CRpEI,CQoEoC,CRpEhB,IDlBM,CAAS,KAAT,EAAgB,CAAhB,ACkBN,CDlBpB,ACkBoB,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAI,UAAJ,CAAA,EAAmB,MAAnB,CAAA,EAA8B,MAA9B,CAAA,EAAyC,MAAzC,CAApB;AxBmEA,AIpEa,AMoFb,AOzFA,ArBmEY,AsBjDZ,AhB8BJ,AoBtHJ,AC2DQ,ASsFA,CVjJR,CpBsHI,AoBtH6B,EtB+IzB,AUgBA,AOzFA,ACkBA,AK7BA,GboGG,CAAC,ARzCR,A8B2BU,Cf3EF,ACkBA,AhB8BR,AqB3DQ,CnBgBS,AaLR,ACkBA,AK7BA,CvBoFE,AIpEO,CJoEN,AgCEE,C5BtEM,CMoFhB,AdtBgB,CIMhB,AUgBW,AdtBM,AoCQJ,ChCFD,CIpEQ,AMoFpB,AdtBY,CQ9DS,AF2CzB,CQyCmB,AdtBM,AMnBzB,AqB3DI,CboGgB,AOzFhB,ACkBA,CDlBgB,ACkBA,CIxFxB,AC2DyB,CboGA,AY/JzB,AUiJ6B,CAAC,CtBctB,AOzFA,ACkBA,CdbgB,AaLK,ACkBA,CdbS,AF2ClC,CE3CoB,EJoEhB,AEzBJ,CE3CsC,AaLlC,AMXA,CvBoF4B,CIpEhB,I4BsEC,ChCFqB,AkBvDlC,AcyDoC,ChCFD,CkBvDA,AhB8B9B,E8B2BQ,C9B3BjB,A8B2BI,EhCFA,AEzBkC,OgB9BlC;AlBwDA,AIrEsC,AMqFtC,AClER,Af4CwB,AMnBhB,AqB1DA,ACgBA,AfkEH,AuBGG,ItBcA,AcnFA,AQqEA,GtBcG,CAAC,ARzCE,AqB1DA,ASqFF,ChCFC,AWlDb,ATyBe,AsB1CH,AQqEC,C5BvEiC,AoBEjC,CpBFkC,CR+DvB,AMnBN,CE5C+B,AmBd9B,CvBmFX,AUgBA,CVhBW,AUgBA,CanGG,CrB0DC,CQyCf,AsBdA,ChCFA,CUgBgB,AanGE,ACgBlB,CpBFiD,AMqFhC,ARzCP,AsB1CM,AQqEC,ChCFC,AIrEgC,AR+DxB,AMnBN,CNmBO,AMnB3B,CQyCkB,CcnFlB,AQqEA,CtBcA,AClER,AajB6B,CxBmEE,AJNP,CAAgB,EQ/DS,CAAkB,CAAlB,CR+DzB,C2B7EF,ACgBd,CxBmEkB,AIrE6C,AR8D1C,A2B5EG,CvBmFQ,AJNQ,A4B7DT,EDhBjB,EAAe,EvBmFX,CAAlB,AuBnFc,CCgBd,CDhBkC,CCgBO,GDhB3B,EAA0B,GAA1B,EAA+B,GAA/B,ACgBd,CDhBA,CA/CiC,CAgDjC;AvBmFH,AItEe,AMsFZ,AC/JR,AMqEQ,ArBoEa,AsBlDb,AhB+BA,AqBxDA,AdkFR,AuBCQ,CrBjJR,CAAgC,CXsI5B,CUyBI,AO1FA,ACkBA,AhB+BA,GQyCG,ARzCA,CQyCC,ARzCA,A8B2BE,C5B3E6C,AaD/C,ACkBA,ATyDZ,CQ3Ea,ACkBA,CdbO,AMqFZ,AdxBY,CcwBJ,AsBdE,GtBcV,AO1FA,AKMO,AUsEM,EtBcA,AdtBM,AMnBnB,AO0BR,CCeQ,AO1Fa,EP0FG,EAAhB,AC/JR,CAAA,AMqEQ,Ae4EqB,CtBcD,AOzHa,Ae2GX,CtBcD,AOxFrB,CCgBA,CAAsB,ERwEG,CAAC,CQxE1B,CRwEoB,AQxEO,GRwEE,CAA7B,CsBda,CtBcmB,AsBdI,ItBcA,AsBdvB,CtBcwB,AsBdrC,Cd1DA,CRwEgC,CQxES,ERwED,CAAxC,SQxEA;Adba,AMsFb,AOxFA,ArBkEgB,AMnBhB,AqBxDA,ACaA,AfjFR,AuBuJQ,CvBvJR,EAAA,CCqKQ,ARzCA,A8B2BA,CRtEA,EdoFG,ARzCA,AsB3CH,CdoFI,ARzCA,A8B2BA,CAAC,C5BxEQ,AoBEb,CpBFc,EAAE,CMsFhB,ARzCA,CQyCW,ARzCA,AsB3CP,CtB2CQ,AsB3CP,CdoFL,AdtBqB,CoCQrB,CtBce,ARzCA,CQyCC,CNtFQ,A4BwEP,C5BxEQ,AF6CzB,CQyCiB,CRzCG,CQyCpB,ARzCqB,A8B2BrB,G9B3BwB,CAAC,CE7CT,CAAkB,CAAtB,ARgEI,AMnBhB,AsB3CA,C5B8DqC,C4B9Df,G5B8DmB,CAAC,A4B9D1C,CAA0B,KAA1B,CAA0B,EAA1B,E5B8DgB,A4B9Dc,E5B8DyB,Q4B9DvD,I5B8DgB,EAAqD,UAArD,EADG,CAIH;AIGxB,AItE6C,AMuFrC,AdnBgB,AsBrDhB,AhB+BA,A8B2BA,ItBcA,ARzCA,A8B2BA,GtBcG,ARzCA,CQyCC,AQxEE,AhB+BF,CFwBZ,CItE6C,A4ByE/B,C5BzEgC,AMuFtC,AsBdO,CtBcC,AsBdF,C5BzEkC,A4ByExC,ChCHR,AUiBQ,AsBdU,CrBrDH,CDmEK,CAAZ,AQxEe,ERwEA,CQxEG,Cdf8B,AMuFhD,CNvFiD,CMuF9B,CQxEG,AhB+BtB,CAAqB,A8B2BrB,C9B3BsB,A8B2BA,CtBcC,CAAC,CRzCC,CE9Ce,AMuFrB,AsBdnB,C5BzE0D,CAAlB,AF8CxC,CQyC2B,CAA3B,ARzC8B,CE9CgC,AF8C/B,CQyCD,CQxEZ,CAAS,AhB+BO,EQyCF,CRzChC,EAAuC,CQyCH,ARzCpC,CQyCqC,CRzCK,CQyCZ,ARzCa,GQyCH,AQxED,AhB+BO,CQyC9C,AQxEwC,EhB+BxC,MgB/B2B,CAAsB,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,kBAA1C,CAAlB;AlBjGR,AIkFoB,AMwFZ,AOzFA,ArBsEgB,AsBrDhB,AhB+BA,AqBzDA,AdgFP,AuBIO,ChC5JR,CS0JA,CT1JA,CU0KQ,ARzCA,A8B2BA,GtBcG,ARzCA,CQyCC,AOzFE,ACiBA,AhB+BF,AqBzDA,CnBM+C,CAAtB,A4B8EvB,CAAC,C5BzEI,A4ByEL,CAAN,CAAU,E5B9EmB,CAArB,AM4FR,AOzFe,ACiBA,GDjBG,ACiBA,GK1BC,CNSG,ACiBA,AhB+BtB,CAAqB,A8B2BrB,C9B3BsB,AqBzDA,ASoFA,ETpFtB,CrByDyB,CAAC,A8B2B1B,G9B3BA,EAA+B,CAAC,CgB/Bd,CAAS,ChB+BQ,GehDjB,AfgDlB,CehDgC,CfgDQ,CAAC,GAAG,CehDN,AfgDO,CgB/BN,CAAC,CDjBC,AfgDzC,EehDkB,AfgDgC,CAAC,CehDN,EfgDS,CehDpC,ACiBS,AhB+B4B,CgB/BN,CDjBC,ACiBhC,ChB+BlB,CgB/BoD,EDjBE,ACiBpC,EAAsC,CDjBD,CAArC,ACiBA,EDjBwC,ACiBE,EDjB1C,EAA4C,EAA5C,CAAlB,aCiBkB,CAAlB;AdbQ,AMuFR,AO1FA,AfgDA,AqBzDA,ACYH,AQwEA,ItBeG,AO1FA,AfgDA,AqBzDA,GbmGG,AR1CA,CQ0CC,AR1CA,CqBzDA,CAAC,EnBYS,AMuFd,CO1FS,CAAC,CbGO,GAAG,AmBZpB,GAAgB,CnBYQ,EaHxB,AfgDA,AqBzDA,CNSqB,AfgDA,CAAC,GehDtB,AfgDyB,CehDC,AfgD1B,EAA4B,CAAC,CehDC,CbGV,CAAW,AF6CC,CAAC,CE7CA,EF6CjC,CE7CoC,CF6CE,CE7ClB,AF6CmB,EE7CC,CF6CE,CE7CA,AaHhB,CAAS,CfgDnC,CE7C6C,CF6CE,CE7C3B,AF6C4B,EE7CC,CF6CE,CE7C/B,AF6CgC,EE7CC,CAAjC,AaHM,AfgD1B,CE7CQ,CaHwC,CAAtB,EAAyB,CAC/C;AbGI,AMuFR,AO1FK,ArBqEW,AsBrDhB,AhBgCA,AqBzDA,AdiFR,AuBGC,ItBeO,AQ1EA,AhBgCA,AqBzDA,AdiFR,EQxEa,CP0FF,AO1FG,AfgDH,CE7CK,AMuFJ,AR1CA,CehDI,ACgBJ,AKzBA,CLyBC,AKzBA,CnBYM,CAAC,EMuFZ,CVnBO,CJFe,AaG9B,CPxBQ,CehDiB,CAAC,CCgBlB,AKzBA,CLyBgB,CdbR,CAAe,ARkEM,A2B9EX,ELyBlB,AKzBA,C3B8EgC,AsBrDX,Cdbb,AaHA,CbGoB,AaHD,CAAvB,ErBqEiC,CQlEL,GcahC,EAAgC,QdbJ,CAAS,AcarC,CtBqDgC,CAAsB,CQlE1B,EAAc,CAAd,EAAiB,CRkEb,CQlEJ,ARkEkC,CQlEtD,CRkEwB,CAAhB;AQjER,AMwFR,AO5F8B,AfiD9B,AsB9CR,AfqEA,ICoBQ,AR3CA,EejD8B,CP4F3B,AO5F4B,AfiD5B,CE7CK,AMwFJ,AR3CA,CejD6B,AOGzC,EpBCmB,CAAC,EF6CZ,GQ2CA,CO5F0C,CAAC,CP4F3B,ENxFR,CAAe,GMwFD,CNxFd,AaJyB,CbIL,AaJwB,CP4F3B,AO5FQ,GbID,AaJwB,GP4FlC,AczF9B,GdyF0C,MAAlC,CNxF4B,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApB;AAEA,AMuFR,AO7FI,ArBsEY,AsBpDhB,AhBgCA,AqB1DA,ACvER,AfuJA,AuBIA,CR3JA,CAAyC,Ed4KjC,AQ3EA,AhBgCA,CenDmD,EP8FhD,AO5FC,AfiDD,CE5CK,AMuFJ,AR3CA,CqB1DC,CdgFb,ECqBQ,AR3CA,CqB1DS,CAAC,CbqGC,CdvBS,AsBpDR,ATsDpB,CLlEyB,AcYJ,AK1BA,CnBcK,AmBdlB,AdgFR,CLlEyB,CAAT,AmBdQ,ASoFJ,CTpFK,ASoFJ,CR3JrB,CpBqF+B,ARgEI,A4BrJnC,CDuE4B,EnBcZ,CRgEuB,AsBpD/B,CtBoDgB,A2B9EM,CSoFD,CpCNa,AsBpDR,Ac0DJ,CtBiBtB,AQ3E2B,CK1B3B,EAA4B,CL0BG,AK1BF,EAA7B,EAAiC,KSoFpB,CAAwB,Gd1DV,CAAS,Kc0DvB,CAAD,CAApB,Id1DmC,EAAsB,CAAtB,CAAD,EAA2B,IAAI,aAAJ,CAAS,WAAT,EAAsB,CAAtB,CAA3B,EAAqD,IAAI,aAAJ,CAAS,WAAT,EAAsB,CAAtB,CAArD,CAA1B;AdXQ,AMuFR,AO7FK,ArBsEe,AMpBvB,AqB1DO,Ad+Ee,EAAA,CP/BvB,CQqDI,EO7FK,CP6FF,AO7FG,CbME,AMuFJ,CO7FI,CMRE,Cd+ES,CAAA,Cc/EN,CnBcC,CAAC,CmBdC,CbqGhB,GAAgB,AO7FG,AMRC,CNQA,GRuED,CLjEX,CAAkB,AKiEP,ECsBnB,CO7FQ,CbMA,AaNqB,CbME,AaNvB,CRuEW,CAAA,CQvEc,CbME,CaN/B,EMRY,CAAc,KAAI,CAAC,GnBcJ,CAAS,IAAT,AmBdD,EnBcgB,CAAf,AmBde,EnBcG,EAAlB,CAAvB,AmBd0C,CAAC,UAAL,GAAgB,CAA9C,EAAiD,GAAjD,EAAsD,EAAtD,CAAZ;AbsGJ,AO9FqC,ArBuEjB,AsBpDpB,AK1BI,ASoFZ,ItBiBQ,AQ3EA,EDnBqC,AMPjC,CbqGD,AO9FmC,CP8FlC,CO9FoC,ACmBpC,Ac0DH,Cd1DI,KMfE,Cd0FP,AsBjBR,CtBiBqB,AsBjBJ,Cf7EwC,CAAC,Ae6E1D,Cd1DQ,CAAgB,AK1BG,ASoFC,CtBiBF,AarGE,GL0BpB,CAAqB,AK1BjB,CbqGS,AO9F2B,AMPf,CbqGD,AO9FmC,CAAnB,CCmBf,AK1BrB,ENO2D,GP8FlD,GAAqB,MAArB,GAA8B,KQ3EtB,CR2ErB,AQ3EuC,ER2EY,EAAnD,CQ3EqB,CR2EkC,CAAC,AQ3EX,GR2EY,AQ3EpC,CR2ErB,CQ3EkD,GAA7B,EACjB,CACI,CAAC,MAAD,EAAS,WAAT,CADJ,EAEI,CAAC,MAAD,EAAS,WAAT,CAFJ,EAGI,CAAC,MAAD,EAAS,WAAT,CAHJ,CADiB,EAMjB,CAAC,OAAD,EAAU,OAAV,CANiB,EAOjB,UAAS,IAAT,EAAwB;AdnBpB,AMyFR,AOhGI,ArBwEgB,AsB7CZ,AhBuBX,AOsBD,AuBMA,ItBkBI,COlGmD,CegFnD,CtBkBG,AO/FC,CbMI,AMyFJ,AsBlBR,EAAQ,CvBNR,CCwBI,CNzFY,AcoBG,CdpBF,ARiEO,AsB5CP,CRoEF,KQpEQ,CAAC,ET4CxB,CLjEY,ARiEsB,AaAtB,CLjEgB,ARiEO,AsB5CP,AT4C5B,CS5C6B,CAAD,AT4CL,CS5CA,AT4CvB,CLjEY,ARiEY,AsB5CP,CdrBgB,ARiEO,AaAN,ECwB9B,AQpE+B,CdrBvB,CKiEZ,CLjEsC,CKiEU,ES5CP,CdrB7B,AcqB8B,CtB4CQ,CQjEN,ARiEO,EsB5CL,CAAC,AT4C/C,CLjEY,AcqBkC,CAAL,AT4CuB,CS5C/C,CtB4CiC,CAAV,CAAoB,AsB5CP,ItB4Cb,CAAyB,CsB5CN,CAAC,EtB4CS,CAAC,CsB5CN,CAAC,CAAD,CAAL,CAA3C,GtB4CwB,CAAhB,AsB5CiD,CADtD,EAEH,OAAO,CAAC,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAI,CAAC,CAAD,CAAjB,CAAP,KAAiC,IAAI,CAAC,CAAD,CAFlC,CAAP;AdnBH,AMyFL,AOhGK,ArBwEY,AsB1CZ,AKrCD,ASqFJ,IAAA,Cd5DqB,CDlBhB,ACkBL,AKzBI,CnBdA,AaqBE,CPgGF,COhGI,EMPA,Ad+ER,Cc/ES,ASqFD,C5BvEG,AR6DK,AoCUP,EtBkBT,EDxBA,AuBMA,CvBNA,AuBMc,CpCNS,CqBxEJ,CAAC,CRwEpB,CAAA,AuBMA,CAAoB,GvBNpB,Cc/EI,CNOI,AMPkB,Ad+EpB,CQxEuB,ARwE7B,CQxEQ,CRwEC,CAAT,CQxEiC,CRwErB,CQxER,AMPA,CAA8B,Ed+ElC,AuBMA,CTrFI,Cd+Ec,CclFe,ASwFK,CTrFE,Md+ExC,EAA4B,AuBM5B,CvBNA,EAA+B,CAA/B,KAAiC;ALhEzB,AaR6B,ArByEjB,AMvBxB,AOuBC,AuBMG,E9B7BJ,E8B6BI,Ef/EqC,CAAC,CbQ9B,AF0CZ,CelD4C,AfkD5C,G8B6BY,CAAC,CpCNW,GQjEH,A4BuEjB,C5BvEkB,AF0CtB,A8B6BkB,C5BvEG,AF0CrB,CE1CY,AaR2C,CAAC,EbQ7B,A4BuEvB,CpCN8B,AoCMV,CpCNW,CQjEvB,CF0CZ,EelD4C,ArByEpB,AoCMpB,Cf/E6D,ArByEzB,AMvBxC,ENuB0C,AoCMV,CpCNW,KAAH,CAAS,CMvBxC,C8B6BL,EpCNoC,CAAc,AMvBtD,EAAwB,ENuBkC,CAAC,QAAnB,CAAhB;AQhEZ,AMwFR,AOjGI,ArB0Ea,AMvBjB,A8B6BA,IAAA,CfnFmD,CAAzB,CAA1B,CbYQ,AMwFJ,EsBjBE,C9B7BC,CAAC,CQ8CC,AsBjBA,C5BvEK,CAAC,CF0CH,CAAC,A8B6Bb,CtBiBI,AR9CQ,CQ8CG,AR9CP,GQ8CR,CR9CmB,CQ8CC,CNxFZ,CAAkB,CF0CH,CAAC,CAAD,CE1Cf,AF0CD,CE1CwB,AF0C/B,IE1CmC,aAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,EAAjB,CAAvB;AACH,AMwFD,AOhGJ,ArByEa,AsB3ChB,AhBoBA,AqB1DO,AdkFR,AuBKC,EvBLD,CP1BA,A8B2BA,Cf3EI,EPgGI,AaxGA,GSuFD,ETvFK,CAAC,CbwGE,AOhGF,CAAC,AR0Ed,CAAA,CCsBkB,MaxGV,CAAgB,CNQpB,AR0EJ,CQ1EyB,AR0EzB,ECsBQ,AaxGA,CAAqB,CNQzB,CAA0B,CMRtB,EdkFR,CQ1EkC,ER0ElC,UAAS,CQ1EqB,CAAS,CR0EvC,EAAsC,EQ1ER,EAAgB,CAAhB,CAA1B;APiGC,AOhGD,ArByES,A2BjFR,AdkFD,AuBKA,If/EA,Ae+EA,CtBeA,AalKiC,CA8DjC,EdgFM,CQ1EF,ArBqDI,AaqBD,CQ1EF,CPgGE,CDtBG,AuBKF,CAAC,EtBiBE,AdvBI,EaCA,AuBKf,CAAc,Cf/Ed,CPgGgB,CDtBN,CQ1EO,AR0EG,CAAV,AuBKV,CAAoB,CtBiBT,CAAW,ADtBE,GAAxB,CCsBO,ADvB2B,CQzElC,AR2EA,CCqB4B,OsBjB5B,GAAsC,MAAtC;A5BtEI,AMwFA,AO/FJ,ArBwEY,AsB5CpB,AhBmBK,A8B+BG,IAAA,E5BvEI,AMwFA,EO/FE,CC4Bd,EdrBgB,CAAC,A4BuED,CtBiBG,AsBjBF,GtBiBK,CsBjBd,CtBiBI,AO/FY,Ae8EF,Gf9EK,CbOf,CAAgB,A4BuEpB,CAAoB,Cf9EG,EbOnB,CAAqB,C4BuEzB,CdlDR,CdrBY,C4BuEwB,C5BvEE,GAA1B,EAA+B,G4BuEnC,G5BvEI,AaPe,CAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B,KAAG,EAAlC,EAAsC,EAAtC,CAAnB,CA5CiC,CA6CjC;AbOC,AMwFG,AO7FJ,ArBsEY,AsB1JpB,AhBiIA,AO0BQ,AuBKA,CdhKR,CAAoC,ET2J5B,AuBKA,EtBiBI,CDtBD,CAAC,CCsBG,ARhDf,CQgDgB,AdvBI,AoCMN,GAAG,CtBiBL,CRhDZ,EQgDuB,ADtBf,CCsBgB,AsBjBhB,EpCNsB,CAAC,CsB1J/B,CRiL6B,AQjL7B,EtB0JoB,CAAgB,GcuBZ,CAAY,CdvBhB,KcuBI,GAAqB,CAArB,GAAyB,IAAzB,GAAgC,IAAjC,IAAyC,eAApD;AACA,AdvBK,AM7CjB,AqBpCQ,AdkFA,AuBKH,C9BnDL,CAAqB,EO8Cb,ECsBI,ARpEZ,CAAA,AO8CW,CclFG,AdkFF,CCsBG,CAAC,IaxGI,AdkFZ,CAAW,CAAX,CclFe,CbwGX,ADtBU,CCsBG,ADtBjB,mBCsBI,EAAkC,EAAlC,EAAsC,EAAtC;ANvFJ,AMwFI,AO9FJ,ArBuEK,A2BlFW,AdmFhB,IAAA,EcnFgB,C3BmDU,AagCvB,CLlEG,AaNF,ArBwEA,AaAA,ECsBM,CazGW,EAAE,CdmFvB,CS9CO,AT8CI,CAAX,CCsBiB,CNxFD,AKkEF,ECsBM,CNxFD,EKkEA,ELlEI,AMwFE,AO9FJ,ERwEP,CQxEU,ARwEA,CAAV,CCsBM,AO9FpB,CP8F+B,CazGhB,AdmFa,CAAC,GAA7B,OLlEmB,CAAc,EAAd,EAAkB,AMwFjB,CAA6B,ENxF9B,CMwFC,CNxFsB,AMwFW,ENxFlC,CAAnB,GMwFoB,EAAyC,IAAzC,CAA8C,EAA9C,CAAhB;ANvFJ,AMwFI,AO9FJ,AMZ4C,AdoF5C,AuBIJ,EAAA,E5BtEI,AaNA,EMZ4C,EdoFtC,CQxEF,CP8FM,AO9FL,Ee4EC,E5BtEI,CAAC,AMwFI,Aa1GsC,AdoFxC,EcpF0C,Cb0GrC,ADtBF,KCsBO,ADtBF,CQxErB,CbMA,CAAsB,CaNA,ARwEN,CCsBE,ADtBQ,CCsBG,ADtBb,CLlEhB,AaNA,CbM2B,CKkEG,GLlEC,CKkE/B,QCsBkB,CAA2B,GNxFlB,AMwFT,CNxFkB,AMwFa,MAA/B,EAAuC,CNxFZ,CAAC,CAAD,CAAlB,AMwFT,CAA4C,CNxFZ,CAAvB,AMwFT,CAAd,CNxFiD,EAA1B,CAA3B;AACA,AMwFI,AO9FJ,AMbe,AdqFf,AuBIP,I5BtEO,AaNA,ARwEA,CcrFA,Cb2GI,CDtBD,CAAC,CCsBG,AO9FH,CP8FI,AO9FH,IRwEL,CLlEW,AKkEA,CLlEC,AKkEA,ECsBR,CAAa,CNxFjB,CAAiB,EKkEjB,EAAqB,CQxErB,ARwEA,ECsB0B,CO9FF,EbMxB,AaNA,IP8FiB,GAAmB,UAAnB,GAAgC,KAAhC,GAAwC,IAArD,EAA2D,EAA3D,EAA+D,EAA/D;AACH,AdxBG,AM3BZ,AqBxDQ,AdqFA,IP7BR,AO6BQ,CCeO,CdjBH,CaED,CcrFG,AdqFF,GCsBG,ARnDf,GO6BQ,CCsBW,AdxBE,AaEF,CbFG,AaEF,GcrFK,Cb2GD,CdxBZ,CAAgB,A2BnFA,CdqFpB,ECsBW,ADtBU,CCsBC,AdxBlB,GAAuB,CaED,GCsBnB,CDtBc,CCsBU,ADtBA,CAAV,EbFe,CAAC,AaEF,CAAC,GAApC,IbF2B,CAAmB,UAAnB,CAAvB;AQ/DJ,AMwFI,AO/FJ,ArBuEC,AM5BT,AqBxD6B,AdsFrB,AuBIR,IvBJQ,CLlEA,CMwFI,Aa5GiB,CnBoBrB,AKkEG,AuBIJ,CvBJK,AuBIJ,Cf7EK,CbOL,CmBpB0B,Eb4Gf,AO/FF,AMbmB,AS0F7B,Cf7EW,ARyEV,AuBIR,C5BtEY,AKkEO,CLlEN,AMwFY,CO/FJ,CAAb,EAAgB,CP+FM,AO/FL,CRyEjB,EQzEoB,ARyEA,CAApB,CLlEA,AMwFiB,CAAW,CNxFZ,AaPM,IbOtB,AaPoB,CbOA,CMwFH,CO/FU,CAA3B,CP+FsC,Aa5GlB,CnBoBpB,AMwFiB,AO/Fa,CbOV,AaPW,EbO/B,AMwFuC,AO/FvC,EbOoB,AaPe,IP+FlB,IAA6B,KNxF1B,AMwF+B,CNxF/B,IMwFoC,MAAL,CAAY,ENxF3C,CAAA,CAAC,EMwFJ,CAAb,ONxFgB,CAAA,EAAgB,WAAhB,CAAA,EAAgC,WAAhC,CAApB;AMyFC,AO/FG,ArBuEP,AM7BL,AqBxD8D,AduFtD,GbzCJ,CayCI,CCoBO,Ca3G+C,CduFnD,CAAC,EQzEM,Af0ClB,CQqDe,EO/FM,CRyEb,CcvF+D,AduFpD,CQzEK,Af0CxB,CqBxDyE,CrBwDzE,Ee1C4B,ERyEpB,EAAoB,KAAK,IAAL,CAAU,CAAV,GQzEJ,ARyEkB,CQzEJ,ARyEK,GAAnC,EQzEkC,CAAC,cAAL,GAAsB,KAAI,CAAC,gBAAL,GAAsB,CAA1D,EAA6D,GAA7D,EAAkE,EAAlE,CAAZ;AbQJ,AMwFI,AO/FA,AfyCU,AqBxDM,AdwFpB,EPhCc,EOgCd,CcxFA,Cb8GI,AO/FA,CRyED,CLlEG,AKkEF,GPhCU,CAAA,CQsDH,CDtBX,ELlEc,AMwFA,GNxFG,AFkCH,EAAA,EElCO,AaPA,CAAC,GfyCR,CezCV,AfyCU,CezCa,GP+FvB,AO/FA,ObOa,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,WAApB,CAAjB;AACA,AMwFI,AdzBZ,A2BrFQ,Mb8GI,ENxFE,AmBtBA,Cb8GC,AdzBf,CcyBgB,Ea9GE,Eb8GN,Ca9GS,CnBsBC,CMwFC,ENxFE,CR+DzB,GQ/D6B,WMwFjB,KNxFa,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,WAApB,CAAjB;AACA,AMwFC,AOhGG,ArBpGZ,AM6II,AqBxDkB,AdyFd,Cb9KR,EAAA,GqBoGY,AMfU,EnBuBR,GaRE,AfyCZ,AqBxDuB,CNeV,AR0ED,CczFa,IdyFR,CPjCjB,CAAY,CAAZ,CEjCuB,CFiCA,AOiCX,CPjCZ,AOiCuB,CLlEG,CFiCQ,GEjCJ,AaRtB,CAAsB,AfyC9B,EAAgD,COiC5C,IQ1EI,CAA8B,CfyCtC,EezCQ,AfyCuD,Ee5CxB,CAGK,CbQlB,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,WAAtB,EAAmC,KAAnC,EAA0C,EAA1C,CAAtB;AFiCJ,AqBxDiB,Ad0FT,Kc1FJ,GrBwDJ,GOkCa,CAAL,CPlCR,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,CAAN,EAAS,CAAT,EAAY,IAAZ,EAAkB,OAAlB,EAA2B,CAA3B,KAA6B,IADjC;AE/BI,AMuFA,Ad3BP,A2BpFO,AdyFY,ILjEZ,AMuFA,GAAG,CAAC,Aa/GE,CnBwBF,CAAC,MMuFL,CAAa,Aa/GE,GnBwBf,AmBxBkB,CnBwBF,GMuFhB,CNvFA,CAAqB,AMuFC,EAAtB,EAA0B,EAA1B,ENvFA,EAA+B,QAA/B,EAAyC,aAAzC;AMyFA,AOlGI,Af0CJ,AqBzDmB,Ad0FX,ICuBR,ARxDA,Ee1CI,AMfe,CbiHhB,CAAC,ADvBI,CPjCJ,CAAC,Ce1CG,AMfgB,Ad0Fb,CQ3EF,AR2EG,Cc1Fc,EbiH1B,Ad3BO,CM7BP,GAAc,EOiCN,CQ3EJ,Af0CJ,Ce1CoB,IAAhB,CAAqB,GAArB;AbWJ,AMwFH,AOlGI,AMhBiB,Ad2FV,GChDZ,ENjBI,AalEiC,AMwCjC,CNkBA,AMpFiC,CnB4FjC,AmBxBA,CdyFQ,ELjER,CKiEW,CAAC,GLjER,CAAC,EKiEG,CAAW,CAAC,GAAG,GAAf,EAAoB,CAAC,CAAD,ELjE5B,CKiEiC,CLjEX,EKiEd,ELjER,CAA0B,KAA1B,CAA0B,EAA1B,EAA8B,WAA9B;AFgCH,AqBvDG,AdyFQ,QAAA,GAAG,CAAC,MAAJ,CAAW,CAAC,GAAG,GAAf,EAAoB,CAApB;ACwBZ,ADvBY,ECuBZ,MDvBY,GAAG,CAAC,GCuBhB,ADvBY,CCuBZ,ADvBoB,CAAR,EAAW,CAAX,EAAc,CAAC,ECuB3B,CAAA,ADvB8B,GAAlB,EAAuB,CAAvB,ECuBZ,ADvBsC,GCuBtC,CDvB0C,CAAC,EAA/B,MCuBH,IAAT,EAAwB;ANzFvB,AM0FG,AOlGA,AfwCJ,AqBvDI,Ad0FQ,EPnCZ,MexCU,AR2EE,CPnCZ,AqBvDS,CrBuDT,CQ0DW,ADvBI,CAAC,CCuBZ,AajHS,CNeG,AMfF,GNeK,AMfF,CAAb,Ad0FQ,CPnCZ,AOmCuB,CPnCvB,AqBvDoB,Ad0FI,Cc1FH,Ad0FE,Gc1FC,Ad0FI,GAAhB,CPnCZ,AqBvDI,Cd0F6B,Cc1FH,Ad0FI,CPnClC,AqBvD+B,Ad0FE,Ec1F7B,Cd0FkC,Cc1FH,Ed0FvB,IPnCH,GAAT,EAAsC;AQ2DrC,AOnGmB,AfyChB,AqBvDI,Ad0FI,GCqBZ,GOjGoB,EfyCV,AOmCE,CPnCD,CqBvDG,CNcW,AMdV,Ad0FA,CPnCD,AOmCE,CQ5EW,CMdT,CAAV,ErBuDW,IAAL,AOmCF,CPnCY,CAApB,CADkC,CAElC,Oe1Ce;AbSvB,AaToD,AMbxC,Ad0FI,MQ7EoC,ER6EpC,CLpEhB,CmBtBkB,Cd0FC,CAAC,Cc1FC,ENawC,CMbrC,CNauC,CR6E/C,OLpEhB,MmBtBuC,CAAC,CAAC,GAAG,IAAJ,GAAW,CAAZ,CAA3B,CAF2B,CAG3B;AnBzFZ,AMyMA,AOpGuB,Af2Cf,AOmCQ,CLnLhB,CAA+B,EFgJvB,Ce3CA,Ef2CG,CAAC,AOmCI,CCsBhB,EDtBmB,CAAC,IAAJ,CPnCR,KEhJR,AMyMA,CNzMA;AMIA,AOkGQ,Af2CA,AqBvDI,Ad2FI,CCjLhB,EAAA,CR6IQ,GAAG,Ce3CG,Af2CF,EqBvDM,EAAE,Cd2FC,CPpCb,CAAW,AqBvDI,CrBuDH,EqBvDM,CNYD,Af2CF,AqBvDI,Ad2FX,GQ/EY,Af2CpB,AOoCsB,EPpCF,CAAC,AOoCb,Ec3FO,CrBuDS,AqBvDI,CrBuDH,AqBvDV,GAAiB,CrBuDhC,CqBvDe,GAAsB,CAAC,IAAI,IAAI,GAAG,CAAX,CAAlC;ANYiB,Af4CrB,AqBvDI,Ad2FI,IPpCR,Ee5CqB,Cf4ClB,CAAC,EqBvDM,CNWgB,CMXd,CNWgB,EbUrB,AmBrBQ,KAAK,CAAC,GrBuDrB,CAAqB,CAAC,GAAG,AqBvDV,CAAe,CAAf,CrBuDf,EAA8B,AqBvDI,CrBuDH,Ge5CX,Af4Cc,CqBvDK,CAAC,CrBuDxC,EAAuC,CAAvC,AqBvDkC,CAAW,CrBuDH,AqBvDR,CrBuDS,EqBvDI,CrBuDD,AqBvD/B,GrBuDf,AqBvDmD,EAApC,GAAyC,CAAC,GAAC,IAAtD;ANWmD,Af6CvD,AqBvDI,IrBuDJ,Ee7CuD,AMVnD,CrBuDD,CAAC,GqBvDK,CAAC,Gb+GH,AOrGyD,EAAE,KMV9D,CAAiB,CrBuDrB,CAAqB,CAAC,CqBvDlB,CAAsB,CrBuDD,CAAC,EqBvDI,CrBuD9B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,AqBvDf,CAAS,ErBuDS,CAAC,AqBvDnB,EAAc,CrBuDxC,AqBvD0B,ErBuDwB,AqBvDP,CrBuDQ,AqBtD3C,GrBsD8C,CAAC,IAAvD;Ae7CoB,Af8CpB,AqBvDS,Ad0FL,IPnCJ,Ce9CA,Ef8CG,CAAC,AqBvDK,CAAC,EAAE,Ad0FH,CAAL,Ic1Fa,CAAC,OrBuDlB,CAAqB,AqBvDT,CrBuDU,AqBvDK,CAAf,ErBuDa,CAAzB,AqBvD+B,ErBuDH,CAAC,EqBvDO,CrBuDJ,AqBvDK,CrBuDJ,IAAjC,EAAuC,CAAC,GAAG,CqBvDZ,CAAmB,CrBuDlD,AqBvD+B,ErBuDiB,AqBvDK,CrBuDJ,AqBvDzC,GrBuD4C,CAAC,IAArD;Ae7CA,Af8CA,AqBxDwD,Ad0F5C,IPlCZ,GAAG,Ce9CG,Af8CF,AqBxDoD,CAAC,EAAE,CNUjD,CMVmD,ENUhD,CMVmD,CrBwDhE,AqBxDiE,GAAC;ANUpD,Af+Cd,AqBzDQ,Ad2FA,IPlCR,Ee/Cc,Cf+CX,AqB1DwC,CrB0DvC,AOkCI,Cc1FA,ENSW,ARiFR,CAAC,CQjFS,Cf+CrB,OOkCQ;AQjFK,AfgDb,AqBzDS,Ad2FD,IPlCR,CehDA,EfgDG,CAAC,AqBzDK,Ad2FD,Cc3FE,EAAE,Ad2FD,CPlCX,AOkCY,GP5CsB,CAWlC,AqB1DiB,CAAC,Cd2FV,CAAW,Cc3FA,Ad2FC,Cc3FZ,Ed2Fe,GAAf,EAAoB,CAAC,GAAG,CAAC,GAAzB;AQjFR,AMVsB,Ad4Fd,QQlFF,AMVgB,Ad4Fd,Cc5Fe,EAAE,Ad4Fd,CAAC,Cc5Fe,GAAG,CNUf,AMVgB,GNUb,AMVc,Qd4FxB,CAAqB,CAAC,GAAG,GAAzB,EAA8B,CAAC,GAAG,GAAlC,EAAuC,CAAvC,EAA0C,CAAC,GAAG,GAA9C;AQlFW,AfiDnB,AqB3DQ,Ad6FA,IPlCR,EejDmB,CfiDhB,AqB7DwC,CrB6DvC,AOkCI,Cc5FA,ENSgB,ARmFb,CAAC,CQnFc,IfiD1B,WOkCQ,CAAqB,CAAC,GAAG,CAAC,GAA1B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,GAAvD;AQnFU,AfkDlB,AqB3DS,Ad6FD,IPlCR,CelDA,EfkDG,CAAC,AqB3DK,Ad6FD,Cc7FE,EAAE,Ad6FD,CAAC,EPlCZ,CAAW,CAAC,AqB3DK,CAAC,ErB2DH,CAAC,AqB3DG,CAAX,ErB2DR,EAAqB,CAAC,EOkCd,CPlCiB,AOkCI,CPlCH,AOkCI,GPlC9B,AOkCiC,CAAzB,EAA4B,CAAC,GAAG,CAAC,GAAjC,EAAsC,CAAC,GAAG,GAA1C,EAA+C,CAAC,GAAG,CAAC,GAApD;AQnFR,AfkDA,AqB5DsB,Ad8Fd,IPlCR,GAAG,CelDG,AfkDF,AqB5DkB,Ad8Fd,Cc9Fe,EAAE,Ad8Fd,CQpFD,ARoFE,GQpFC,MRoFL,GPlCR,CAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,CAAC,GAAjC,EAAsC,CAAC,GAAG,GAA1C,EAA+C,CAAC,GAAG,CAAC,GAApD;AelDc,AfmDd,AqB7DQ,Ad+FA,IPlCR,EenDc,CfmDX,AqBhEwC,CrBgEvC,AOkCI,Cc9FA,ENSW,ARqFR,CAAC,CQrFS,CfmDrB,IOkCQ,mBQrFK;AAAkC,AfoDlD,AqB7DY,Ad+FD,GPlDZ,GepCmD,EMTtC,Ad+FD,Cc/FE,EAAE,Ad+FD,CAAC,Ec/FG,CNSyC,AMTxC,Cd+FR,CQtFkD,MMT9C,CAAa,CAAjB;ANSK,AMTe,AdiGpB,KQxFR,GMT4B,CAAC,EAAE,EdiGlB,MAAL,GAAc,GAAd;AQvFR,AfmDH,AqB7DW,AdkGA,OctGmC,CNcrC,AMdoB,EAKnB,ONSQ,GAAG;AAAC,AMTX,MNSW,EMTX,GNSgB,EAAE,AMTb,EAAE,sBNSG,GMTX;ANS6C,AfoDxD,AqB7D8C,AdkGtC,EPrCR,IepDwD,EMTV,CrB6D9C,CAAA,COqCa,CAAL,GQzFyD,EAAE,AMTZ,ErB6DvD,AqB7DyD,CrB6DzD,QAAA,GAAA,UAAS,IAAT,EAAwB;AepDF,AfqDlB,AqB9DO,AdkGK,KQzFZ,CAhEiC,CAiEjC,AMf0B,CAAtB,GrBmEG,CAAC,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAI,CAAC,CAAD,CAAjB,CAAP;AelDA,AfmDH,AqB9DI,AdkGO,GPtCZ,EqB9IqC,CAoFjC;AdiGQ,QAAA,GAAG,CAAC,SAAJ;AQvFR,AfkDH,AOsCW,QQxFJ,ARwFI,GAAG,CAAC,EQxFF,GAAG,CRwFL,CQxFR,ARwFmB,CAAC,GAAG,GAAf,EAAoB,CAAC,GAAG,CAAC,IAAzB;AQvFR,AfkDR,AqB5DQ,AdkGQ,QQxFJ,AMVA,AdkGI,CPtChB,EOsCmB,CAAC,EQxFF,EfkDlB,CelDqB,EAAb,KMVoB,GAAG,CdkGf,CclGR,AdkG6B,CAAC,GAAG,GAAzB,EAA8B,CAAC,GAAG,GAAlC,EAAuC,CAAvC,EAA0C,CAAC,GAAG,GAA9C;AP/DhB,AOgEgB,CPhEhB,CAAsB,IAAtB,CAAA,COgEgB,GAAG,CAAC,gBAAJ,CAAqB,CAAC,GAAG,CAAC,GAA1B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,IAAvD;AQxFR,AMVA,AdmGQ,QAAA,CQzFH,AMVA,EdmGM,CAAC,CQzFH,AMVA,CNUC,AMVA,GNUG,AMVA,CNUb,AMVA,ENUgB,AMVA,CNUC,AMVA,GNUG,CMVC,GNUrB,ARyFQ,CcnGR,AdmG6B,CQzFH,ARyFI,CQzFH,AMVA,CAAC,CNU5B,ARyFiC,CcnGjC,AdmGQ,CQzFuB,CMVC,AdmGI,CAAC,GAAG,CAAC,IAAjC,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,GAAG,CAAC,IAArD;AQxFJ,AMVA,AdmGI,QAAA,EQzFE,CRyFC,CAAC,GQzFG,GAAG,GRyFV,CQzFc,iBAAJ,CAAa,UAAU,CAAC,QAAX,CAAoB,CAApB,GAAwB,UAAU,CAAC,YAAX,CAAwB,IAAI,GAAC,CAA7B,EAAgC,CAArE,EAAwE,EAAxE,EAA4E,KAA5E,EAAmF,EAAnF,CAAd;AMTA,AdmGI,QAAA,GAAG,CAAC,MAAJ;AQzFJ,AfiDZ,AqB1DY,AdmGI,IPzChB,EejDY,CfiDZ,COyCgB,EcnGE,CNSF,AMTG,AdmGA,CQ1FF,AR0FG,EcnGE,EdmGN,GcnGW,Ad0Ff,Cc1FgB,AdoGZ,EQ3FJ,CAAgB,IAAhB,CAAqB,AMTX,CAAe,CAAf,GNSV,AMT6B,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,CAApD,CAH4B,CAG2B;ArB0DnE,AqBzDY;ANSA,AfgDZ,AO2CgB,MQ3FJ,ER2FI,EP3ChB,CO2CmB,CQ3FD,AR2FE,CQ3FD,GfgDnB,CehDY,CAAY,AfgDxB,GO2CgB,EQ3FJ,EAH2B,CAGP;AACvB,Af+CS,AqBxDN,AdoGI,EP5CE,MO4CF,EcpGE,CrBwDA,AO4CC,CP5CD,AO4CE,GP5CF,CqBxDM,CrBwDN,CO4CF,CcpGW,AdoGA,CAAC,GP5CV,AqBxDa,AdoGA,CP5Cb,AO4Cc,GAAhB,EAAqB,CAAC,GAAG,CAAC,GAA1B,KcpGW,CAAe,eAAe,CAAC,CAAC,GAAC,IAAF,GAAO,CAAR,CAAf,CAA0B,QAA1B,CAAmC,CAAnC,GAAuC,CAAtD,EAAyD,CAAC,GAAG,EAA7D,EAAiE,EAAjE,CAAf,CAL4B,CAM5B;AdoGI,QAAA,GAAG,CAAC,gBAAJ,CAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,CAAC,GAAjC,EAAsC,CAAC,GAAG,GAA1C,EAA+C,CAAC,GAAG,CAAC,GAApD;AQ3FR,Af+CJ,AqBvDQ,AdoGI,QAAA,CQ5FH,CMRK,CrBuDd,AO6Ce,CcpGC,AdoGA,CQ5FH,CAAC,Af+Cd,CAAY,AqBvDO,CrBuDnB,Ce/CiB,CAAb,Af+CmB,AO6CX,CP7CZ,Ce/CoB,AMRI,CNQH,Af+Ca,AqBvDT,GNQD,Cf+CxB,EAAgD,Ce/C5C,CMRe,CNQW,AMRI,CNQH,AMRZ,ENQf,Cf+CJ,AqBvDsC,CNQH,Cf+C4B,GqBvDpB,CAAC,aAAN,CAAoB,CAApB,EAAuB,CAArD;ANSA,AMRA,AdoGI,UQ5FE,AMRF,CrBuDR,CqBvDU,CdoGG,EQ5FE,AMRF,CAAC,CrBuDd,Ce/CkB,Af+ClB,CqBvDiB,AdoGT,EcpGK,CNQS,Af+CtB,AO6CsB,CP7CtB,CqBvDsB,CdoGd,EP7CR,CqBvDwB,CrBuDlB,AqBvDF,CrBuDJ,EAAS,CAAT,EAAY,Ie/CM,Af+ClB,Ce/C+B,Cf+Cb,Ke/CmB,CAAC,CAAD,Af+CrC,Ce/C+B,CAAU,Af+Cd,CAA3B,KAA6B,Ee/CE,CAAmB,CAAhC,EAAmC,EAAnC,EAAuC,KAAvC,EAA8C,EAA9C,CAAd;AfgDP,AqBvDO,AdoGI,UcpGA,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAxB,EAA4B,EAAE,GAAG,CAAC,GAAG,EAAT;ANQ5B,AMPA,Ad0DJ,MQnDI,AMPA,KNOI,CAAC,AMPC,CAAC,SNOP,CAAgB,AMPhB,CAAkB,GNOlB,CAAqB,AMPrB,CAAuB,INOvB,AMP2B,aAAJ,CAAS,KAAT,EAAgB,CAAhB,EAAmB,CACtC;ArBuDZ,AqBvDa,AdoGZ,EP7CD,COXA,EPWA,CAAA,EqBvDa,CAAC,EAAE,IrBuDhB,CAAA,CqBvDsB,CAAC,MrBuDvB,EqBvDgB,CrBuDhB,AqBvDgC,CAAhB,GAAoB,MrBuD3B,AqBvDiC,CAAC,ErBuD3C,EAAsC,QqBvDF,CAAoB,CAApB,EAAuB,CAA/C;ANOJ,AfiDJ,AqBxD0D,MNOtD,EfiDE,AqBxDoD,CrBwDnD,AqBxDoD,EAAE,CNOnD,AfiDA,CejDC,IAAP,AfiDW,CejDC,GfiDN,CAAU,CejDhB,AfiDJ,CADkC,CAElC;AejDC,AMRO,AdsGZ,EAAA,GQ7KqC,CAiFjC,CMX8C,EAEtC,KdqGZ,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAwB;AP5CpB,AqBzDS,AdsGT,IP7CA,GAAG,CAAC,AqBzDK,CAAC,EAAE,CdsGJ,CctGA,IrByDR,AO6Ca,KAAL,CAAW,SAAnB;AP5CA,AqB1DgB,AduGZ,IP7CJ,GAAG,CAAC,AqB1DY,CAAC,EAAE,AduGV,CAAL,EP7CJ,CAAW,CAAX,EAAc,CAAC,GAAG,CAAC,GAAnB;AehDA,AfiDA,AqB3DQ,AdwGA,IP7CR,GAAG,AqB7D2C,CrB6D1C,AqB7DuB,CNYtB,AMZD,INYK,CAAC,AfiDV,CAAW,AO6CI,CP7Cf,AO6CgB,CQ9FH,CAAb,AfiDc,CAAd,CejDgB,AR8FI,CQ9FH,AR8FI,CAAD,CAAJ,CQ9FI,GR8FO,CQ9F3B,EAA0B,CAAC,AR8FI,CAAC,CQ9FhC,AR8F+B,CAAhB,CQ9FgB,AR8FvB;AQ7FJ,AfiDJ,AqB1DI,IrB0DJ,EqB1DI,CrB0DD,CAAC,EejDM,CAAC,GAAG,AfiDd,CejDI,Ef2C8B,CAOlC,IqB3DoB,CAAC,IAAjB,CAAsB,MAAtB;ANUA,AR6FA,UQ7FM,CR6FD,CAAL,CQ7FS,GAAG,iBAAiB,CAAC,CAAC,GAAG,IAAL,CAA7B,CAF2B,CAG3B;AfiDJ,AqB3DI,AduGI,IP5CR,EqB3DI,CrB2DD,CAAC,GqB3DI,CAAC,GduGM,CAAC,CP5ChB,GO4CoB,CAAC,CcvGjB,AduGgB,CcvGA,AduGJ,IcvGZ,AduGuB,CcvGF,GduGM,CAAC,CAAD,CcvG3B,AduGW,CAAP;AQ5FJ,AfiDJ,AqB3DC,IrB2DD,CqBjKiC,CAwGjC,CrByDG,CAAC,EejDM,EAAE,EfiDZ,CejDe,AfiDJ,CAAX,EejDkB,AfiDJ,CejDK,AfiDJ,GAAG,GAAlB,EejDe,CAAa,CAAb,GAAiB,EAAjB,GAAsB,CAAC,IAAI,IAAI,GAAG,CAAX,CAAlC;AACA,AfiDJ,AO2CI,IP3CJ,GAAG,CAAC,EejDM,CR4FD,CQ5FG,AR4FR,EP3CJ,CejDe,AfiDJ,CAAC,GAAG,CAAC,IAAhB,CejDyB,CAAC,AfiDJ,CAAC,GAAG,CAAC,GejDZ,CAAoB,AfiDnC,CejDe,GAAwB,EAAnC;AACA,AfiDJ,AO2CQ,IP3CR,EejDI,CfiDD,CAAC,MAAJ,CAAW,AO2CI,CQ5FD,AfiDF,AO2CI,CQ5FD,EfiDA,CO2CK,CAAC,CAAD,CP3CpB,AO2CgB,EP3CK,CAAC,CejDlB,CAAsB,AR4FE,CP3CH,CAAC,EejDtB,AR4F4B,CQ5FD,AR4FE,CP3CjC,AO2CgC,CAAjB,CAAP,CQ5F2B,aAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,CACxC;AAAC,AfiDT,AqB3DA,IrB2DA,GAAG,CejDM,AfiDL,CejDM,AMVL,ENUO,EMVH,CAAC,GrB2DV,AqB3Da,CAAb,EAAgB,CNUM,AMVL,CNUM,EMVH,IAAE,ENUV,CAAoB,CAApB,AMVZ,EAA4B,CNUQ,AMVP,EAA7B,EAAiC,MNUa,CAAC,YAAX,CAAwB,CAAxB,EAA2B,CAAnD,GAAuD,CAA3D;AAA8D,AfkDtE,AqB3DI,AdqGA,IP1CJ,GAAG,CelDmE,AfkDlE,CelDmE,CMT7D,CNS+D,EAAE,CfkD3E,EelD8E,AMT9D,CNS+D,EMT5D,CNS6D,cMT9C,CAAC,CAAD,CAA9B;ANSI,AfmDR,AqB3DI,AdqGI,IP1CR,GepDgD,AfoD7C,CAAC,CelDI,GfkDR,EO0Cc,IAAI,KAAJ,CAAU,mBAAiB,KAAK,KAAL,CAAW,SAAtC,CAAN;AQ5FC,AfoDT,AOgCA,IPhCA,GAAG,CepDM,AfoDL,CepDM,EAAE,IAAI,CAAC,CfoDjB,EepDkB,CAAV;AAAa,AfqDrB,AOyCH,GAXD,CP9BI,GAAG,CerDkB,AfqDjB,CerDkB,EAAE,AfqDxB,CAAQ,CerDkB,AfqD1B,EAAW,CerDkB,AfqDjB,CerDkB,EfqDf,CerDgB,EfqD/B,EAAoB,CAAC,GAAG,GAAxB,EAA6B,CAA7B,EAAgC,IAAE,IAAI,CAAC,EAAvC;AerDQ,AfsDR,IAAA,GexDgD,AfwD7C,CAAC,CerDI,KfqDR;AerDS,AfsDT,AqB5DI,AdmGP,IPvCG,GAAG,CetDM,AfsDL,CetDM,CMNA,CNME,CfsDZ,GetDgB,CAAC,AMND,GNME,AMNC,CNMX,GMNe,mBAAJ,CAAe,MAAM,CAAC,QAAP,CAAgB,CAA/B,EAAkC,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAtD,EAA0D,EAA1D,CAAf,CAN6B,CAO7B;ANKiB,AfuDxB,AOuCL,GP3DI,KenCyB,CAAC,AR8F9B,EQ9FgC,UR8FhC;AQ9FgB,AMJJ,AdsBZ,CAAA,CAA2B,IctBf,CNC4C,EAIxC,CRiBhB,CAAA,CctBkB,CAAC,UAAP,CAAkB,IAAlB,CAAuB,IAAI,aAAJ,CAAS,KAAT,EAAgB,CAAhB,EAAmB,CACtC;ANIC,AfwDb,AqB5Da,ErB4Db,GAAA,CAAA,EexDa,AMJA,CNIC,AMJA,ENIE,AMJA,GNIG,CAAC,AfwDpB,CAAA,CqB5DsB,CAAC,IrB4DvB,CexDgB,CAAa,CAAjB,AfwDZ,CqB5DgB,CAAgB,CAAhB,GAAoB,EAAxB,ErB4DL,GAAP,EAAsC,MAAtC,EAAqD;AexDrB,AfyD5B,AqB7DoC,IrB6DpC,IezD4B,AfyDxB,AqB7DgC,CNIP,AfyDxB,AqB7DgC,ENIN,AMJQ,MAAM,CrB6D7C,AqB7D8C,CrB6D/B,MAAf,CAAsB,AqB7DiB,CAAgB,GrB6DvD,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,MAAtC;AezDQ,Af0DX,AqB9DW,GrB4DZ,Ie5DoD,AMDF,CNCf,CMCvB,CNID;AAAC,AMJC,AdkGjB,IAAA,IQ9FgB,AMJC,CAAC,EAAE,ENIC,AR8FrB,EQ9FuB,EMJG,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAxB;ANID,AfyDV,AqB7DuC,AdkG5C,OQnGuC,CAA3B,AMCgC,CAAC,EAAE,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAApB,GAAyB,IAAE;ANKjE,AMLO,AdkGhB,KQ3LyC,CA+FjC,CMR8C,EAGtC,CdiGhB,MAAA,EAAA;APpCI,AqB7Da,AdiGO,EPpCpB,AOoCoB,GPpCpB,CAAA,EqB7Da,CAAC,EAAE,AdiGI,CAAA,GPpCpB,CAAA,CqB7DsB,IAAE,AdiGJ,CcjGR,CdiGQ,CPpCpB,GAAA,EOoCoB,CAAA,OPpCX,IAAT,EAAwB;AACpB,AqB9DuB,QAAA,CAAC,ErB8DjB,AqB9DmB,CrB8DlB,CAAC,IAAI,AqB9DmB,CrB8DlB,AqB9DmB,CrB8DpB,CAAN,CAAP,KqB9D0B,CAAgB,CAAhB,GAAoB,EAApB,GAAyB,IAAE;ANMrD,AfyDH,AqB/DW,AdkGZ,GPrCA,IqBhEkD,ENSzC,AMLG,EdiGZ,EQ5Fa,CAAC,GAAG,CAAb,EAAgB,AR4FpB,CQ5FqB,AR4FT,CAAZ,EQ5FwB,AR4FD,CAAvB,EAAkC,CQ5F9B,EAA0B,CAAC,AR4F/B,EQ5FI,AR4F4C,EQ5Fb,MR4FnC,EAAgE;AQ3FxD,AMNK,AdiGb,MQ3FQ,EMNK,AdiGb,CcjGc,EAAE,EdiGhB,GQ3FkB,AMNG,AdkGjB,CQ5Fe,AMNG,KdkGlB,CAAA,EclGY,CAAe,CNMvB,AMNQ,AdkGZ,CQ5F0B,AR4F1B,EclG+B,ENM3B,AMNI,AdkGR,CQ5F+B,CR4FzB,CAAN,EQ5FmC,AR4F1B,CAAT,EAAY,IAAZ,EAAkB,IQ5Fa,CAAS,GR4FxC,EAA4B,CQ5FkB,AR4F9C,CQ5F+C,CAAD,AR4Ff,CQ5FA,AR4F/B,EQ5FmD,CAApB,CAA3B,CR4F6B,IADrC;AQ1FK,AfuDJ,AqB9DsC,KN3FF,CAoGjC,EMTmC,CAAC,EAAE,KAAK,CAAC,QAAN,CAAe,CAAf,GAAmB,KAAK,CAAC,IAAN,CAAW,CAAX,GAAa;ArB+D9E,AqB/DgB,AdmGR,IAAA,GcvG8C,CAAnB,CrBmEnC,AOoCY,CclGG,AdkGF,EPpCb,GOoCQ,GAAa,CcvGc,CAAvB;ArBkCZ,AOsEY,CPtEZ,CAAkB,IAAlB,AOsEY,CPtEZ,GOsEgB,EAAE,CAAC,KAAD,CADG;AQzFb,AMPI,AdkGA,MAAA,EQ3FA,EMPI,CAAC,IAAI,AdkGA,EAAE,EclGE,GAAC,CAAd,EAAiB,INOI,GAAG,EAA5B;AMNQ,Ad+FK,KAAb;AQxFA,AMNQ,QAAA,CNMH,IAAI,CAAC,AMNI,CAAC,ENMF,CAAb,EAAgB,CAAC,GAAG,CMNZ,CAAkB,ENM1B,EAA0B,AMNlB,CNMmB,AMNI,ENM/B,EAA+B,AMNI,aAAJ,CAAS,gBAAgB,CAAC,CAAC,GAAG,IAAJ,GAAW,CAAZ,CAAzB,EAAyC,CAAzC,EAA4C,EAA5C,EAAgD,MAAhD,CAAvB;ANOJ,AMNC,AdiGR,OcpGO,MAGO;ANOP,AMNI,UNME,CAAC,GAAG,UAAU,CAAC,QAAX,CAAoB,CAApB,GAAwB,UAAU,CAAC,aAAX,CAAyB,CAAzB,EAA4B,CAA9D,CAF2B,CAEsC;AACjE,AMNI,AdkGZ,EAAA,MclGY,GdkGZ,CAAA,EclGkB,CAAC,MdkGnB,CAAA,GclGY,CAAkB,IAAlB,AdkGZ,CclGmC,EdkGnC,EclGuC,QdkG9B,GAAT,EclGmC,AdkGG,CclGM,MAAT,EAAiB,CAAjB,EAAoB,CACvC;AAAC,AdkGb,QAAM,CAAC,CclGM,CAAC,CdkGJ,CclGM,IdkGD,EclGO,CAAC,CdkGb,CAAU,CAAV,GAAc,EclGR,CAAgB,CAAhB,AdkGhB,CADkC,CAElC,CcnGoC,CAAxB;ANMR,AMNmC,UNM7B,AMN6B,CAAC,EAAE,GNM1B,GAAG,AMN6B,CAAC,GNM1B,KMNmB,CAAgB,CAAhB,GAAoB,SNM3C,CAAe,iBAAiB,CAAC,CAAC,GAAC,IAAH,CAAjB,CAA0B,QAA1B,CAAmC,CAAnC,GAAuC,CAAtD,EAAyD,CAAC,GAAG,EAA7D,EAAiE,EAAjE,CAAf,CAJ2B,CAK3B;AMPQ,AdoGZ,IAAA,GAAG,CAAC,CcrG+C,EAEvC,MdmGZ;AQ5FI,AMPS,AdoGb,IAAA,EQ7FI,CR6FD,CAAC,EcpGS,CAAC,CNOJ,CAAC,AMPK,CdoGhB,CAAW,CAAX,EAAc,CcpGQ,CAAC,GNOnB,AR6Fe,CQ7FG,GR6FR,CQ7FV,AMPY,AdoGQ,CQ7FG,AMPK,AdoGlB,CcpGE,EdoGY,CQ7FG,AMPK,AdoGP,EcpGjB,CdoGZ,UQ7F2B,CAAS,UAAT,EAAqB,IAArB,EAA2B,CAC9C;AAAC,AMR+B,AdqGxC,IAAA,GAAG,CQ7FM,AR6FL,CQ7FM,CMR8B,CNQ5B,AMR6B,EAAE,CdqG3C,CAAW,CAAX,CQ7FkB,CAAC,AR6FL,CcrGmC,CAAC,GdqG/B,GQ7FP,CAAgB,AR6Fd,CQ7FF,AMR+B,AdqGnB,CcrGmC,AdqG7C,CcrG6B,CNQX,CR6FJ,CQ7FpB,AMRuD,AdqGlC,GAA7B;AQ7FoC,AMRxB,AdsGZ,IAAA,GAAG,CQ9FiC,AR8FhC,CQ9FiC,AMVc,ENUZ,AMP3B,GdqGZ,GQ9F6C,CAAC,QAAP,CAAgB;AAA/C,AMPK,ONMyC,EAE9C,CMRK,CAAC,EAAE,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAxB;ANQH,AMR+B,AduGxC,QQ/FS,AR+FL,CQ/FM,CMR8B,CNQ5B,AMR6B,EAAE,AduGlC,IQ/FS,CAAC,AR+Ff,CcvG6C,AduGlC,CcvGmC,MNQtC,CAAgB,CAAhB,AMR+B,AduGvC,CcvGuD,ENQ3B,EAAxB,AR+FqB,CAA7B,EAAgC;AQ/FI,AMRxB,AdwGR,QQhGgC,CAAC,AMXc,CAApB,CNWQ,CMP5B,KNOkC,CAAC,AMXf,CAAvB,ONW+B,CAAgB,CAAhB,GAAoB;AAAnD,AMNH,AduGD,MAAA,CQnGkD,AM7BrB,CA2B7B,CNKI,ARgGD,CAAC,SAAJ;AQhGK,ARiGL,MAAA,EQjGK,CAAC,ARiGH,CAAC,CQjGI,KRiGR,CAAW,CAAX,EAAc,CQjGI,ARiGH,CQjGI,ERiGD,GAAlB,GQjGQ,CAAoB,CAApB,GAAwB,UAAU,CAAC,IAAX,CAAgB,CAAhB,GAAkB,CAA9C;AAAiD,ARkGrD,MAAA,EQlGqD,CAAC,ARkGnD,CAAC,CQlGoD,KRkGxD,CQlG8D,ARkGnD,CQlGoD,ARkGnD,GAAG,CAAC,IQlGwC,ARkGxD,CQlGwE,CAAhB,ARkGlC,CAAC,EQlGqD,CRkGlD,CAAC,IAA3B;AQlGI,AMJJ,AduGA,MAAA,CQtGkD,EAI9C,ARkGD,CcvGC,AduGA,CcvGC,GAAG,EduGR,CAAW,CcvGD,AduGE,GAAG,CcvGP,GAAO,AduGf,CcvGA,CduGqB,CcvGH,AduGI,GAAG,CAAC,IAA1B;AQlGK,AMJD,AduGJ,MAAA,EQnGK,AMJD,CNIE,ARmGH,CAAC,CQnGI,GMJE,CAAC,IduGX,EQnGkB,CAAC,GMJf,CAAkB,INId,AMJJ,CNIwB,AMJD,CNInB,GAAwB,AMJD,UNIW,CAAC,EMJhB,CAAS,CNIJ,CAAgB,CAAhB,GAAkB,CAA9C,QMJ+C,CAAC,CAAC,GAAC,CAAH,CAAxB,EAA+B,CAA/B,EAAkC,CACrD;ANG6C,AMH5C,AduGT,MAAA,EQpGqD,CAAC,ARoGnD,CcvGM,AduGL,CQpGoD,AMH9C,EAAE,GduGZ,GcvGkB,CAAC,CNG+C,CAAC,MMHvD,CAAgB,CNG4B,AMH5C,CNGgE,EMH5C,CAAxB;ANGJ,AMH+B,AdwGnC,MAAA,CQzGkD,CAA3B,CRyGpB,CQpGA,AMJgC,AdwG/B,CcxGgC,EAAE,CdwGtC,KcxG4C,CAAC,QAAP,CAAgB,CAAhB,GAAoB;ANItD,AMJI,Ad0GR,MAAA,EQtGI,CMLyD,Ad2G1D,CAAC,CczGI,ENGC,EAAE,IRsGX;AQtGG,AMHM,Ad0GT,MAAA,CQ5GuB,CAAvB,CR4GG,CQlHwB,AMQlB,Ad0GL,CQtGJ,AMJU,EAAE,Ad0GZ,CAAQ,CAAR,EAAW,CAAC,Cc1GM,CAAC,Cd0GJ,GAAf,EAAoB,CAAC,Cc1GT,CAAgB,CAAhB,Ad0GY,Gc1GQ,Ad0GhC,Ec1GQ,Ad0GqB,CAA7B,EAAgC,IAAE,IAAI,CAAC,EAAvC;Ac1GoC,Ad2GpC,MAAA,GAAG,Cc3GiC,Ad2GhC,Cc3GiC,EAAE,Gd2GvC,Gc3G6C,CAAC,QAAP,CAAgB,CAAhB,GAAoB;ANK3D,AMLQ,Ad4GR,MAAA,Gc9G6D,Ad8G1D,CQvGG,ARuGF,Cc3GI,Gd2GR,EQvGY,GAAG,iBAAiB,CAAC,CA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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["// Exploration.ts\n//\n// This might be something a little more interesting\n\nimport Component, {StateObject} from './Component';\n\nclass Exploration {\n    public canvas: HTMLCanvasElement;\n    public context: CanvasRenderingContext2D;\n    public components: Array<Component>;\n    // The idea is that all components update their state recursively starting here\n    public outputComponents: Array<Component>;\n\n    public animated: boolean = false; // assume not unless proven otherwise\n\n    public paused: boolean = false;\n    public updateTime: number = 1000;\n    public lastUpdated: number = Date.now();\n    public animationFrame: any;\n\n    // Can possibly have an afterRender property\n    public afterRender: (() => void) | null | undefined;\n\n    constructor(canvas: HTMLCanvasElement, width: number = 400, height: number = 400) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d')!;\n        this.components = [];\n        this.outputComponents = [];\n\n        // sizing\n        canvas.width = width;\n        canvas.height = height;\n\n        // TS-safe way of putting a random debug name\n        let id = Math.floor(Math.random() * 1e6);\n        Object.defineProperty(window, \"exploration\" + id, {\n            value: this,\n        });\n        console.log(id, this);\n    }\n\n    // todo: addComponent() maybe?\n\n    render(isDark: boolean) {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        for (let i = 0; i < this.components.length; i++) {\n            this.context.save();\n            // render wires first\n            const comp = this.components[i];\n            for (let j = 0; j < comp.inputWires.length; j++) {\n                const position = {\n                    x: comp.position.x + comp.inputSockets[j].x,\n                    y: comp.position.y + comp.inputSockets[j].y,\n                };\n                comp.inputWires[j]?.render(this.context, position, isDark);\n            }\n            this.components[i].render(this.context, isDark);\n            this.context.restore();\n        }\n\n        if (typeof this.afterRender === \"function\") {\n            this.afterRender();\n        }\n    }\n\n    onClick(canvasX: number, canvasY: number) {\n        let needsUpdate: boolean = false;\n        for (let i = 0; i < this.components.length; i++) {\n            const component = this.components[i];\n            const offsetX = canvasX - component.position.x;\n            const offsetY = canvasY - component.position.y;\n            if (Math.abs(offsetX) < component.size.x/2 && Math.abs(offsetY) < component.size.y/2 && component.onClick) {\n                needsUpdate ||= component.onClick(offsetX, offsetY);\n            }\n        }\n\n        if (needsUpdate && !this.animated) {\n            // Non-animated ones re-update the whole tree\n            this.update();\n        }\n    }\n\n    pause() {\n        this.paused = true;\n        cancelAnimationFrame(this.animationFrame);\n    }\n\n    resume() {\n        this.paused = false;\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    updateLoop() {\n        // Not paused or turned off, and been long enough since last update\n        if (!this.paused && this.updateTime > 0 && Date.now() - this.lastUpdated > this.updateTime) {\n            this.update();\n        }\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    update() {\n        // call beforeUpdate if needed\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            if (typeof comp.beforeUpdate === \"function\") {\n                comp.beforeUpdate();\n            }\n        }\n\n        // Recursively loop backwards through the tree\n        // stores a hash of component indices because we have to check the same component multiple times\n        // We hash anything that is listed as an output component\n\n        const visitedNodes: {[i: number]: boolean} = {};\n        const savedState = [];\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            const comp = this.outputComponents[i];\n            let old: boolean[] = [];\n            for (let j = 0; j < comp.state.bits.length; j++) {\n                old.push(comp.state.bits[j]);\n            }\n            savedState.push({bits: old});\n        }\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            this.updateComponent(this.outputComponents[i], visitedNodes, savedState);\n        }\n\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            //console.log(\"After Update: \", this.outputComponents[i].position, savedState[i].bits, this.outputComponents[i].state.bits)\n        }\n\n        //console.warn(\"UPDATE FINISHED\");\n\n        this.lastUpdated = Date.now();\n    }\n\n    updateComponent(component: Component,\n        visitedNodes: {[i: number]: boolean},\n        savedState: StateObject[]) {\n        let index = this.components.indexOf(component); // if this gets too slow I can add IDs\n        if (!visitedNodes[index]) {\n            visitedNodes[index] = true; // prevents infinite loops, although cyclic explorations are invalid anyway\n            // has not been visited, so we need to evaluate it\n            //console.log(\"visiting \" + String(index), component);\n            let parentBits = [];\n            for (let i = 0; i < component.inputWires.length; i++) {\n                const wire = component.inputWires[i];\n                if (wire) {\n                    const to = wire.toComponent;\n                    if (!to) {\n                        parentBits.push(false); // null = 0\n                    } else {\n                        this.updateComponent(wire.toComponent, visitedNodes, savedState);\n\n\n                        // all we need is this one bit\n                        // (note: null or missing wires give a 0)\n                        // did we save it?\n                        const ocIndex = this.outputComponents.indexOf(to);\n                        if (ocIndex >= 0) {\n                            //console.log(\"Using saved state\", ocIndex, savedState[ocIndex].bits);\n                            // Use the stored state instead of updating immediately\n                            parentBits.push(savedState[ocIndex].bits[wire.toOutput]);\n                        } else {\n                            parentBits.push(to.state.bits[wire.toOutput]);\n                        }\n                    }\n                } else {\n                    // no wire = 0\n                    parentBits.push(false);\n                }\n            }\n            // Update the component's state.\n            component.state.bits = component.evaluate(parentBits);\n        }\n    }\n};\n\nexport default Exploration;\n","// dark.ts\n\n// order of params is important here\nfunction getBitColor(bit: boolean, dark: boolean) {\n    if (dark) {\n        return bit ? \"#00aa00\" : \"#770000\";\n    } else {\n        return bit ? \"#33ff33\" : \"#990000\";\n    }\n}\n\nfunction getApplianceColor(dark: boolean) {\n    return dark ? \"#333333\" : \"#cccccc\";\n}\n\nfunction getStrokeColor(dark: boolean) {\n    return dark ? \"#aaa\" : \"#222\";\n}\n\nfunction getTextColor(dark: boolean) {\n    return dark ? \"#888\" : \"#333\";\n}\n\nexport {getBitColor, getApplianceColor, getStrokeColor, getTextColor};\n","// InputBit.ts\n// Can be clicked to change state\n\nimport Component from './Component';\nimport { getBitColor, getStrokeColor } from './dark';\n\nclass InputBit implements Component {\n    state: {bits: boolean[]};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: [];\n    inputWires: [];\n    outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // If this bit is toggled, all linked bits are toggled as well\n    linkedBits: InputBit[];\n\n    constructor(x: number, y: number, value: boolean = false, size: number = 20) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            bits: [value],\n        };\n\n        this.inputSockets = []; // it is input, it needs no input from elsewhere\n        this.inputWires = [];\n        this.outputSockets = [\n            {x: 0, y: 0}\n        ];\n\n        this.linkedBits = [];\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.fillStyle = getBitColor(this.state.bits[0], isDark);\n        ctx.strokeStyle = \"2px solid \" + getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.size.x / 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n    };\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        console.log(\"[InputBit] clicked\");\n        this.state.bits[0] = !this.state.bits[0];\n\n        // also update everything else\n        for (let otherBit of this.linkedBits) {\n            otherBit.state.bits[0] = this.state.bits[0];\n        }\n        // bits will be updated when everything is\n        return true;\n    };\n\n    evaluate(_: boolean[]): boolean[] {\n        return this.state.bits;\n    }\n}\n\nexport default InputBit;\n","// OutputBit.ts\n// Need a good way to distinguish from InputBits\n\nimport Component from './Component';\nimport { getBitColor } from './dark';\nimport Wire from './Wire';\n\nclass OutputBit implements Component {\n    state: { bits: boolean[] };\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: Wire[];\n    beforeUpdate: undefined;\n\n    constructor(x: number, y: number, size: number = 20) {\n        this.position = { x: x, y: y };\n        this.size = { x: size, y: size };\n        this.state = { bits: [false] };\n\n        this.inputSockets = [{x: 0, y: 0}];\n        // this might be convenient\n        this.outputSockets = [{x: 0, y: 0}];\n        this.inputWires = [];\n    }\n    render(ctx: CanvasRenderingContext2D, isDark: boolean): void {\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(left, top, this.size.x, this.size.y);\n        ctx.fillStyle = getBitColor(this.state.bits[0], isDark);\n        ctx.fillRect(\n            left + this.size.x * 0.1,\n            top + this.size.y * 0.1,\n            this.size.x * 0.8,\n            this.size.y * 0.8\n        );\n    };\n    onClick: undefined;\n    evaluate(bits: boolean[]): boolean[] {\n        //console.log(bits);\n        //console.log(\"evaluating\", this.position);\n        return bits;\n    };\n}\n\nexport default OutputBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport { getBitColor, getStrokeColor, getTextColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Adder implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        // carry input\n        this.inputSockets.push({\n            x: this.size.x * 3/8,\n            y: 0,\n        });\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = isDark ? \"#333333\" : \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = isDark ? \"#223388\" : \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            /*ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x, this.position.y + socket.y - 15);*/\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = isDark ? \"#666666\" : \"#333333\";\n            ctx.strokeStyle = getBitColor(this.state.bits[i], isDark);\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += ((wire1 && wire1.toComponent.state.bits[wire1.toOutput]) ? 1 : 0) * (1 << i);\n            num2 += ((wire2 && wire2.toComponent.state.bits[wire2.toOutput]) ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = getTextColor(isDark);\n        ctx.fillText(String(num1) + \" + \" + String(num2), this.position.x, this.position.y);\n\n        const carryWire = this.inputWires[2*this.numBits];\n        if (carryWire && carryWire.get()) {\n            ctx.font = Math.round(textSize*0.5) + \"px monospace\";\n            ctx.fillText(\"(+1 carry in)\", this.position.x, this.position.y + this.size.y*0.25);\n        }\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        // add plus the carry\n        const answer = num1 + num2 + (bits[2*this.numBits] ? 1 : 0);\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) > 0;\n        }\n        if (this.position.x === 430 && this.numBits === 4) console.log(\"Adder gives \", answerBits, \"with input\", bits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        let inputs = [];\n        for (let i = 0; i <= 2*this.numBits; i++) {\n            const wire = this.inputWires[i];\n            inputs.push(wire ? wire.get() : false);\n        }\n        console.log(\"num inputs: \", inputs.length);\n        this.state.bits = this.evaluate(inputs);\n    }\n}\n\nexport default Adder;\n","// Wire.ts\n\nimport Component from \"./Component\"\n\ntype WireOptions = {color?: string, darkColor?: string};\n\n// not sure a wire really is a component but it uses them\nclass Wire {\n    // I use \"from\" and \"to\" because \"input\" and \"output\" are ambiguous\n    toComponent: Component | null | undefined;\n    toOutput: number;\n\n    color: string | undefined;\n    darkColor: string | undefined;\n\n    // in case you want the wire to bend\n    waypoints: Array<{x: number, y: number, node?: boolean}> = [];\n\n    constructor(\n        to: Component | null | undefined,\n        toOutput: number,\n        waypoints: {x: number, y: number, node?: boolean}[] = [],\n        options: WireOptions = {}\n    ) {\n        this.toComponent = to;\n        this.toOutput = toOutput;\n        this.waypoints = waypoints;\n\n        this.color = options.color;\n        this.darkColor = options.darkColor;\n    }\n\n    get(): boolean {\n        // empty wire is zero\n        if (!this.toComponent) return false;\n        // coerce undefined to false\n        return this.toComponent.state.bits[this.toOutput] || false;\n    }\n\n    addWaypoint(x: number, y: number) {\n        this.waypoints.push({x: x, y: y});\n    }\n\n    render(ctx: CanvasRenderingContext2D, from: {x: number, y: number}, isDark: boolean) {\n        if (!this.toComponent) return;\n        ctx.save();\n        if (isDark && this.darkColor) {\n            ctx.strokeStyle = this.darkColor;\n        } else if (this.color) {\n            ctx.strokeStyle = this.color;\n        } else {\n            ctx.strokeStyle = (isDark ? \"#606468\" : \"#333\");\n        }\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        for (let i = 0; i < this.waypoints.length; i++) {\n            ctx.lineTo(this.waypoints[i].x, this.waypoints[i].y);\n        }\n        const endOffset = this.toComponent.outputSockets[this.toOutput];\n        if (!endOffset) {\n            console.error(this, this.toComponent, this.toOutput);\n        }\n        ctx.lineTo(endOffset.x + this.toComponent.position.x, endOffset.y + this.toComponent.position.y);\n        ctx.stroke();\n\n        ctx.lineWidth = 6;\n        for (let i = 0; i < this.waypoints.length; i++) {\n            if (this.waypoints[i].node) {\n                ctx.beginPath();\n                ctx.arc(this.waypoints[i].x, this.waypoints[i].y, 1, 0, 2*Math.PI);\n                ctx.stroke();\n            }\n        }\n        ctx.restore();\n    }\n}\n\nexport default Wire;\n","// Gates.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nabstract class Gate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number, rotation: number, bits: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.2*sine),\n                },\n                {\n                    x: size * (0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.2*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.4*sine,\n                y: size * 0.4*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    beforeUpdate: undefined;\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        return false;\n    };\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#ccc\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        this.drawGate(ctx);\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.6) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    }\n\n    abstract evaluate(bits: boolean[]): boolean[];\n}\n\nclass AndGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"&\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.moveTo(this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.lineTo(this.size.x * 0.4, 0);\n        ctx.arc(0, 0, this.size.x * 0.4, 0, Math.PI);\n        ctx.lineTo(-this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] && bits[1]];\n    };\n}\n\nclass OrGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"O\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] || bits[1]];\n    };\n}\n\nclass XorGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"X\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        // do the or's path...\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n        // and the extra thing\n        ctx.beginPath();\n        ctx.moveTo(s * -0.4, s * -0.5);\n        ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n        ctx.stroke();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] !== bits[1]];\n    };\n}\n\nclass Not extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 1);\n    }\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, s * -0.5);\n        ctx.lineTo(0, 0);\n        ctx.stroke();\n        // triangle for the not\n        ctx.beginPath();\n        ctx.moveTo(0, s * 0.2);\n        ctx.lineTo(s * -0.25, s * -0.35);\n        ctx.lineTo(s * 0.25, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        Gate.prototype.render.call(this, ctx, isDark);\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [!bits[0]];\n    };\n}\n\nexport {AndGate, OrGate, XorGate, Not};\n","// Display.ts\n//\n// Given a set of bits, displays its value as a signed or unsigned integer.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\ntype DisplaySigned = (boolean | \"signmag\" | \"1comp\" | \"2comp\");\n\nclass Display implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public signed: DisplaySigned;\n    public components: Component[];\n    beforeUpdate: undefined;\n\n    // I think this only works on components with exactly 1 output\n    constructor(x: number, y: number, components: Component[], signed: DisplaySigned = false, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size * 2,\n            y: size\n        };\n        this.signed = signed;\n        this.components = components;\n\n        this.state = {\n            // unused\n            bits: [],\n        };\n        // unused, it doesn't use wires because they make visual clutter\n        this.inputSockets = [];\n        this.outputSockets = [];\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    getValue() {\n        let totalValue: number = 0;\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            const value = (comp.state.bits[0] ? 1 : 0) << i;\n            // use 2's complement if signed on the last bit\n            if (i == this.components.length - 1) {\n                if (this.signed === \"signmag\") {\n                    // MSB flips sign if on\n                    totalValue *= (value == 0) ? 1 : -1;\n                } else if (this.signed === \"1comp\") {\n                    // 1's complement is equivalent to MSB value -2^n+1\n                    totalValue -= (value ? value - 1 : 0);\n                } else if (this.signed === true || this.signed === \"2comp\") {\n                    // 2's complement is equivalent to MSB value -2^n\n                    totalValue -= value;\n                } else {\n                    // unsigned\n                    totalValue += value;\n                }\n            } else {\n                // all other bits are normal\n                totalValue += value;\n            }\n        }\n        let displayText = String(totalValue);\n        // negative zero\n        if (displayText === \"0\" && this.components[this.components.length - 1].state.bits[0]) {\n            displayText = \"-0\";\n        }\n        return displayText;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#cccccc\";\n        ctx.strokeStyle = isDark ? \"#999\" : \"#000\";\n        ctx.beginPath();\n        ctx.moveTo(left,               top);\n        ctx.lineTo(left + this.size.x, top);\n        ctx.lineTo(left + this.size.x, top + this.size.y);\n        ctx.lineTo(left,               top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // get the state\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.font = Math.round(this.size.y*4/5) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#909396\" : \"#000\";\n\n\n        ctx.fillText(this.getValue(), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(_: boolean[]): boolean[] {\n        return [];\n    }\n}\n\nexport default Display;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 640, 400);\n\n        const adder = new Adder(520, 200, 4);\n        this.components.push(adder);\n\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: bit.position.x + 12.5, y: 120 - i*20},\n                {x: bit.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit);\n\n            const bit2 = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bit2, 0, [\n                {x: bit2.position.x - 12.5, y: 120 - i*20},\n                {x: bit2.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit2);\n        }\n\n        for (let i = 0; i < 5; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 300);\n            output.inputWires.push(new Wire(adder, i, []));\n            this.components.push(output);\n            this.outputComponents.push(output);\n        }\n\n        // colors are nice\n        const blue = {color: \"rgba(96,96,160,1)\"};\n\n        const fakeCarry = new InputBit(370, 200, false, 20);\n        this.components.push(fakeCarry);\n\n        let rightInputA = [];\n        let rightInputB = [];\n        let rightOutput = [];\n        let carryOuts = [];\n        for (let i = 0; i < 4; i++) {\n            const bitA = new InputBit(290 - i*70, 30);\n            rightInputA.push(bitA);\n\n            const bitB = new InputBit(bitA.position.x + 40, 90);\n            rightInputB.push(bitB);\n\n            // full adder\n            const x1 = (bitA.position.x + bitB.position.x)/2;\n            const y1 = bitB.position.y + 60;\n            const and = new AndGate(x1 - 18, y1, 24, 0);\n            and.inputWires.push(new Wire(bitA, 0, []));\n            and.inputWires.push(new Wire(bitB, 0, []));\n            const xor = new XorGate(x1 + 18, y1, 24, 0);\n            xor.inputWires.push(new Wire(bitA, 0, []));\n            xor.inputWires.push(new Wire(bitB, 0, []));\n\n            const outBit = new OutputBit(x1, 300, 20);\n            rightOutput.push(outBit);\n\n            if (i >= 0) {\n                const previous = (i == 0) ? fakeCarry : carryOuts[i-1];\n                // need a second phase of the adder\n                const and2 = new AndGate(x1, y1 + 50, 24, 0);\n                and2.inputWires.push(new Wire(xor, 0, []));\n                and2.inputWires.push(new Wire(previous, 0, [\n                    {x: and2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const xor2 = new XorGate(x1 + 20, y1 + 80, 24, 0);\n                xor2.inputWires.push(new Wire(xor, 0, []));\n                xor2.inputWires.push(new Wire(previous, 0, [\n                    {x: xor2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const or2 = new OrGate(x1 - 15, y1 + 80, 24, 0);\n                or2.inputWires.push(new Wire(and, 0, []));\n                or2.inputWires.push(new Wire(and2, 0, []));\n\n                carryOuts[i] = or2;\n                outBit.inputWires.push(new Wire(xor2, 0, []));\n                this.components.push(or2, and2, xor2);\n            } else {\n                carryOuts[i] = and;\n                outBit.inputWires.push(new Wire(xor, 0, []));\n            }\n\n            this.components.push(and, xor, outBit);\n        }\n\n        const finalCarry = new OutputBit(30, 250, 20);\n        finalCarry.inputWires.push(new Wire(carryOuts[3], 0, []));\n        rightOutput.push(finalCarry);\n\n        this.components.push(finalCarry, ...rightInputA, ...rightInputB);\n\n        const displayA = new Display(35, 30, rightInputA);\n        const displayB = new Display(35, 90, rightInputB);\n        const displayResult = new Display(200, 350, rightOutput, false, 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...rightOutput);\n    }\n}\n\nexport default AdderExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderFailExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 170, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 105 - i*15;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: 105 - i*15},\n                {x: bitA.position.x, y: 105 - i*15},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: 105 - i*15},\n                {x: bitB.position.x, y: 105 - i*15},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"signmag\");\n        const displayB = new Display(365, 30, inputB, \"signmag\");\n        const displayResult = new Display(320, 260, outputBits, \"signmag\", 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default AdderFailExploration;\n","// Text.ts\n//\n// Simple text display\n\nimport Component from './Component';\n\ninterface TextOptions {\n    color?: string | (() => string);\n}\n\nclass Text implements Component {\n    state = {bits: []};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets = [];\n    outputSockets = [];\n    inputWires = [];\n    onClick = undefined;\n    evaluate = () => [];\n    beforeUpdate = undefined;\n\n    text: string | (() => string);\n    options: TextOptions;\n\n    constructor(x: number, y: number, size: number, text: string | (() => string), options: TextOptions = {}) {\n        this.position = {x: x, y: y};\n        this.size = {x: 0, y: size};\n        this.text = text;\n        this.options = options;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n        const message = (typeof this.text === \"function\" ? this.text() : this.text);\n        ctx.font = `${this.size.y}px monospace`;\n        // if function, call it; if string, use it; if undefined, default to #333\n        ctx.fillStyle = (\n            typeof this.options.color === \"function\" ? this.options.color() :\n            typeof this.options.color === \"string\" ? this.options.color :\n            (isDark ? \"#909396\" : \"#333\"));\n        // positioning\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(message, this.position.x, this.position.y);\n        ctx.restore();\n    }\n}\n\nexport default Text;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass BinaryExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30, String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, false, 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default BinaryExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport { getApplianceColor, getStrokeColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass ChoiceGate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size*2,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n        const offset = size * 0.5;\n        this.inputSockets = [\n            {x: -this.size.x * 1/3, y: 0},\n            {x: -offset, y: -this.size.y/2},\n            {x: +offset, y: -this.size.y/2}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.strokeStyle = getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.size.x*1.0, 0);\n        ctx.lineTo(this.size.x*0.67, this.size.y);\n        ctx.lineTo(this.size.x*0.33, this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // red input\n        const sx = this.size.x;\n        ctx.fillStyle = \"rgb(0, 204, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.25, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n        ctx.fillStyle = \"rgb(153, 0, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.75, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] ? bits[1] : bits[2]];\n    }\n}\n\nexport default ChoiceGate;\n","// NotSwitch.ts\n//\n// Switch between NOT gate and simple wire\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\n// NOTE: Make this abstract\n\nabstract class UserGate implements Component {\n    public state: {\n        bits: boolean[],\n        whichGate: number,\n    };\n    public numGates: number;\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    constructor(x: number, y: number, size: number, rotation: number, bits: number, numGates: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        };\n        this.numGates = numGates;\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.15*sine),\n                },\n                {\n                    x: size * (0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.15*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.5*sine,\n                y: size * 0.5*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    onClick(offsetX: number, offsetY: number): boolean {\n        // rotate them\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // the sizes are both the same\n        const realX = (offsetX * cosine + offsetY * sine) / this.size.x;\n        const realY = (offsetY * cosine - offsetY * sine) / this.size.y;\n        if (-0.3 < realY && realY < 0.3) {\n            if (-0.5 < realX && realX < -0.3) {\n                this.state.whichGate = (this.state.whichGate - 1 + this.numGates) % this.numGates;\n                return true;\n            }\n            if (0.3 < realX && realX < 0.5) {\n                this.state.whichGate = (this.state.whichGate + 1) % this.numGates;\n                return true;\n            }\n        }\n        return false;\n    };\n    beforeUpdate: undefined;\n\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#222\" : \"#ddd\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        // this is new\n        const sx = this.size.x, sy = this.size.y;\n        ctx.beginPath();\n        ctx.moveTo(0,        sy * -0.5);\n        ctx.lineTo(sx *  0.4, sy * -0.5);\n        ctx.arcTo (sx *  0.5, sy * -0.5, sx *  0.5, sy * -0.4, sy * 0.1);\n        ctx.lineTo(sx *  0.5, sy *  0.4);\n        ctx.arcTo (sx *  0.5, sy *  0.5, sx *  0.4, sy *  0.5, sy * 0.1);\n        ctx.lineTo(sx * -0.4, sy *  0.5);\n        ctx.arcTo (sx * -0.5, sy *  0.5, sx * -0.5, sy *  0.4, sy * 0.1);\n        ctx.lineTo(sx * -0.5, sy * -0.4);\n        ctx.arcTo (sx * -0.5, sy * -0.5, sx * -0.4, sy * -0.5, sy * 0.1);\n        ctx.closePath();\n\n        ctx.stroke();\n        ctx.fill();\n\n        this.drawGate(ctx);\n\n        // arrow buttons\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.beginPath();\n        ctx.moveTo(sx * 0.5, 0);\n        ctx.lineTo(sx * 0.3, sy * -0.3);\n        ctx.lineTo(sx * 0.3, sy * +0.3);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.moveTo(sx * -0.5, 0);\n        ctx.lineTo(sx * -0.3, sy * -0.3);\n        ctx.lineTo(sx * -0.3, sy * +0.3);\n        ctx.fill();\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.4) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    };\n\n    abstract evaluate(bits: boolean[]): boolean[];\n};\n\n// binary, as in operator, as in takes two inputs (and/or/xor)\nclass BinarySwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 2, 3);\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.6;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, this.size.y * +0.5);\n        const xOffset = this.size.x * 0.15;\n        ctx.moveTo(-xOffset, 0);\n        ctx.lineTo(-xOffset, this.size.y * -0.5);\n        ctx.moveTo(xOffset, 0);\n        ctx.lineTo(xOffset, this.size.y * -0.5);\n        ctx.stroke();\n\n        switch (this.state.whichGate) {\n            case 0: // and\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, -s * 0.4);\n                ctx.lineTo(s * 0.4, 0);\n                ctx.arc(0, 0, s * 0.4, 0, Math.PI);\n                ctx.lineTo(-s * 0.4, -s * 0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n\n                this.symbol = \"&\";\n                break;\n            case 1: // or\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n\n                this.symbol = \"O\";\n                break;\n            case 2: // xor\n                // do the or's path...\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n                // and the extra thing\n                ctx.beginPath();\n                ctx.moveTo(s * -0.4, s * -0.5);\n                ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n                ctx.stroke();\n                this.symbol = \"X\";\n                break;\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        switch (this.state.whichGate) {\n            case 0:\n                return [bits[0] && bits[1]];\n            case 1:\n                return [bits[0] || bits[1]];\n            case 2:\n                return [bits[0] !== bits[1]];\n            default:\n                throw new Error(`Invalid state ${this.state.whichGate}`);\n        }\n    };\n}\n\nclass NotSwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 1, 2);\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        }\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.75;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, this.size.y * -0.5);\n        ctx.lineTo(0, this.size.y * +0.5);\n        ctx.stroke();\n\n        if (this.state.whichGate === 1) {\n            // triangle for the not\n            ctx.beginPath();\n            ctx.moveTo(0, s * 0.2);\n            ctx.lineTo(s * -0.25, s * -0.35);\n            ctx.lineTo(s * 0.25, s * -0.35);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n            ctx.stroke();\n            ctx.fill();\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        return [(this.state.whichGate === 1) ? !bits[0] : bits[0]];\n    }\n}\n\nexport {NotSwitch, BinarySwitch};\n","// AnswerChecker.ts\n//\n// Runs through all possible combinations of given input bits.\n\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Component, { StateObject } from './Component';\nimport Wire from './Wire';\nimport Exploration from './Exploration';\nimport { getApplianceColor } from './dark';\n\n\ntype CheckFunctionType = (arg0: boolean[]) => boolean[];\n\nclass AnswerChecker implements Component {\n    state: StateObject;\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: (Wire | null)[];\n    beforeUpdate: (() => void) | null | undefined;\n\n    timer: number;\n\n    // arrays mean you can have 2 inputs always be the same\n    inputs: (InputBit | InputBit[])[];\n    outputs: OutputBit[];\n    checkFunction: CheckFunctionType;\n    exploration: Exploration;\n\n    constructor(exploration: Exploration, x: number, y: number, inputs: (InputBit | InputBit[])[], outputs: OutputBit[], checkFunction: CheckFunctionType) {\n        this.exploration = exploration;\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: 160,\n            y: 90,\n        };\n        this.inputSockets = [];\n        this.outputSockets = [];\n        this.inputWires = [];\n\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.checkFunction = checkFunction;\n\n        this.state = {\n            bits: [],\n\n            running: false,\n            counter: -1,\n            win: false,\n            lose: false,\n            loseCorrectAnswer: [],\n            loseWrongAnswer: [],\n        };\n\n        this.timer = -1;\n    }\n\n    onClick(offsetX: number, offsetY: number) {\n        if (offsetX >= -60 && offsetX <= 60 && Math.abs(offsetY + 17) <= 20) {\n            this.launch();\n            return true;\n        }\n\n        return false;\n    }\n\n    launch() {\n        if (this.state.running) {\n            clearTimeout(this.timer);\n            this.state.running = false;\n            this.state.counter = -1;\n        } else {\n            this.state.running = true;\n            this.state.win = false;\n            this.state.lose = false;\n            this.state.counter = -1;\n            this.nextTest();\n        }\n    }\n\n    nextTest() {\n        this.state.counter++;\n        console.log(\"testing with\", this.state.counter);\n        if (this.state.counter >= (1 << this.inputs.length)) {\n            this.state.win = true;\n            this.state.running = false;\n            return;\n        }\n\n        // set all the bits\n        let inputBits = [];\n        for (let i = 0; i < this.inputs.length; i++) {\n            const bit = Boolean((this.state.counter >> i) & 1);\n            // it's either a single input or an array\n            let array = this.inputs[i];\n            if (array instanceof InputBit) {\n                array = [array];\n            }\n            for (let j = 0; j < array.length; j++) {\n                array[j].state.bits[0] = bit;\n            }\n            inputBits.push(bit);\n        }\n\n        // update the exploration\n        this.exploration.update();\n\n        // check it\n        const outputBits = this.checkFunction(inputBits);\n        for (let i = 0; i < this.outputs.length; i++) {\n            if (outputBits[i] != this.outputs[i].state.bits[0]) {\n                this.state.lose = true;\n                this.state.running = false;\n                this.state.loseCorrectAnswer = outputBits;\n                this.state.loseWrongAnswer = this.outputs.map(x => x.state.bits[0]);\n                return;\n            }\n        }\n\n        // if it survived...\n        let timeDelay = 1000;\n        let escalation = 2;\n        while (escalation < this.state.counter-1) {\n            escalation++;\n        }\n        timeDelay = 1000 / (escalation - 1);\n        this.timer = window.setTimeout(this.nextTest.bind(this), timeDelay);\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // test button\n        // red = stopped or failed, green = win, yellow = running\n        if (this.state.win) {\n            ctx.fillStyle = isDark ? \"#228822\" : \"#33cc33\";\n            ctx.strokeStyle = isDark ? \"#006600\" : \"#009900\";\n        } else if (this.state.running) {\n            ctx.fillStyle = isDark ? \"#999922\" : \"#eeee22\";\n            ctx.strokeStyle = isDark ? \"#666600\" : \"#999900\";\n        } else {\n            ctx.fillStyle = isDark ? \"#993333\" : \"#cc3333\";\n            ctx.strokeStyle = isDark ? \"#660000\" : \"#990000\";\n        }\n        ctx.lineWidth = 6;\n        ctx.beginPath();\n        const y = 28;\n        r = 30;\n        ctx.moveTo(80, y-20);\n        ctx.lineTo(120, y-20);\n        ctx.arc(120, y, 20, -Math.PI/2, Math.PI/2);\n        ctx.lineTo(40, y+20);\n        ctx.arc(40, y, 20, Math.PI/2, 3*Math.PI/2);\n        ctx.closePath();\n\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.fillStyle = isDark ? \"#999\" : \"#000\";\n        ctx.font = \"30px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(this.state.running ? \"STOP\" : \"TEST\", 80, y+9);\n\n        ctx.font = \"20px sans-serif\";\n        let message: string;\n        if (this.state.win) {\n            message = \"Good job!\";\n        } else if (this.state.lose) {\n            message = \"\";\n            ctx.font = (this.inputs.length < 4 ? \"16\" : \"14\") + \"px sans-serif\";\n            ctx.fillText(\"Oops! That should\", 80, 67);\n            const correct = this.state.loseCorrectAnswer.map(Number).join(\"\");\n            const wrong = this.state.loseWrongAnswer.map(Number).join(\"\");\n            ctx.fillText(\"be [\" + correct + \"], not [\" + wrong + \"].\", 80, 84);\n        } else if (this.state.running) {\n            message = `${this.state.counter + 1} of ${1 << this.inputs.length}`;\n        } else {\n            message = \"are you ready?\";\n            ctx.font = \"18px sans-serif\";\n        }\n        ctx.fillText(message, 80, 76);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]) {\n        return [];\n    }\n}\n\nexport default AnswerChecker;\n","// ChoiceExploration\n//\n// Exploration that shows how a multiplexer works.\n// I called it a \"choice gate\" because \"multiplexer\" and \"multiplier\" look too similar.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport ChoiceGate from './ChoiceGate';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\nimport { BinarySwitch, NotSwitch } from './UserGates';\nimport AnswerChecker from './AnswerChecker';\n\nclass ChoiceExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputChoice = new InputBit(20, 100, false, 30);\n        const inputIf = new InputBit(90, 70, false, 30);\n        const inputElse = new InputBit(150, 70, false, 30);\n\n\n        const inverterLeft = new NotSwitch(50, 135, 40, 0);\n        this.components.push(inverterLeft);\n        inverterLeft.inputWires.push(new Wire(inputChoice, 0, [\n            {x: inverterLeft.position.x, y: inputChoice.position.y, node: true},\n            {x: inputChoice.position.x, y: inputChoice.position.y},\n        ]));\n\n        const inverterRight = new NotSwitch(125, 135, 40, 0);\n        this.components.push(inverterRight);\n        inverterRight.inputWires.push(new Wire(inputChoice, 0, [\n            {x: inverterRight.position.x, y: inputChoice.position.y},\n            {x: inputChoice.position.x, y: inputChoice.position.y},\n        ]));\n\n        // recursive components are a bit weird\n        const andIf = new BinarySwitch(inverterLeft.position.x + 9, 210, 60, 0);\n        const andElse = new BinarySwitch(141, 210, 60, 0);\n        const or = new BinarySwitch(100, 300, 60, 0);\n\n        andIf.inputWires = [\n            new Wire(inverterLeft, 0, []),\n            new Wire(inputIf, 0, [\n                {x: andIf.position.x + 9, y: 170},\n                {x: inputIf.position.x, y: 170},\n            ]),\n        ];\n        andElse.inputWires = [\n            new Wire(inverterRight, 0, [\n                {x: andElse.position.x - 9, y: 170},\n                {x: inverterRight.position.x, y: 170},\n            ]),\n            new Wire(inputElse, 0, [\n                {x: andElse.position.x + 9, y: 170},\n                {x: inputElse.position.x, y: 170},\n            ]),\n        ];\n        or.inputWires = [\n            new Wire(andIf, 0, []),\n            new Wire(andElse, 0, []),\n        ];\n        this.components.push(andIf, andElse, or);\n        this.components.push(inputChoice, inputIf, inputElse);\n\n        // for people to debug their circuits\n        const helpLeft = new OutputBit(andIf.position.x, andIf.position.y + 35, 10);\n        helpLeft.inputWires.push(new Wire(andIf, 0));\n        const helpRight = new OutputBit(andElse.position.x, andElse.position.y + 35, 10);\n        helpRight.inputWires.push(new Wire(andElse, 0));\n        this.components.push(helpLeft, helpRight);\n        this.outputComponents.push(helpLeft, helpRight);\n\n        const output = new OutputBit(100, 345, 30);\n        output.inputWires.push(new Wire(or, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputChoice2 = new InputBit(240, 160, false, 30);\n        const inputIf2 = new InputBit(280, 120, false, 30);\n        const inputElse2 = new InputBit(320, 120, false, 30);\n        const choice = new ChoiceGate(300, 200, 40);\n        const output2 = new OutputBit(300, 250, 30);\n        choice.inputWires.push(new Wire(inputChoice2, 0, [\n            {x: inputChoice2.position.x, y: choice.position.y},\n        ]));\n        choice.inputWires.push(new Wire(inputIf2, 0));\n        choice.inputWires.push(new Wire(inputElse2, 0));\n        output2.inputWires.push(new Wire(choice, 0));\n\n        this.components.push(choice, output2, inputChoice2, inputIf2, inputElse2);\n        this.outputComponents.push(output2);\n\n        const checker = new AnswerChecker(this, 310, 350, [\n            [inputChoice, inputChoice2],\n            [inputIf, inputIf2],\n            [inputElse, inputElse2]\n        ], [output], function(bits: boolean[]) {\n            return [bits[0] ? bits[1] : bits[2]];\n        });\n        this.components.push(checker);\n        this.outputComponents.push(checker);\n    }\n\n}\n\nexport default ChoiceExploration;\n","// Clock.ts\n//\n// These clocks can have an arbitrary period.\n\nimport Component from \"./Component\";\nimport { getApplianceColor, getBitColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Clock implements Component {\n    public state: {bits: boolean[], clock: number};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    //\n    constructor(x: number, y: number, width: number = 50, height: number = 50) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n        // because .fill() isn't supported?!\n        const bitArray: boolean[] = Array(2).map(_ => false);\n        this.state = {\n            bits: bitArray,\n            clock: -1,\n        };\n        this.numBits = 2;\n        // \"power supply\" or more accurately a way to reset the clock\n        this.inputSockets = [\n            {x: 0, y: -this.size.y/2 - 1},\n        ];\n\n        this.outputSockets = [];\n        const spacing = width / 2;\n        for (let i = 0; i < 2; i++) {\n            this.outputSockets.push({\n                x: (i - 1/2) * spacing,\n                y: this.size.y/2,\n            });\n        }\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // power\n        ctx.translate(w/2, 0); // move origin to top-middle\n        ctx.beginPath();\n        ctx.moveTo(2, -5);\n        ctx.lineTo(2, -1);\n        ctx.lineTo(-2, -1);\n        ctx.lineTo(-2, -5);\n        ctx.stroke();\n\n        // clock\n        ctx.fillStyle = isDark ? \"#555555\" : \"#e0e0e4\";\n        r = Math.min(w/3, h/3);\n        ctx.translate(0, h/2); // move origin to center\n        ctx.beginPath();\n        ctx.arc(0, 0, r, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.stroke();\n\n        // ticks\n        ctx.save();\n        const angle = 2*Math.PI / this.numBits;\n        for (let i = 0; i < this.numBits; i++) {\n            ctx.beginPath();\n            ctx.moveTo(0, -r);\n            ctx.lineTo(0, -r * 0.8 + 1);\n            ctx.stroke();\n\n            ctx.rotate(angle);\n        }\n        ctx.restore();\n\n        // hand\n        ctx.save();\n        ctx.rotate(this.state.clock * angle);\n        ctx.lineWidth *= 3;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(0, r*0.25);\n        ctx.lineTo(0, -r * 0.8);\n        ctx.stroke();\n        ctx.lineWidth *= 5/3;\n        ctx.beginPath();\n        ctx.arc(0, 0, 1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.restore();\n\n        // outputs\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            const socket = this.outputSockets[i];\n            ctx.fillStyle = getBitColor(i == this.state.clock, isDark);\n            ctx.beginPath();\n            ctx.arc(socket.x, socket.y, 8, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // Evaluation: the clock's state is set on\n    evaluate(bits: boolean[]): boolean[] {\n        let result = [];\n        for (let i = 0; i < this.numBits; i++) {\n            result.push(i == this.state.clock);\n        }\n        return result;\n    }\n\n    beforeUpdate() {\n        if (this.inputWires[0]?.get()) {\n            this.state.clock = (this.state.clock + 1) % this.numBits;\n        } else {\n            this.state.clock = -1;\n        }\n    }\n}\n\nexport default Clock;\n","// ClockExploration.ts\n//\n// Exploration of a clock, more meant to illustrate the time-based explorations.\n\nimport Component from './Component';\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\n// pass the components and output components arrays\nfunction makeClock(x: number, y: number, components: Component[], outputComponents: Component[]) {\n    const clock = new Clock(x, y, 100, 60);\n    const powerButton = new InputBit(x, y - 100, true, 40);\n    clock.inputWires.push(new Wire(powerButton, 0));\n    components.push(clock, powerButton);\n    for (let i = 0; i < 2; i++) {\n        const output = new OutputBit(x + clock.outputSockets[i].x, y + 100);\n        output.inputWires.push(new Wire(clock, i));\n        components.push(output);\n        outputComponents.push(output);\n    }\n}\n\nclass ClockExploration extends Exploration {\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 300);\n        makeClock(150, 150, this.components, this.outputComponents);\n    }\n\n}\n\nexport default ClockExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport { getBitColor, getStrokeColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass RegisterBit implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        // [0] is the off switch and [1] is the on switch\n        const offset = size * 0.45;\n        this.inputSockets = [\n            {x: -offset, y: -offset},\n            {x:  offset, y: -offset}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getBitColor(this.state.bits[0], isDark);\n        ctx.beginPath();\n        ctx.moveTo(this.size.x*0.5, 0);\n        ctx.lineTo(this.size.x*1.0, this.size.y*0.5);\n        ctx.lineTo(this.size.x*0.5, this.size.y);\n        ctx.lineTo(this.size.x*0.0, this.size.y*0.5);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // load input\n        ctx.fillStyle = isDark ? \"#446666\" : \"#ccffff\";\n        ctx.strokeStyle = getStrokeColor(isDark);\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.25, this.size.y * 0.25, this.size.x * 0.25, 135*Math.PI/180, 315*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();\n        /*ctx.fillStyle = \"#33ff33\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.75, this.size.y * 0.25, this.size.x * 0.25, -135*Math.PI/180, 45*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();*/\n        if (this.inputWires[0] && this.inputWires[0].get()) {\n            ctx.beginPath();\n            ctx.moveTo(this.size.x * 0.75, this.size.y * 0.25);\n            ctx.lineTo(this.size.x * 1.0, 0);\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return bits[0] ? [bits[1]] : this.state.bits;\n    }\n}\n\nexport default RegisterBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport { getApplianceColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Subtractor implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits + 1);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x*0.46, top);\n        ctx.lineTo(left + this.size.x*0.5,  top + this.size.x*0.05);\n        ctx.lineTo(left + this.size.x*0.54, top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x*0.95, this.position.y + socket.y + 10);\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = \"#333333\";\n            ctx.strokeStyle = (this.state.bits[i] ? '#33ff33' : '#990000');\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += ((wire1 && wire1.get()) ? 1 : 0) * (1 << i);\n            num2 += ((wire2 && wire2.get()) ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(String(num1) + \" - \" + String(num2), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        const answer = num1 - num2;\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) != 0;\n        }\n        //console.log(answerBits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        this.state.bits = this.evaluate(this.inputWires.map(wire => (wire ? wire.get() : false)));\n    }\n}\n\nexport default Subtractor;\n","// Countdown.ts\n//\n// These clocks can have an arbitrary period.\n\nimport Component from \"./Component\";\nimport { getApplianceColor, getBitColor, getTextColor } from \"./dark\";\nimport Wire from \"./Wire\";\n\nclass Countdown implements Component {\n    public state: {bits: boolean[], count: number};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    public startValue: number;\n\n    //\n    constructor(x: number, y: number, cap: number, width: number = 60, height: number = 50) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n        // because .fill() isn't supported?!\n        const bitArray: boolean[] = Array(2).map(_ => false);\n        this.state = {\n            bits: bitArray,\n            count: cap,\n        };\n        this.startValue = cap;\n        this.numBits = 2;\n        // \"power supply\" or more accurately a way to reset the clock\n        this.inputSockets = [\n            {x: 0, y: -this.size.y/2 - 1},\n            {x: -this.size.x/2, y: -this.size.y/2},\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: this.size.y/2}\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = getApplianceColor(isDark);\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // clock icon\n        r = Math.min(w/8, h/8);\n        ctx.beginPath();\n        ctx.arc(0, 0, r, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(r*0.6, 0);\n        ctx.lineTo(0, 0);\n        ctx.lineTo(0, -r);\n        ctx.stroke();\n\n        // power\n        ctx.translate(w/2, 0); // move origin to top-middle\n        ctx.beginPath();\n        ctx.moveTo(2, -5);\n        ctx.lineTo(2, -1);\n        ctx.lineTo(-2, -1);\n        ctx.lineTo(-2, -5);\n        ctx.stroke();\n\n        r *= 0.8;\n        ctx.lineWidth *= 2;\n        ctx.lineJoin = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(r*0.4, r*0.5);\n        ctx.lineTo(-r*0.8, r*1.5);\n        ctx.lineTo(r*0.8, r*1.5);\n        ctx.lineTo(-r*0.4, r*2.5);\n        ctx.stroke();\n\n        ctx.lineWidth /= 2;\n\n        // clock\n        ctx.fillStyle = getTextColor(isDark);\n        ctx.font = String(Math.round(this.size.y * 0.6)) + \"px monospace\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.state.count.toString(), 0, h*0.50);\n\n        ctx.translate(0, h/2);\n\n        // outputs\n        ctx.fillStyle = getBitColor(this.state.count == 0, isDark);\n        ctx.beginPath();\n        ctx.arc(0, h/2, 5, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.restore();\n    }\n    // Evaluation: we give a \"1\" output when it expires\n    evaluate(bits: boolean[]): boolean[] {\n        return [this.state.count == 0];\n    }\n\n    beforeUpdate() {\n        // 0 = the power button, if off it resets\n        if (this.inputWires[0]?.get()) {\n            // 1 = the clock input, if off it holds\n            if (this.inputWires[1]?.get()) {\n                this.state.count--;\n                if (this.state.count < 0) this.state.count = 0;\n            }\n        } else {\n            this.state.count = this.startValue;\n        }\n    }\n}\n\nexport default Countdown;\n","// DividerExploration.ts\n\n/*\n\nsteps:\n1. Start with dividend (numerator) in RIGHT half of remainder register\n2. Shift the remainder left\n3. Send the LEFT half in for subtraction\n4. If the result is negative, write it, else keep the remainder as is\n5. Put the opposite of the sign bit on the new 1 position\n6. Go back to step 2, although when the larger clock strikes, record the results (I expect it to be 2*6+3 or 3*6+5 cycles).\n\nnext steps:\n- carry from the subtractor needs to enter the choice gates\n- on purple, we get the subtraction results, and if the sign bit is off, we insert it into the register\n- also on purple, that sign bit needs to shift the LEFT\n\nI think I need to totally reconfigure the remainder part\n\nRemainder register:\n- If power button is off, set to zero (6-12) or numerator (0-5)\n- If power button is on:\n    - on purple we may receive a subtraction, but this only applies to bits 6-12\n    - on green we need to shift left, setting a carry bit. (This will require an additional register.)\n\n\n\n*/\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Subtractor from './Subtractor';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\nimport Countdown from './Countdown';\n\nclass DividerExploration extends Exploration {\n    countdown: Countdown;\n    remainderRight: number;\n    remainderSpacing: number;\n    startButton: InputBit;\n    numBits: number;\n\n    animated: boolean = true;\n    remainderRegister: OutputBit[];\n    clock: Clock;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 720;\n        canvas.height = 600;\n\n        // A lot of the same stuff happens compared to Multiplier...\n\n        const BITS = 5;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(660, 40, false, 50);\n        this.startButton = startButton;\n\n        // probably more user friendly\n        const thisExploration = this;\n        startButton.onClick = function() {\n            thisExploration.update(); // get the bits ready\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.bits[0]) {\n                setTimeout(function() {\n                    thisExploration.resume();\n                }, 1000);\n            }\n            return true;\n        };\n\n\n        const clockX = startButton.position.x;\n        const clock = new Clock(clockX, 125, 50, 50);\n        clock.inputWires.push(new Wire(startButton, 0));\n        this.components.push(clock);\n        this.clock = clock;\n\n        // when this clock strikes 2*BITS + 4 it will end the operation\n        // but I add one more to avoid confusion\n        const countdown = new Countdown(clockX + 20, 220, BITS+1, 60, 45);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: startButton.position.x + 40, y: countdown.position.y - 40},\n            {x: startButton.position.x + 40, y: startButton.position.y},\n        ]));\n        countdown.inputWires.push(new Wire(clock, 1));\n        this.countdown = countdown;\n\n        const subtractor = new Subtractor(210, 180, BITS, 11*26, 90);\n        //this.outputComponents.push(subtractor);\n\n        // Also not really a register.\n        let remainderRegister = [];\n        this.remainderRight = 585;\n        this.remainderSpacing = 54;\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(this.remainderRight - this.remainderSpacing*i, 460, 20);\n            remainderRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\", darkColor: \"rgba(160, 48, 160)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.25)\", darkColor: \"rgba(160, 40, 160, 0.33)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n        const blue = {color: \"rgba(32, 64, 128, 0.8)\", darkColor: \"rgba(96, 112, 160, 0.8)\"};\n        const blueFaded = {color: \"rgba(32, 64, 128, 0.4)\", darkColor: \"rgba(96, 112, 160, 0.4)\"};\n        //const yellow = {color: \"rgba(160, 160, 0)\"};\n\n        // Input Numbers (N/D). D = divisor, N = dividend\n        let inputN = [];\n        let inputD = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(subtractor.position.x + subtractor.inputSockets[BITS+i].x, 30, false, 22);\n            this.components.push(input);\n            inputN.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(inputN[i].position.x, 95, false, 22);\n            this.components.push(input);\n            inputD.push(input);\n        }\n\n        // Wires from the registers to the subtractor.\n        for (let i = 0; i < BITS; i++) {\n            const d = 2;\n            const bit = remainderRegister[i + BITS];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            const y2 = subtractor.position.y - 70;\n            subtractor.inputWires.push(new Wire(bit, 0, [\n                {x: subtractor.position.x + subtractor.inputSockets[i].x - 0, y: y2 + d*i},\n                {x: 3 + d*i, y: y2 + d*i},\n                {x: 3 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\"}));\n        }\n        // The other subtractor registers (to the divisor)\n        for (let i = 0; i < BITS; i++) {\n            subtractor.inputWires.push(new Wire(inputD[i], 0));\n        }\n\n        // Choice Gates coming out of the subtractor (writes if subtracted).\n        let subtractorChoiceGates = [];\n        for (let i = 0; i < BITS; i++) {\n            //const x = subtractor.position.x + subtractor.outputSockets[i].x;\n            const y = subtractor.position.y + subtractor.outputSockets[0].y; // put them all on the same line\n            // space them out a little\n            const choice = new ChoiceGate(remainderRegister[i+BITS].position.x - 2, y + 60, 14);\n            // choice depends on whether or not the carry bit is positive or negative\n            choice.inputWires.push(new Wire(subtractor, BITS, [\n                {x: choice.position.x - 20, y: choice.position.y},\n                {x: choice.position.x - 20, y: choice.position.y - 25},\n                {x: subtractor.position.x - subtractor.size.x/2, y: choice.position.y - 25},\n                {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y},\n            ], {color: \"#888\"}));\n            // if negative, we just re-use the remainder register\n            const regBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(regBit, 0, [\n                {x: choice.position.x - 7, y: choice.position.y - 17},\n                {x: regBit.position.x + 20, y: choice.position.y - 17},\n                {x: regBit.position.x + 20, y: regBit.position.y},\n            ], purple));\n            // otherwise we use the subtraction\n            const y2 = choice.position.y - 32 - Math.round(Math.abs(i - BITS/2)) * 4\n            choice.inputWires.push(new Wire(subtractor, i, [\n                {x: choice.position.x + 7, y: y2},\n                {x: subtractor.position.x + subtractor.outputSockets[i].x, y: y2}\n            ]));\n            subtractorChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Remainder Register\n        // wires:\n        // (1) the faded purple wires from the clock control\n        // includes many wires\n        // also includes register for holding the quotient input\n        const fullRow = [];\n        for (let i = 0; i <= 2*BITS; i++) {\n            const regBit = remainderRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            // This is the middle (full) row\n            const choice = new ChoiceGate(regBit.position.x + (i < BITS ? 5 : -1), regBit.position.y - 95, 14);\n            // Selection Wire (from clock's left end)\n            choice.inputWires.push(new Wire(clock, 0, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 40},\n                {x: 540 - 2*i, y: choice.position.y - 50 - 1*i},\n                {x: clockX - 60, y: clock.position.y + clock.size.y/2},\n            ], purpleFaded));\n            // Purple action\n            if (i >= BITS && i < 2*BITS) {\n                // Upper Half of the Register: Conditionally connect to the subtractor.\n                choice.inputWires.push(new Wire(subtractorChoiceGates[i - BITS], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: choice.position.x - 7, y: choice.position.y - 25},\n                    {x: regBit.position.x - 18, y: choice.position.y - 25},\n                    {x: regBit.position.x - 18, y: regBit.position.y},\n                ], purple));\n            }\n            // Shifting and the Ones Bit\n            if (i > 0) {\n                choice.inputWires.push(new Wire(remainderRegister[i-1], 0, [\n                    {x: choice.position.x + 7, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: regBit.position.y + 0},\n                ], teal));\n            } else {\n                const holdWrite = new OutputBit(choice.position.x + 7, choice.position.y - 40, 20);\n                const notY = subtractorChoiceGates[0].position.y - 25;\n                const not = new Not(this.remainderRight - this.remainderSpacing*1.5, notY, 40, -90);\n                not.inputWires.push(new Wire(subtractor, BITS, [\n                    {x: subtractor.position.x - subtractor.size.x/2, y: notY},\n                    {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y}\n                ], {color: \"#888\"}));\n                // set on green\n                //holdWrite.inputWires.push(new Wire(clockNot, 0, [], teal));\n                // value is negated result of subtraction\n                holdWrite.inputWires.push(new Wire(not, 0, [\n                    {x: holdWrite.position.x, y: not.position.y},\n                ], teal));\n                // maybe?\n                //choice.inputWires[1] = new Wire(holdWrite, 0, [], purple);\n                choice.inputWires.push(new Wire(holdWrite, 0, [], teal));\n                this.components.push(not, holdWrite);\n                this.outputComponents.push(holdWrite);\n            }\n\n            this.components.push(choice);\n            fullRow.push(choice);\n        }\n\n        // Computing the Quotient\n\n        // The second input register that is actually a register.\n\n        // Wiring Dividend to seed the remainder register\n        // (blue wires, including faded ones)\n        const blueRightEdge = this.remainderRight + 33 + 2*BITS;\n        let dividendChoice: ChoiceGate[] = [];\n        for (let i = 0; i < BITS; i++) {\n            const regBit = remainderRegister[i];\n            const inBit = inputN[i];\n\n            // This is the one close to the lowest 6 registers\n            const choice = new ChoiceGate(regBit.position.x + 3, regBit.position.y - 50, 12);\n            // Wire coming from the start button\n            choice.inputWires.push(new Wire(startButton, 0, [\n                {x: choice.position.x - 15, y: choice.position.y},\n                {x: choice.position.x - 15, y: choice.position.y + 15, node: true},\n                {x: blueRightEdge, y: choice.position.y + 15},\n                {x: blueRightEdge, y: startButton.position.y + (startButton.position.x - blueRightEdge)},\n            ], blue));\n\n            // If power is on, make it come from the teal/purple stuff\n            choice.inputWires.push(new Wire(fullRow[i], 0));\n\n            // Otherwise, set it to the input\n            const d = 2;\n            const y1 = fullRow[0].position.y - 70 - d*BITS;\n            const y2 = inBit.position.y + 30;\n            const x1 = this.remainderRight + 24 + d*BITS;\n            choice.inputWires.push(new Wire(inBit, 0, [\n                {x: choice.position.x + 6, y: choice.position.y - 10 - d*i},\n                {x: x1 - d*i, y: choice.position.y - 10 - d*i},\n                {x: x1 - d*i, y: y1 + d*i},\n                {x: clockX - 90 - d*i, y: y1 + d*i},\n                {x: clockX - 90 - d*i, y: y2 + d*i},\n                {x: inBit.position.x, y: y2 + d*i},\n            ], blueFaded));\n\n            this.components.push(choice);\n            dividendChoice.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Clearing the \"remainder\" (heh heh) of the register\n        // (blue wires)\n        for (let i = 0; i <= BITS; i++) {\n            const regBit = remainderRegister[i + BITS];\n            const and = new AndGate(regBit.position.x, regBit.position.y - 50, 24, 0);\n            // similar to above, use the full row if the power is on\n            and.inputWires.push(new Wire(fullRow[i+BITS], 0));\n            and.inputWires.push(new Wire(startButton, 0, [\n                {x: and.position.x + 5, y: and.position.y - 20},\n                {x: and.position.x + 14, y: and.position.y - 20},\n                {x: and.position.x + 14, y: and.position.y + 15, node: i < BITS},\n                {x: blueRightEdge, y: and.position.y + 15},\n                {x: blueRightEdge, y: startButton.position.y + (startButton.position.x - blueRightEdge)},\n            ], blue));\n\n            this.components.push(and);\n            regBit.inputWires.push(new Wire(and, 0));\n        }\n\n        // Control Wire from the final register bit to the subtractor's output\n        /*const regLSB = divisorRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = subtractorChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 282, y: choice.position.y - 20},\n                {x: 282, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"rgb(127, 127, 127)\"}));\n            choice.inputWires.unshift(null);\n\n            // Else wire\n            const outBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 5, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: outBit.position.y - 19},\n            ], purpleFaded));\n        }*/\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i < 2*BITS; i++) {\n            const offset = (i < BITS ? 5 : -10);\n            const from = remainderRegister[i + (i >= BITS ? 1 : 0)];\n            const bit = new RegisterBit(from.position.x + offset, 580, 25);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 14th clock cycle\n            const x1 = countdown.position.x + countdown.outputSockets[0].x;\n            bit.inputWires.push(new Wire(countdown, 0, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: x1, y: bit.position.y - 30},\n                {x: x1, y: countdown.position.y + 40},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const diagonal = 15;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayN = new Display(inputN[0].position.x + 54, inputN[0].position.y, inputN, false, 36);\n        const displayD = new Display(inputD[0].position.x + 54, inputD[0].position.y, inputD, false, 36);\n        const displayQ = new Display(557, 540, finalAnswer.slice(0, BITS), false, 30);\n        const displayR = new Display(200, 540, finalAnswer.slice(BITS, 2*BITS), false, 30);\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(subtractor, countdown, startButton, displayN, displayD, displayQ, displayR);\n\n        this.remainderRegister = remainderRegister;\n    }\n\n    drawRemainderGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.remainderRight - left*this.remainderSpacing) - 15;\n        const x2 = (this.remainderRight - right*this.remainderSpacing) + 15;\n        const y = 480;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.33)\";\n        ctx.lineWidth = 8;\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n    }\n\n    afterRender = () => {\n        // display the quotient\n        const ctx = this.context;\n        ctx.save();\n\n        const B = this.numBits;\n\n        // get the clock cycle\n        const cycle = this.countdown.state.count;\n        const n = cycle + (1-this.clock.state.clock);\n        if (n <= B+1 && this.clock.state.clock >= 0) {\n            let rValue = 0, qValue = 0;\n            const rOffset = B + 2 - n; // a quirk of my hardware\n            for (let i = 0; i < B; i++) {\n                const bit = this.remainderRegister[i + rOffset];\n                rValue += Number(bit.state.bits[0]) * (1 << i);\n            }\n            for (let i = 0; i < (B - n); i++) {\n                const bit = this.remainderRegister[i];\n                qValue += Number(bit.state.bits[0]) * (1 << (i + n - 1));\n            }\n            this.drawRemainderGuide(rOffset + this.numBits - 1, rOffset, \"#33c\", `Remainder (${rValue})`);\n\n            if (n <= B) {\n                this.drawRemainderGuide(B - n, 0, \"#990\", `Quotient (${qValue})`);\n            }\n        }\n\n        ctx.restore();\n\n        // not sure where to put this\n        if (cycle == 0) {\n            this.startButton.state.bits = [false];\n            if (!this.paused) this.paused = true;\n        }\n    }\n}\n\nexport default DividerExploration;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate } from './Gates';\nimport { BinarySwitch } from './UserGates';\nimport AnswerChecker from './AnswerChecker';\n\nclass FullAdderExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 400);\n\n        const inputA = new InputBit(40, 50, false, 32);\n        const inputB = new InputBit(160, 50, false, 32);\n        const inputC = new InputBit(240, 180, false, 32);\n        const output1 = new OutputBit(inputB.position.x - 1, 340, 30);\n        const output2 = new OutputBit(inputA.position.x + 19, 340, 30);\n\n        const and1 = new AndGate(inputA.position.x + 10, 125, 50, 0);\n        and1.inputWires.push(new Wire(inputA, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 35},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 125, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 35},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const xor2 = new BinarySwitch(output1.position.x, 280, 60, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 9, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new BinarySwitch(output2.position.x + 30, 220, 60, 0);\n        and2.inputWires.push(new Wire(xor1, 0, [\n            {x: and2.position.x - 9, y: 165},\n            {x: xor1.position.x, y: 165, node: true},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 9, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new BinarySwitch(output2.position.x, output2.position.y - 44, 60, 0);\n        or2.inputWires.push(new Wire(and1, 0));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 9, y: (and2.position.y + or2.position.y + 6)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 6)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 30, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3);\n\n        // Number Display\n        const displayResult = new Display(220, 340, [output1, output2], false, 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\", { color: '#333' });\n        const text2 = new Text(output2.position.x, 375, 30, \"2\", { color: '#333' });\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3);\n\n        // The Answer\n        const correctAdder = new Adder(370, 200, 1, 140);\n        const rightInputA = new InputBit(correctAdder.position.x + correctAdder.inputSockets[0].x, 120, false, 25);\n        const rightInputB = new InputBit(correctAdder.position.x + correctAdder.inputSockets[1].x, 120, false, 25);\n        const rightInputC = new InputBit(460, 200, false, 25);\n        this.components.push(correctAdder, rightInputA, rightInputB, rightInputC);\n\n        const rightOutput1 = new OutputBit(correctAdder.position.x, 270, 25);\n        const rightOutput2 = new OutputBit(correctAdder.position.x + correctAdder.outputSockets[1].x, 270, 25);\n        rightOutput1.inputWires.push(new Wire(correctAdder, 0));\n        rightOutput2.inputWires.push(new Wire(correctAdder, 1));\n        this.components.push(rightOutput1, rightOutput2);\n        this.outputComponents.push(rightOutput1, rightOutput2);\n\n        const helpText1 = new Text(correctAdder.position.x, 60, 20, \"Can you make the\");\n        const helpText2 = new Text(correctAdder.position.x, 80, 20, \"left side do this?\");\n        this.components.push(helpText1, helpText2);\n\n        correctAdder.inputWires = [new Wire(rightInputA, 0), new Wire(rightInputB, 0), new Wire(rightInputC, 0)];\n\n        this.components.push(new AnswerChecker(this, 380, 345,\n            [\n                [inputA, rightInputA],\n                [inputB, rightInputB],\n                [inputC, rightInputC],\n            ],\n            [output2, output1],\n            function(bits: boolean[]) {\n                return [\n                    (Number(bits[0]) + Number(bits[1]) + Number(bits[2])) >= 2,\n                    Boolean(bits[0] !== bits[1]) !== bits[2]\n                ]\n            }\n        ));\n    }\n}\n\nexport default FullAdderExploration1;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate, Not } from './Gates';\n\nclass FullSubtractorExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const inputA = new InputBit(80, 50, false, 30);\n        const inputB = new InputBit(200, 50, false, 30);\n        const inputC = new InputBit(300, 200, false, 30);\n        const output1 = new OutputBit(200, 340, 30);\n        const output2 = new OutputBit(100, 340, 30);\n\n        const notA1 = new Not(inputA.position.x, inputA.position.y + 40, 30, 0);\n        notA1.inputWires.push(new Wire(inputA, 0));\n\n        const and1 = new AndGate(inputA.position.x + 10, 140, 50, 0);\n        and1.inputWires.push(new Wire(notA1, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 40},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 140, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 40},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const notX1 = new Not(xor1.position.x - 30, 180, 30, 90);\n        notX1.inputWires.push(new Wire(xor1, 0, [\n            {x: xor1.position.x, y: notX1.position.y, node: true},\n        ]));\n\n        const notX1Aid = new OutputBit(notX1.position.x - 25, notX1.position.y, 12);\n        notX1Aid.inputWires.push(new Wire(notX1, 0));\n\n        const xor2 = new XorGate(200, 280, 50, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 10, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 230, 50, 0);\n        and2.inputWires.push(new Wire(notX1, 0, [\n            {x: and2.position.x - 10, y: notX1.position.y},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 10, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 50, 0);\n        or2.inputWires.push(new Wire(and1, 0, [\n            {x: or2.position.x - 10, y: and1.position.y + 30},\n            {x: and1.position.x, y: and1.position.y + 30},\n        ]));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 10, y: (and2.position.y + or2.position.y + 12)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 12)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, notA1, notX1, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 27, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3, notX1Aid);\n\n        // Number Display\n        const displayResult = new Display(320, 340, [output1, output2], \"2comp\", 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\");\n        const text2 = new Text(output2.position.x, 375, 30, \"Borrow\");\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3, notX1Aid);\n    }\n}\n\nexport default FullSubtractorExploration1;\n","// GateExploration\n//\n// Basic exploration of AND, OR, XOR, and NOT gates\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass GateExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const types = [AndGate, OrGate, XorGate];\n        for (let i = 0; i < 3; i++) {\n            const bit1 = new InputBit(i*120 + 60, 40, false, 30);\n            const bit2 = new InputBit(i*120 + 120, 40, false, 30);\n            const gate = new types[i](i*120 + 90, 120, 60, 0);\n            gate.inputWires.push(new Wire(bit1, 0, [\n                {x: gate.position.x - 12, y: gate.position.y - 40},\n                {x: bit1.position.x, y: gate.position.y - 40},\n            ]));\n            gate.inputWires.push(new Wire(bit2, 0, [\n                {x: gate.position.x + 12, y: gate.position.y - 40},\n                {x: bit2.position.x, y: gate.position.y - 40},\n            ]));\n            const out = new OutputBit(i*120 + 90, 200, 30);\n            out.inputWires.push(new Wire(gate, 0));\n            this.components.push(gate, bit1, bit2, out);\n            this.outputComponents.push(out);\n        }\n\n        const notInput = new InputBit(420, 40, false, 30);\n        const notGate = new Not(420, 120, 60, 0);\n        notGate.inputWires.push(new Wire(notInput, 0));\n        const notOutput = new OutputBit(420, 200, 30);\n        notOutput.inputWires.push(new Wire(notGate, 0));\n        this.components.push(notGate, notInput, notOutput);\n        this.outputComponents.push(notOutput);\n    }\n\n}\n\nexport default GateExploration;\n","// HalfAdderCheat.ts\n//\n// The finished product with no accompanying circuit.\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { BinarySwitch } from './UserGates';\nimport AnswerChecker from './AnswerChecker';\n\nclass HalfAdderBuild extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 320);\n\n        // left side\n        const adder = new Adder(120, 160, 1, 180, 80);\n        const inputA = new InputBit(adder.position.x + adder.inputSockets[0].x, 60, false, 30);\n        const inputB = new InputBit(adder.position.x + adder.inputSockets[1].x, 60, false, 30);\n        const output1 = new OutputBit(adder.position.x + adder.outputSockets[0].x, 260, 30);\n        const output2 = new OutputBit(adder.position.x + adder.outputSockets[1].x, 260, 30);\n        this.components.push(adder, inputA, inputB, output1, output2);\n        adder.inputWires.push(new Wire(inputA, 0));\n        adder.inputWires.push(new Wire(inputB, 0));\n        output1.inputWires.push(new Wire(adder, 0));\n        output2.inputWires.push(new Wire(adder, 1));\n\n        // const displayResult = new Display(180, 240, [output1, output2], false, 40);\n        // this.components.push(displayResult);\n        this.outputComponents.push(output1, output2);\n\n        const thisIsYourTarget = new Text(adder.position.x, 30, 18, \"Can you make this...\");\n        const text1 = new Text(output1.position.x, 295, 30, \"1\");\n        const text2 = new Text(output2.position.x, 295, 30, \"2\");\n        this.components.push(thisIsYourTarget, text1, text2);\n\n\n        // right side\n        const x2 = 390;\n        const userA = new InputBit(x2 - 45, 60, false, 30);\n        const userB = new InputBit(x2 + 45, 60, false, 30);\n\n        const switch1 = new BinarySwitch(userB.position.x - 9, 160, 60, 0);\n        switch1.state.whichGate = 1;\n        const switch2 = new BinarySwitch(userA.position.x + 9, 160, 60, 0);\n        switch2.state.whichGate = 1;\n\n        switch1.inputWires.push(new Wire(userA, 0));\n        switch1.inputWires.push(new Wire(userB, 0));\n        switch2.inputWires.push(new Wire(userA, 0));\n        switch2.inputWires.push(new Wire(userB, 0));\n\n        const userOutput1 = new OutputBit(switch1.position.x, 260, 30);\n        const userOutput2 = new OutputBit(switch2.position.x, 260, 30);\n        userOutput1.inputWires.push(new Wire(switch1, 0));\n        userOutput2.inputWires.push(new Wire(switch2, 0));\n\n        const thisIsYourCanvas = new Text(x2, 30, 18, \"...on this side?\");\n        this.components.push(thisIsYourCanvas, switch1, switch2, userA, userB, userOutput1, userOutput2);\n        this.outputComponents.push(userOutput1, userOutput2);\n\n        const userText1 = new Text(userOutput1.position.x, 295, 30, \"1\");\n        const userText2 = new Text(userOutput2.position.x, 295, 30, \"2\");\n        this.components.push(userText1, userText2);\n\n        const testButton = new AnswerChecker(this, 235, 270, [\n            [userA, inputA],\n            [userB, inputB],\n        ], [userOutput2, userOutput1], function(bits: boolean[]): boolean[] {\n            return [bits[0] && bits[1], bits[0] !== bits[1]];\n        });\n        this.components.push(testButton);\n\n        // Link the bits for easy comparison\n        inputA.linkedBits.push(userA);\n        userA.linkedBits.push(inputA);\n        inputB.linkedBits.push(userB);\n        userB.linkedBits.push(inputB);\n    }\n}\n\nexport default HalfAdderBuild;\n","// MakeALUExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\nimport { NotSwitch, BinarySwitch } from './UserGates';\nimport Text from './Text';\n\nclass MakeALUExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 500, 500);\n\n        const adder = new Adder(180, 280, 4, 288, 120);\n        this.components.push(adder);\n\n        // need this up here...\n        const operBit = new InputBit(460, 70, false, 40);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(30 + 36*i, 60, false, 25);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[3-i].x, y: bit.position.y + 120 - 25*i},\n                {x: bit.position.x, y: bit.position.y + 120 - 25*i},\n            ]));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            // right side is more complicated\n            const bit2 = new InputBit(380 - 60*i, 60, false, 25);\n            const gate = new BinarySwitch(bit2.position.x + 6, bit2.position.y + 70, 40, 0);\n            gate.inputWires.push(new Wire(bit2, 0));\n            gate.inputWires.push(new Wire(operBit, 0, [\n                {x: gate.position.x + 6, y: gate.position.y - 30, node: (i !== 3)},\n                {x: operBit.position.x, y: gate.position.y - 30, node: true},\n            ]));\n            adder.inputWires.push(new Wire(gate, 0, [\n                {x: adder.position.x + adder.inputSockets[4+i].x, y: gate.position.y + 70 - 10*i},\n                {x: gate.position.x, y: gate.position.y + 70 - 10*i},\n            ]));\n            this.components.push(gate, bit2);\n            inputB.push(bit2);\n        }\n\n        // operation control\n        const operSwitch = new NotSwitch(operBit.position.x, operBit.position.y + 100, 50, 0);\n        operSwitch.state.whichGate = 1; // start you off with the wrong gate, heh heh\n        const operText1 = new Text(operBit.position.x, operBit.position.y - 50, 20, \"OPER\");\n        const operText2 = new Text(operBit.position.x, operBit.position.y - 32, 20, function() {\n            return (operBit.state.bits[0]) ? \"(SUB)\" : \"(ADD)\";\n        });\n        operSwitch.inputWires.push(new Wire(operBit, 0));\n        adder.inputWires.push(new Wire(operSwitch, 0, [\n            {x: operSwitch.position.x, y: adder.position.y},\n        ]));\n        this.components.push(operSwitch, operBit, operText1, operText2);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 410, 25);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        // Displays\n        const displayA = new Display((inputA[1].position.x + inputA[2].position.x)/2, 25, inputA, true);\n        const displayB = new Display((inputB[1].position.x + inputB[2].position.x)/2, 25, inputB, true);\n        this.components.push(displayA, displayB, new Display(adder.position.x, 460, outputBits, true, 50));\n\n        // Error\n        const calc1 = new Text(370, 430, 30, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const op = operBit.state.bits[0];\n            const raw = op ? (a+b) : (a-b);\n            // add 8, mod 16, then subtract 8 makes it return in -8..7\n            const overflow = ((raw + 24) % 16) - 8;\n            return `Actual: ${overflow}` + (raw === overflow ? \"\" : \"*\");\n        });\n        const overflowNote = new Text(370, 460, 20, \"* means overflow\");\n        this.components.push(calc1, overflowNote);\n    }\n}\n\nexport default MakeALUExploration;\n","// MultiplierExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, OrGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\nimport Text from './Text';\nimport Countdown from './Countdown';\n\nclass MultiplierExploration extends Exploration {\n    countdown: Countdown;\n    regSpacing: number;\n    regRight: number;\n    productRegister: OutputBit[];\n    numBits: number;\n    startButton: InputBit;\n\n    animated: boolean = true;\n    clock: Clock;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 720;\n        canvas.height = 600;\n\n        const BITS = 6;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(680, 60, false, 50);\n        this.startButton = startButton;\n        const startText = new Text(startButton.position.x, startButton.position.y - 35, 24, function() {\n            return (startButton.state.bits[0]) ? \"ABORT\" : \"START\";\n        });\n        this.components.push(startText);\n\n        const thisExploration = this;\n        startButton.onClick = function() {\n            thisExploration.update();\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.bits[0]) {\n                thisExploration.resume();\n            }\n            return true;\n        };\n        const clockX = startButton.position.x;\n\n        // not gate adjusting the initial register\n        const startNot = new Not(startButton.position.x - 60, 40, 30, 90);\n        startNot.inputWires.push(new Wire(startButton, 0));\n        this.components.push(startNot);\n\n        const clock = new Clock(clockX, 150);\n        clock.inputWires.push(new Wire(startButton, 0));\n        this.clock = clock;\n        //this.components.push(clock); // do it later\n        //this.outputComponents.push(clock);\n\n        // when the clock strikes 2*BITS + 1 it will end the operation\n        const countdown = new Countdown(clockX + 5, 260, this.numBits, 50, 50);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: clockX + 30, y: countdown.position.y - 40},\n            {x: clockX + 30, y: startButton.position.y},\n        ]));\n        countdown.inputWires.push(new Wire(clock, 1));\n        this.countdown = countdown;\n\n        const adder = new Adder(170, 175, BITS, 270, 100);\n        //this.outputComponents.push(adder);\n\n        // The \"Register\" that really isn't.\n        // The Add and Shift steps should be successfully separated...\n        let productRegister = [];\n        this.regRight = 610;\n        this.regSpacing = 50;\n        for (let i = 0; i < 2*BITS; i++) {\n            const reg = new OutputBit(this.regRight - this.regSpacing*i, 400, 20);\n            productRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\", darkColor: \"rgb(160, 80, 160)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.4)\", darkColor: \"rgba(160, 80, 160, 0.6)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n\n        // Wires from the registers to the adder.\n        // (deep purple, left)\n        for (let i = 0; i < BITS; i++) {\n            const d = 2;\n            const bit = productRegister[i + BITS - 1];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            const y2 = adder.position.y - adder.size.y/2 - 15 - d*BITS;\n            adder.inputWires.push(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[i].x, y: y2 + d*i},\n                {x: 10 + d*i, y: y2 + d*i},\n                {x: 10 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\", darkColor: \"rgba(160, 80, 160, 0.67)\"}));\n        }\n\n        // And Gates coming out of the adder (for the clock).\n        let adderChoiceGates = [];\n        for (let i = 0; i <= BITS; i++) {\n            // and gate\n            //const x = adder.position.x + adder.outputSockets[i].x;\n            const y = adder.position.y + adder.outputSockets[0].y; // put them all on the same line\n            // space them a bit\n            const choice = new ChoiceGate(productRegister[i+BITS-1].position.x - 7, y + 50, 10);\n            // this will be input 0 temporarily but we will unshift later\n            const x2 = adder.position.x + adder.outputSockets[i].x;\n            let y2 = y + 10 + 4*i;\n            if (choice.position.x < x2) y2 = y + 20;\n            choice.inputWires.push(new Wire(adder, i, [\n                {x: choice.position.x + choice.inputSockets[1].x, y: y2},\n                {x: x2, y: y2},\n            ]));\n            adderChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Multiplication Register\n        for (let i = 0; i < 2*BITS; i++) {\n            const regBit = productRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            const choice = new ChoiceGate(regBit.position.x, regBit.position.y - 40, 14);\n            // Selection Wire (from clock's NOT)\n            choice.inputWires.push(new Wire(clock, 1, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 38 - 2*i},\n                {x: 630 - 2*i, y: choice.position.y - 38 - 2*i},\n                {x: clock.position.x - 40, y: clock.position.y + clock.size.y/2},\n            ], tealFaded));\n\n            if (i >= BITS-1) {\n                // Upper Half of the Register: Conditionally connect to the adder.\n                choice.inputWires.push(new Wire(adderChoiceGates[i - BITS + 1], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: regBit.position.x - 7, y: choice.position.y - 30},\n                    {x: regBit.position.x + 20, y: choice.position.y - 30},\n                    {x: regBit.position.x + 20, y: regBit.position.y},\n                ], purple));\n            }\n\n            // Shifting\n            if (i < 2*BITS-1) {\n                choice.inputWires.push(new Wire(productRegister[i+1], 0, [\n                    {x: regBit.position.x + 7, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: regBit.position.y},\n                ], teal));\n            } else {\n                choice.inputWires.push(null);\n            }\n\n            this.components.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Input Numbers (A and B).\n        let inputA = [];\n        let inputB = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(310 - i*30, 60, false, 25);\n            this.components.push(input);\n            adder.inputWires.push(new Wire(input, 0));\n            inputA.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(610 - i*50, 60, false, 25);\n            this.components.push(input);\n            inputB.push(input);\n        }\n\n        // The second input register that is actually a register.\n        let multiplierRegister: RegisterBit[] = [];\n        let multiplierRegisterChoice = [];\n        for (let i = 0; i < BITS; i++) {\n            const reg = new RegisterBit(inputB[i].position.x - 3, 170, 20);\n            multiplierRegister.push(reg);\n            this.components.push(reg);\n            this.outputComponents.push(reg);\n        }\n        // Wiring to the Multiplier Register\n        for (let i = 0; i < BITS; i++) {\n            const reg = multiplierRegister[i];\n            const or = new OrGate(reg.position.x - 9, reg.position.y - 25, 20, 0);\n            const choice = new ChoiceGate(reg.position.x + 9, reg.position.y - 60, 12);\n            reg.inputWires.push(new Wire(or, 0), new Wire(choice, 0));\n\n            // wire path for the OR and the selection bit\n            const wirePath = [\n                {x: reg.position.x - 13, y: choice.position.y, node: true},\n                {x: reg.position.x - 13, y: startNot.position.y, node: (i < BITS-1)},\n            ];\n            or.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n            or.inputWires.push(new Wire(clock, 1, [\n                {x: or.position.x + 10, y: or.position.y - 18 - i/2},\n                {x: clock.position.x - 60, y: or.position.y - 18 - i},\n                {x: clock.position.x - 40, y: clock.position.y + clock.size.y/2, node: true},\n            ], tealFaded));\n\n            // choice gate is [0] ? [1] : [2]\n            // the selection comes first\n            choice.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n\n            // If the clock is off, the registers need to use the input bits\n            choice.inputWires.push(new Wire(inputB[i], 0));\n            // Otherwise hold\n            choice.inputWires.push(new Wire(multiplierRegister[i+1] || null, 0, [\n                {x: reg.position.x + 15, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y + 10},\n            ]));\n\n            this.components.push(or, choice);\n        }\n\n        // Control Wire from the final register bit to the adder's output\n        // Also the wiring between the product register and the choice gates\n        const regLSB = multiplierRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = adderChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 400, y: choice.position.y - 20},\n                {x: 400, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"#7f7f7f\", darkColor: \"#555\"}));\n\n            // Else wire\n            const outBit = productRegister[i + BITS - 1];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 5, y: choice.position.y - 10},\n                {x: outBit.position.x + 17, y: choice.position.y - 10},\n                {x: outBit.position.x + 17, y: outBit.position.y - 18},\n            ], purpleFaded));\n        }\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i < 2*BITS; i++) {\n            const offset = 5;\n            const bit = new RegisterBit(productRegister[i].position.x + offset, 510, 30);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 12th clock cycle\n            bit.inputWires.push(new Wire(countdown, 0, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: countdown.position.x + countdown.outputSockets[0].x, y: bit.position.y - 30},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const from = productRegister[i];\n            const diagonal = 16;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayA = new Display((inputA[0].position.x + inputA[BITS-1].position.x)/2, 25, inputA, false, 30);\n        const displayB = new Display((inputB[0].position.x + inputB[BITS-1].position.x)/2, 20, inputB, false, 30);\n        const displayEnd = new Display(375, 565, finalAnswer, false, 60);\n        displayEnd.size.x = 2*displayEnd.size.y;\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(adder, countdown, startButton, displayA, displayB, displayEnd, clock);\n        this.productRegister = productRegister;\n    }\n\n    drawProductGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.regRight - left*this.regSpacing) - 15;\n        const x2 = (this.regRight - right*this.regSpacing) + 15;\n        const y = 435;\n        ctx.save();\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.75)\";\n        ctx.lineWidth = 16;\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n        ctx.restore();\n    }\n\n    afterRender = () => {\n        const ctx = this.context;\n\n        const cycle = this.countdown.state.count;\n        if (this.startButton.state.bits[0]) {\n            const n = this.numBits - cycle + 1;\n            if (n <= 5) {\n                ctx.fillStyle = \"rgba(255,255,255,0.75)\";\n                const west = (this.regRight - this.regSpacing * (5-n)) - 20;\n                const north = 329, south = 479;\n                const east = (this.regRight) + 22;\n                ctx.fillRect(west, north, east-west, south-north);\n            }\n\n            if (n <= 6) {\n                // product value\n                let productValue = 0;\n                for (let i = 0; i < this.numBits + n; i++) {\n                    const bit = this.productRegister[i + (6-n)];\n                    productValue += Number(bit.state.bits[0]) * (1 << i);\n                }\n\n                this.drawProductGuide(2 * this.numBits - 1, this.numBits - n, \"#33c\", `Product (${productValue})`);\n            }\n        }\n\n        if (this.countdown.state.count == 0) {\n            this.startButton.state.bits = [false];\n            this.paused = true;\n            // but clear the register first\n            const update = this.update.bind(this);\n            for (let bit of this.productRegister) {\n                bit.state.bits[0] = false;\n            }\n        }\n    }\n}\n\nexport default MultiplierExploration;\n","// MultiplierNaiveExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass MultiplierNaiveExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 600, 600);\n\n        const blue = {color: \"rgba(32,32,128,0.75)\"};\n        const teal = {color: \"rgba(96,160,160,1)\"};\n\n        const numBits = 4;\n\n        let inputA = [], inputB = [], outputBits = [];\n\n        for (let i = 0; i < numBits; i++) {\n            const bitA = new InputBit(140 - 35*i, 30, false, 30);\n            inputA.push(bitA);\n\n            const bitB = new InputBit(465 - 35*i, 30, false, 30);\n            inputB.push(bitB);\n        }\n\n        let adders = [];\n        for (let i = 0; i < numBits; i++) {\n            const adder = new Adder(430 - 75*i, 170 + 105*i, numBits, 200, 60);\n            adders.push(adder);\n\n            for (let j = 0; j < numBits; j++) {\n                const and = new AndGate(\n                    adder.position.x + adder.inputSockets[j].x,\n                    adder.position.y - adder.size.y/2 - 20,\n                    20,\n                    0\n                );\n                and.inputWires.push(new Wire(inputA[i], 0, [\n                    {x: and.position.x - 6, y: and.position.y - 20},\n                    {x: inputA[i].position.x, y: and.position.y - 20},\n                ], blue));\n\n                const d1 = 24 + 3*i - (8+i)*j;\n                and.inputWires.push(new Wire(inputB[j], 0, (i > 0) ? [\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: and.position.x + 4 - d1, y: and.position.y - 28 - d1},\n                    {x: and.position.x + 4 - d1, y: inputB[j].position.y + 30 + 8*j, node: true},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ] : [\n                    // don't need the bending\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ], teal));\n                this.components.push(and);\n                adder.inputWires.push(new Wire(and, 0));\n            }\n\n            if (i > 0) {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(new Wire(adders[i-1], j + 1));\n                }\n            } else {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(null);\n                }\n            }\n        }\n\n\n        for (let i = 0; i < 2*numBits; i++) {\n            const outBit = new OutputBit(440 - 50*i, 570, 25);\n            if (i < numBits) {\n                outBit.inputWires.push(new Wire(adders[i], 0));\n            } else {\n                outBit.inputWires.push(new Wire(adders[numBits-1], i - numBits + 1));\n            }\n            outputBits.push(outBit);\n        }\n\n\n        const displayA = new Display(200, 30, inputA, false, 32);\n        const displayB = new Display(525, 30, inputB, false, 32);\n        const displayOutput = new Display(550, 570, outputBits, false, 40);\n        this.components.push(...outputBits, ...adders, ...inputA, ...inputB);\n        this.components.push(displayA, displayB, displayOutput);\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default MultiplierNaiveExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass OnesComplementExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"1comp\");\n        const displayB = new Display(365, 30, inputB, \"1comp\");\n        const displayResult = new Display(200, 350, outputBits, \"1comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default OnesComplementExploration;\n","// RegisterExploration\n//\n// Exploration that shows how a register bit works.\n// Most of these (not multipliers and dividers) have the expanded version on the left and a compact version on the right.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport RegisterBit from './RegisterBit';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\n\nclass RegisterExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputSet = new InputBit(40, 80, false, 30);\n        this.components.push(inputSet);\n\n        const inputWhat = new InputBit(140, 80, false, 30);\n        this.components.push(inputWhat);\n\n        const choice = new ChoiceGate(100, 200, 50);\n        this.components.push(choice);\n\n        choice.inputWires.push(new Wire(inputSet, 0, [\n            {x: inputSet.position.x, y: choice.position.y},\n        ]));\n        choice.inputWires.push(new Wire(inputWhat, 0, [\n            {x: choice.position.x + choice.inputSockets[1].x, y: choice.position.y - 70},\n            {x: inputWhat.position.x, y: choice.position.y - 70},\n        ]));\n        choice.inputWires.push(new Wire(choice, 0, [\n            {x: choice.position.x + choice.inputSockets[2].x, y: choice.position.y - 50},\n            {x: choice.position.x + 60, y: choice.position.y - 50},\n            {x: choice.position.x + 60, y: choice.position.y + 50},\n            {x: choice.position.x, y: choice.position.y + 50, node: true},\n        ]));\n\n\n        const output = new OutputBit(100, 320, 32);\n        output.inputWires.push(new Wire(choice, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputOff2 = new InputBit(250, 150, false, 32);\n        const inputOn2 = new InputBit(350, 150, false, 32);\n        const register = new RegisterBit(300, 200, 40);\n        const output2 = new OutputBit(300, 250);\n        register.inputWires.push(new Wire(inputOff2, 0));\n        register.inputWires.push(new Wire(inputOn2, 0));\n        output2.inputWires.push(new Wire(register, 0));\n\n        this.components.push(register, output2, inputOn2, inputOff2);\n        this.outputComponents.push(output2);\n    }\n\n}\n\nexport default RegisterExploration;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass SignMagnitudeExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30,\n                i == 5 ? \"±\" : String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, \"signmag\", 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default SignMagnitudeExploration;\n","// adderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\n\nclass SubtractorExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const adder = new Adder(200, 200, 4, 216);\n        this.components.push(adder);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x + adder.inputSockets[3-i].x, 60);\n            adder.inputWires.unshift(new Wire(bit, 0));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            const bit2 = new InputBit(adder.position.x + adder.inputSockets[4+i].x, 60);\n            const not = new Not(bit2.position.x, bit2.position.y + 50, 30, 0);\n            not.inputWires.push(new Wire(bit2, 0));\n            adder.inputWires.push(new Wire(not, 0));\n            this.components.push(bit2, not);\n            inputB.push(bit2);\n        }\n        const floatingNot = new Not(320, 200, 30, 90);\n        adder.inputWires.push(new Wire(floatingNot, 0));\n        this.components.push(floatingNot);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 310);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        this.components.push(new Display(150, 25, inputA, true));\n        this.components.push(new Display(250, 25, inputB, true));\n        this.components.push(new Display(adder.position.x, 360, outputBits, true, 40));\n\n    }\n}\n\nexport default SubtractorExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass TwosCompAdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"2comp\");\n        const displayB = new Display(365, 30, inputB, \"2comp\");\n        const displayResult = new Display(200, 350, outputBits, \"2comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default TwosCompAdderExploration;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate } from './Gates';\nimport { BinarySwitch } from './UserGates';\nimport AnswerChecker from './AnswerChecker';\n\nclass FullAdderAnswer extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 400);\n\n        const inputA = new InputBit(40, 50, false, 32);\n        const inputB = new InputBit(160, 50, false, 32);\n        const inputC = new InputBit(250, 180, false, 32);\n        const output1 = new OutputBit(inputB.position.x - 1, 340, 30);\n        const output2 = new OutputBit(inputA.position.x + 19, 340, 30);\n\n        const and1 = new AndGate(inputA.position.x + 10, 125, 50, 0);\n        and1.inputWires.push(new Wire(inputA, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 35},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 125, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 35},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const xor2 = new XorGate(output1.position.x, 280, 45, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 9, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 220, 45, 0);\n        and2.inputWires.push(new Wire(xor1, 0, [\n            {x: and2.position.x - 9, y: 165},\n            {x: xor1.position.x, y: 165, node: true},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 9, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 45, 0);\n        or2.inputWires.push(new Wire(and1, 0));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 9, y: (and2.position.y + or2.position.y + 6)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 6)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 30, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3);\n\n        // Number Display\n        const displayResult = new Display(240, 340, [output1, output2], false, 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\", { color: '#333' });\n        const text2 = new Text(output2.position.x, 375, 30, \"2\", { color: '#333' });\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3);\n    }\n}\n\nexport default FullAdderAnswer;\n","// ClockExploration.ts\n//\n// Exploration of a clock, more meant to illustrate the time-based explorations.\n\nimport Component from './Component';\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\nimport Countdown from './Countdown';\nimport Subtractor from './Subtractor';\n\n// pass the components and output components arrays\nclass CountdownExploration extends Exploration {\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 300);\n\n        const power = new InputBit(150, 60, false, 40);\n\n        const clock = new Clock(100, 130);\n        this.components.push(clock);\n        clock.inputWires.push(new Wire(power, 0, [\n            {x: clock.position.x, y: power.position.y},\n        ]))\n\n        const countdown = new Countdown(200, 200, 5);\n        countdown.inputWires.push(new Wire(power, 0, [\n            {x: countdown.position.x, y: power.position.y},\n        ]));\n        countdown.inputWires.push(new Wire(clock, 0, [\n            {\n                x: clock.position.x + clock.outputSockets[0].x,\n                y: countdown.position.y + countdown.inputSockets[0].y,\n            }\n        ]));\n        this.components.push(countdown);\n\n        const countdownOutput = new OutputBit(countdown.position.x, 260, 30);\n        this.components.push(countdownOutput);\n        countdownOutput.inputWires.push(new Wire(countdown, 0));\n\n        this.components.push(power);\n\n        this.outputComponents.push(countdownOutput);\n\n        // some logic\n        const thisExploration = this;\n        power.onClick = function() {\n            if (!power.state.bits[0]) {\n                thisExploration.update();\n                power.constructor.prototype.onClick.apply(power, arguments);\n                thisExploration.resume();\n            } else {\n                thisExploration.pause();\n                power.constructor.prototype.onClick.apply(power, arguments);\n            }\n            return true;\n        };\n\n        /*\n        // on the right...\n        const countdown = new Countdown(450, 200, 5);\n        this.components.push(countdown);\n\n        const countdownSwitch = new InputBit(countdown.position.x, 125, false, 40);\n        this.components.push(countdownSwitch);\n        countdown.inputWires.push(new Wire(countdownSwitch, 0));\n\n        const countdownOutput = new OutputBit(countdown.position.x, 275, 30);\n        this.components.push(countdownOutput);\n        countdownOutput.inputWires.push(new Wire(countdown, 0));\n        */\n\n        /*\n\n        // on the left...\n        const numBits = 3;\n        const start = 5;\n\n        const powerLeft = new InputBit(100, 50, false, 42);\n\n        const subtractor = new Subtractor(160, 200, numBits, 7 * 24, 80);\n        for (let i = 0; i < numBits; i++) {\n            if (i == 0) {\n                const x1 = subtractor.position.x + subtractor.inputSockets[i].x;\n                const y1 = 110;\n                const comp = new Not(x1, y1, 30, 0);\n                subtractor.inputWires.push(new Wire(comp, 0));\n                this.components.push(comp);\n            } else {\n                subtractor.inputWires.push(new Wire(null, 0));\n            }\n        }\n\n        // Subtractor self-wiring\n        for (let i = 0; i < numBits; i++) {\n            const d = 12 + 12*i;\n            const y1 = subtractor.position.y + subtractor.size.y/2 + d + 10;\n            const y2 = subtractor.position.y - subtractor.size.y/2 - d - 10;\n            subtractor.inputWires.push(new Wire(subtractor, i, [\n                {x: subtractor.position.x + subtractor.inputSockets[3+i].x, y: y2},\n                {x: subtractor.position.x + subtractor.size.x/2 + d, y: y2},\n                {x: subtractor.position.x + subtractor.size.x/2 + d, y: y1},\n                {x: subtractor.position.x + subtractor.outputSockets[i].x, y: y1, node: true},\n            ]))\n        }\n\n        this.components.push(subtractor, powerLeft);\n\n        powerLeft.linkedBits.push(countdownSwitch);\n        countdownSwitch.linkedBits.push(powerLeft);\n        */\n    }\n\n}\n\nexport default CountdownExploration;\n","\nimport Exploration from './Exploration';\n\n// Alphabetized because... idunno\nimport AdderExploration from './AdderExploration';\nimport AdderFailExploration from './AdderFailExploration';\nimport BinaryExploration from './BinaryExploration';\nimport ChoiceExploration from './ChoiceExploration';\nimport ClockExploration from './ClockExploration';\nimport DividerExploration from './DividerExploration';\nimport FullAdderExploration1 from './FullAdderGates';\nimport FullSubtractorExploration1 from './FullSubtractorGates';\nimport GateExploration from './GateExploration';\nimport HalfAdderBuild from './HalfAdderBuild';\nimport MakeALUExploration from './MakeALUExploration';\nimport MultiplierExploration from './MultiplierExploration';\nimport MultiplierNaiveExploration from './MultiplierNaiveExploration';\nimport OnesComplementExploration from './OnesComplementExploration';\nimport RegisterExploration from './RegisterExploration';\nimport SignMagnitudeExploration from './SignMagnitudeExploration';\nimport SubtractorExploration from './SubtractorExploration';\nimport TwosCompAdderExploration from './TwosCompAdderExploration';\nimport FullAdderAnswer from './FullAdderAnswer';\nimport CountdownExploration from './CountdownExploration';\n\nfunction createCanvas(): HTMLCanvasElement {\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    return canvas;\n}\n\n// in milliseconds\nconst UPDATE_TIMES = [4000, 2500, 1600, 1000, 630, 400, 250]\n\nfunction createExploration(id: string, type: typeof Exploration): Exploration | undefined {\n    const element = document.getElementById(id);\n    if (!element) {\n        console.warn(\"Document element \" + id + \" not found.\");\n        return;\n    }\n\n    element.className += \" row\";\n\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.className = \"canvas-wrapper col-auto\";\n    const canvas = createCanvas();\n    canvasWrapper.appendChild(canvas);\n    element.appendChild(canvasWrapper);\n\n    const exploration = new type(canvas);\n    exploration.update();\n    canvas.addEventListener(\"click\", function(event) {\n        exploration.onClick(event.offsetX, event.offsetY);\n    });\n\n    // For animated explorations, have speed controls\n    if (exploration.animated) {\n        const controls = document.createElement(\"div\");\n        controls.className = \"controls col-auto\";\n        controls.innerHTML = `\n            <h4>Speed</h4>\n            <p style=\"margin-top: 0\">\n                Slow\n                <input id=\"speed-${id}\" name=\"speed\" type=\"range\" min=\"0\" max=\"${UPDATE_TIMES.length - 1}\" />\n                Fast\n            </p>\n            <div class=\"buttons\">\n                <button id=\"pause-${id}\">Pause</button>\n                <button id=\"resume-${id}\">Play</button>\n                <button id=\"step-${id}\">Step</button>\n            </div>\n        `;\n        // get those buttons\n        controls.querySelector(\"#speed-\" + id)!.addEventListener(\"change\", function(event) {\n            exploration.updateTime = UPDATE_TIMES[Number((event.target as HTMLInputElement).value)];\n        });\n        element.appendChild(controls);\n\n        const pauseButton = (controls.querySelector(\"#pause-\" + id) as HTMLButtonElement);\n        exploration.pause = function() {\n            exploration.constructor.prototype.pause.call(exploration);\n            pauseButton.disabled = true;\n            resumeButton.disabled = false;\n        };\n        pauseButton.addEventListener(\"click\", exploration.pause);\n        pauseButton.disabled = true;\n        const resumeButton = controls.querySelector(\"#resume-\" + id) as HTMLButtonElement;\n        exploration.resume = function() {\n            exploration.constructor.prototype.resume.call(exploration);\n            pauseButton.disabled = false;\n            resumeButton.disabled = true;\n        };\n        resumeButton.addEventListener(\"click\", exploration.resume);\n        controls.querySelector(\"#step-\" + id)!.addEventListener(\"click\", exploration.update.bind(exploration));\n\n        //exploration.resume();\n    }\n\n    return exploration;\n}\n\n\n\n// Explorations\n// {htmlId: Class}\nconst explorationMap: {[id: string]: typeof Exploration} = {\n    // part 1 (and maybe part 2 as well)\n    'binary-basic': BinaryExploration,\n    'adder': AdderExploration,\n    'gates': GateExploration,\n    'half-adder-build': HalfAdderBuild,\n    'gates-again': GateExploration,\n    'full-adder1': FullAdderExploration1,\n    'clock': ClockExploration,\n\n    // part 2\n    'signmag': SignMagnitudeExploration,\n    'adder-fail': AdderFailExploration,\n    'full-subtractor1': FullSubtractorExploration1,\n    'full-adder-answer': FullAdderAnswer,\n    'ones-complement': OnesComplementExploration,\n    'twos-comp-adder': TwosCompAdderExploration,\n    'subtractor': SubtractorExploration,\n    'make-alu': MakeALUExploration,\n\n    // part 3\n    'multiplier-naive': MultiplierNaiveExploration,\n    'choice': ChoiceExploration,\n    'register': RegisterExploration,\n    'countdown': CountdownExploration,\n    'multiplier-full': MultiplierExploration,\n    'divider-full': DividerExploration,\n};\nlet ALL_EXPLORATIONS: (Exploration | undefined)[] = [];\nfor (let id in explorationMap) {\n    ALL_EXPLORATIONS.push(createExploration(id, explorationMap[id]));\n}\n\nlet isDark = false;\n\nfunction renderLoop() {\n    // TODO: Put this in exploration\n    for (let i = 0; i < ALL_EXPLORATIONS.length; i++) {\n        const exploration = ALL_EXPLORATIONS[i];\n        if (exploration) {\n            exploration.render(isDark);\n        }\n    }\n    requestAnimationFrame(renderLoop);\n}\nrenderLoop();\n\n// some other stuff\nfunction fillInteractiveTable(table: HTMLTableElement | null) {\n    if (table === null) return;\n    const html = `<input type=\"number\" min=\"0\" max=\"1\" size=\"4\" style=\"min-width: 3em\" />`;\n    const fillIn = table.tBodies[0].getElementsByTagName(\"tr\");\n    for (let i = 0; i < fillIn.length; i++) {\n        const out1 = document.createElement(\"td\");\n        out1.innerHTML = html;\n        const out2 = document.createElement(\"td\");\n        out2.innerHTML = html;\n        fillIn[i].appendChild(out1);\n        fillIn[i].appendChild(out2);\n    }\n}\nfillInteractiveTable(document.getElementById(\"fill-in\") as (HTMLTableElement | null));\n\nfunction setDark(on: boolean) {\n    if (on) {\n        document.body.style.backgroundColor = \"#212529\";\n        document.body.style.color = \"#909396\";\n        isDark = true;\n    } else {\n        document.body.style.backgroundColor = \"#fff\";\n        document.body.style.color = \"#212519\";\n        isDark = false;\n    }\n    renderLoop();\n}\n\nsetDark(false);\n"]}