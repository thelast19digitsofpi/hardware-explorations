{"version":3,"sources":["Exploration.ts","InputBit.ts","OutputBit.ts","Adder.ts","Wire.ts","Gates.ts","Display.ts","AdderExploration.ts","AdderFailExploration.ts","Text.ts","BinaryExploration.ts","ChoiceGate.ts","ChoiceExploration.ts","Clock.ts","ClockExploration.ts","RegisterBit.ts","Subtractor.ts","DividerExploration.ts","FullAdderGates.ts","FullSubtractorGates.ts","GateExploration.ts","HalfAdderCheat.ts","UserGates.ts","MakeALUExploration.ts","MultiplierExploration.ts","MultiplierNaiveExploration.ts","OnesComplementExploration.ts","SignMagnitudeExploration.ts","SubtractorExploration.ts","TwosCompAdderExploration.ts","main.ts"],"names":[],"mappings":";;A8BIA;;AACA;;AACA;A3BNA,AIEA,ACAA,AEAA,AEGA,ADLA,AEAA,ACMA,ARNA,AW6BA,AjB7BA,AkBIA,ACAA,ACAA,AfJA,AgBIA,ApBJA,AsBEA,ACAA,ACAA,ACAA,AxBFA,AaAA,AYEA,AXFA,AYEA,AnBFA,AoBEA,APFA,AlBAA;ADKA,AQJA,AEAA,APAA,ANAA,ACAA,ACAA,AaAA,ACIA,APJA,AaAA,AlBKA,A0BCA,I3BFA,AaAA,KbAA,KaAA;AbAA,AIFA,ACAA,AEAA,AEGA,ADJA,AEAA,ACKA,ARLA,AW4BA,AjB5BA,AkBGA,ACAA,ACAA,ACAA,ApBAA,AsBFA,ACAA,ACAA,ACAA,AxBGA,AaJA,AYCA,AXEA,AYFA,AnBDA,AoBCA,APDA,AlBKA,IHFA,ACCA,AECA,IAAA,IHFA,CCCA;ACDA,AQFA,AEIA,APEA,ANHA,ACDA,ACCA,AaHA,ACEA,APKA,ALHA,A0BCA,IjBDA,APEA,ANHA,ASIA,IAAA,GHDA,CHJA,AaAA,EHEA,CbDA;AGQI,AIVJ,ACAA,AEGA,AEAA,ADCA,AEDA,ACCA,ARCA,AWsBA,AjBzBA,AkBAA,ACAA,ACAA,ACAA,ApBDA,AsBDA,ACAA,ACAA,ACAA,AxBEA,AaEA,AYDA,AXOI,AYVJ,AnBMA,AoBNA,AzBGA,IOCA,AIAA,QdHA,ACCA,AECA,EOCA,CIAA;AZOI,AQPJ,AEDA,APEA,ANHA,ACQI,ACCA,AaPJ,ACOI,APLJ,ALOI,A0BRJ,W3BMI,AFDA,ACCA,AcAA,AZEA,CSVJ,APEA,ANHA,ASIA,GLOI,CDFA,ACGI,CDHQ,CAAZ,ACEA,CHHA,CECuB,AFDX,ACCZ,AEII,CDJJ,AFDA,ACCY,AcAZ,CdAA,AcAY,CbAsB,AFDX,AeCvB,CfDA,ACCuB,CAAvB,AcAuB,CfDW,AeClC,CbAA,ADAkC,CcAA,AZElC,CDFgD,CCK5C,CHNJ,ACCA,CcAA,CfD0D,ACCP,CCAnD,AaAgD,EbAyB,CFDzE,EAA2E,AeC3E,AZEA,EYFyE,AZMrE,CDNJ,EAAiG,GaAjG,CZEA,CYFiG,CZMpE;ADNmB,AIVpD,ACAA,AEGA,AEAA,ADAA,AEQI,ACPJ,ARWI,AWYJ,AjBTI,AkBfJ,ACAA,ACDA,ACAA,ApBOsC,AsBTtC,ACAA,ACAA,ACAA,AxBUsC,AaPtC,AYAA,AXOoD,AYVpD,AnBmBI,AoBnBJ,AzBeQ,QDL4C,AFDd,ACCA,AcAc,AZK5C,GJGJ,ASCA,CEhBJ,ATOsC,AaPtC,CZOoD,AFDd,AeCc,EPShD,CAAY,CPTsB,AOSlC,ALJI,CDL4C,AFDd,AeCc,CPSzB,CAAvB,ETDA,AERkC,AOSA,ALJ9B,CDL4C,AHQpC,ACTsB,ACCA,AcAc,CbAA,AFDd,AeCc,CdAd,CCAc,AFDd,AeCc,APShD,CLJI,CKI4C,ALJ5C,CJGJ,CIHI,CJGmC,CSCvC,EAA+E,ETD/E,EAA4D,GSC5D,EAAwG,CTDxG,EAAgF;AGRhC,AQEhD,AEAA,APIA,ANEuC,ACTL,ACCA,AaElC,ACFgD,APS+B,ALJ3E,A0BVR,M3BKoD,AFDd,ACCA,AcAc,AZK5C,EJGmC,ASCwC,EPT7C,CCAc,AUEhD,APIA,ALPkC,AeCc,EhBQT,AERL,CCA8B,AFD9B,AeC8B,CdA9B,AOS6C,ALJ3E,GDLgE,AGMpE,ANEuC,AgBR6B,AZKhE,CECQ,ALPsB,CKOlC,AGG+E,ALJ3E,CDLiE,AUErE,AGFqE,CHEzD,APIW,CHNyB,AUEhD,APIA,ANEuC,AgBRS,ChBQT,CaNhB,APIW,AGG6C,CIP/E,AbMuC,ASCwC,EIP7C,AJO6C,IIP/E,EAAgD,CPIhD,EAA2D,EOJ3D,EAAqE,EPIrE,EAA0F,EOJ1F,EAAwF,APIxF,EAA2G;AHNpC,AIT3E,ACAA,AIGA,ADSI,AEDgD,ACPpD,ARW+D,AWY/D,AjBV2C,AkBd3C,ACAA,ACDA,ACAA,ApBM4D,AsBR5D,ACAA,ACAA,ACAA,AxBSuD,AaGnD,ACHuE,AYT3E,AnBkBmF,AoBlBnF,AzBcgE,MJGrB,ASCwC,EIP/B,APIW,GKH3D,AXKuC,AeLvC,EFDgD,AJO+B,CHHpB,ANEpB,ESCwC,CTDxC,CaNS,AJO+B,CHHpB,EKH3D,CAAY,AIAZ,CJAA,AEDgD,AECpC,CFDoC,APIW,ASH3D,CJAuB,ALGoC,CKH3D,AEDgD,AECzB,CTGoC,ASH3D,CJAkC,CIAA,GJAlC,CIAA,CJAmD,CIAA;AJAjB,AEDc,APIW,ANED,AeLxB,ANMsE,AqBb5G,MjBMoD,APIW,EKHzB,AIAA,GFDc,CFCd,ALGyB,ASHzB,EFDc,CPIW,EKHzB,AEDc,AECd,GTGyB,EKHzB,AIAA,CJAA,AIAA,EJAA,AIAA;AZHuC,AIR7E,ACCA,AERA,AEUA,ADQsC,AEDiC,APIqB,AWa5F,ACxBA,ACAA,AEDA,ApBK8D,AsBP9D,ACAA,ACAA,ACAA,AxBSQ,AaE8B,AYlBtC,AXe6E,AYR7E,ACAA,AzBcQ,MOH8B,AIAA,EZHuC,AFDf,AeCe,AZMrE,CFLK,CSEyB,AIAA,EdJwB,CUIxB,AIAA,CZHuC,AaAA,CLGvC,AIAA,AXG9B,EHPsD,ACEtD,ECDqE,AaAA,CdCrD,AEKhB,EHPsD,CAAA,CECe,AaAA,CbAA,AFDf,AeCe,AZMrE,CAAA,CDNqE,AaAA,CZMrE;ADNqE,AQGtB,AXKS,ACTF,ACEpC,AaE6B,ACHsB,APJzE,ALUI,A0BTR,M3BG6E,AFDf,ACEpC,AcDmD,AZMrE,CFLmB,CFOqC,CEPnC,AOLzB,CRG0D,ACEtC,ECDqD,AaAA,CfDf,AGOtD,CJEwD,ASZ5D,CNI0F,AFDhC,AeCgC,CZMtF,CKVI,CLUJ,CJEwD,CGRmC,AaAA,GbAC,AaAA,CbAvB,AHQb,AgBRa,ChBQb,EAAA;AGRqC,AIPrG,AMSyE,ACjBzE,ARqB8F,AWc9F,AjBZgE,AkBZhE,ACAA,ACXA,ACUA,ApBI+E,AsBL/E,ACDA,ACAA,ACAA,AxBQgC,AcDqE,AYPrG,AnBGa,AoBHb,AzBaiC,KAAA,CJE+B,AEPhC,AOLnB,ALGT,CFE6B,CWCwC,APIqB,CJL3D,COLlB,EHU6E,ANE9B,ASZ7C,EIMsD,CbMT,EMF8B,CNE9B,CaNS,GPIqB,CAAA,COJrB,CAAA,APIqB,EOJrB;AFEjE,AEFiE,AChBzE,ARoB8F,ANEV,AoBtBpF,AlBewB,AaGhB,ANRI,AqBEZ,K5BGQ,AOLJ,CIMqE,APIqB,GKFjF,AIAA,CTEiF,EOJrB,CPIqB,EOJrB,APIqB,EKFtF,AEFiE,AEEjE,GJAgB,AIAA;AZHhB,AKhBR,AIAA,ADoBY,AEHgF,ACf5F,ARmB+G,AWe/G,AGlCA,AnBaQ,AsBLR,ACDA,AtBQQ,AaGI,ACJJ,APFJ,MEMQ,AIAA,CJAC,AIAA,EZJA,AQIE,AVLF,ACEA,AaGE,ACJF,APFT,CEKoB,AIAA,GbFhB,GAAY,CCDZ,AFDA,AeCA,GbAgB,AFDA,AeCA,CPFpB,GAAe,EAAf;ANGQ,AShBZ,ADoBY,AGlBZ,AdUW,ACGC,ACCU,AaIV,ACJA,APFR,ALAA,A0BDJ,M3BGY,AQIA,AVLA,ACCU,AaIV,ACJA,CbAC,AQIA,AVLA,ACCU,AaIV,ACJA,EbAE,AQIA,AXRJ,ACGI,ACCU,AaIV,ACJA,APFX,ALAA,CDCoB,AFDA,AeCA,GdCJ,IFJT,CIEP,EJF2B,CIEgC,CKA3D,CLAA,EJFO,ASES,CTQgE,CAV9C,ASElC;ANGQ,AIlBZ,AKEA,ADiBwB,AEDhB,APIA,AWeR,ACrCA,ACAA,AEAA,ApBiBY,AuBPZ,ACVA,ACAA,AxBiB+B,AaEP,ACDZ,AYlBZ,AnBgBI,AoBhBJ,AzBuBQ,KOJA,AIAA,CZDI,AFDA,ACAmB,AcCnB,CbAC,AFDA,ACAmB,AcCnB,EbAE,AUAF,APIA,ALLE,ACAmB,AcCnB,APFX,ALOS,QSLL,APIA,EGNJ,CIEoB,APIA,AFChB,EKPS,CLOU,CKPvB,CLOI;ADPgB,ASbxB,ADqBQ,AELI,APIA,ANRD,AkBdX,ACAA,AEAA,ApBcwB,ACEJ,AaOZ,ACRgB,APCpB,ALOI,A0BTR,K3BCQ,AFDA,ACEA,AcDA,CHGI,APIA,COJC,APIA,EKCA,AELE,APIA,ANRJ,AeSE,ANPT,ALOS,CSNW,APIA,GKEhB,AIAA,EfTG,CWSS,AIAA,ANPhB,CLOI,CJTqB,CSEf,CLOU,GJTb,KSEP,ALOI;ADHA,AQII,AELA,APIA,AWcZ,AjBtBW,AkBdX,ACAA,AEAA,ApBiBQ,AsBnBR,ACWA,AtBOQ,AaOI,ACJJ,AZIA,MOAI,AELA,APIA,ASCA,CJAC,AELA,APIA,ASCA,EZJA,AQIE,AELA,APIA,ANRJ,ACGE,ACDA,AaOE,ACJF,AZIA,IDJL,AQIW,AVNX,AcKY,ACHZ,CdHA,ECGY,AQIA,AVNA,AeEA,CLGA,ATNC,CEOb,CJTG,EISc,CJTO,IAArB,IISH;ADHI,AQIA,AERY,APIA,ANLb,ACGC,ACFW,AaQX,ACJA,APJR,ALSI,A0BXR,KjBEQ,APIA,CHAI,AQIA,AVNA,ACFW,AaQX,ACJA,CbAC,AQIA,AVNA,AcMA,ACJA,EbAE,AQIA,AXTJ,ACGI,AcMA,ACJA,APJX,ALSS,CFTc,EAAE,CDCT,ACDU,CCGV,AaAA,AZMZ,GKTJ,ALSiB,CFTQ,EFDlB,ASCI,GTDkB,CIUL,CAAC,EJVQ,CAAC,EIU9B,CJVyB,CSClB,CTDJ;AGMC,AQCQ,AEDZ,APIA,ANHA,ACHI,AuBTZ,AtBMqB,AaMD,ACDR,APLS,ALUhB,KOJG,ATNA,AaMA,CZDI,AFFA,AeEA,CbAC,AFFA,AeEA,EbAE,AUAF,APIA,ANHA,ACHE,AeEA,IHAP,APIA,AGTa,ETMb,ASNa,CIKD,APIA,ENHE,MAAd;AGHY,AQQZ,AELI,APIA,ANHJ,ACNY,ACCZ,AaSA,ACRY,APHG,AqBDvB,K3BIQ,AFFA,AeEA,APHJ,CIMQ,APIA,COJC,APIA,EKCA,AELE,APIA,ANHF,AELA,AaSA,ITDM,CKCX,AENY,AEMZ,ETDc,ANHd,CWIa,ALFD,ASEC,EfJE,EELf,GAAoB,CFKC,AELA,CFKC,UAAP,CAAkB,IAAlB,CAAf;AGCA,AQII,AELA,APIA,AW7BZ,AjB0BQ,ACFA,ACJsB,AaUlB,ACJJ,AZIJ,EAAA,IOAQ,AELA,APIA,AJTkB,AaUlB,AXAR,CSLS,APIA,AJTkB,AEU3B,EDJS,AUDE,APIA,ANHF,ACFA,ACJoB,AcMpB,CLIG,ATVa,AaUb,EJAE,AIAA,CJAC,AIAA,CZJX,AFFA,AeEA,EZIJ,CDJiB,AFFA,AeEA,AZIjB,COAc,AIAA,CfJV,CIIJ,EJJsB,CIItB,CJJI,WIIJ;ADHQ,AQES,AEND,APIA,ANAZ,ACFI,ACLwB,AaSf,ACFT,APRR,ALYI,A0BZR,KnBUQ,AENA,APIA,ASEA,CZFI,AUVgF,AZQhF,ACLwB,AaFmB,ACS3C,CHAJ,AXP6B,Aaa7B,EfNK,AEP0B,AODnC,CNQY,AaAA,EbAE,AFFA,AeEA,EfFE,KADC,EQLjB,GAAe,CTQX,GAAwB,EAAxB,CAJ4E,CAM5E,CSVJ;ANOiB,AQMb,ALDA,ALLI,AuB1BZ,AtBoB6B,AcMR,APDb,ALOA,KDNA,ADNoB,AcMpB,CfAI,ACNJ,CAL+C,CSiBzC,ATXN,AEWI,CEDC,AGNA,ALOA,CHNG,EAAE,CAAC,CUMC,APAF,CEDV,EKCe,AFPf,CHMc,ALLJ,EQDM,CEOG,GAAG,ALDtB,CFCA,EOAA,APAuB,OAAO,KAAP,CAF3B,CAGI;ADHA,AQGA,AELA,APIA,ANFA,ACNa,AcUb,ACJA,APLiB,AqBLzB,I9BUQ,CCNA,CQCiB,CAAC,CIGZ,AEMA,CZJD,AQGA,ALDA,AUFA,APLe,CTKd,ASLU,CTKT,GeIK,EZJZ,AUFc,AbEd,AgBAA,CDIe,EZJA,AUFa,API5B,ANFe,AgBAA,ELGf,AICmB,CTFD,CHFlB,AaAA,CLGoB,AELa,AbEjC,AeIsB,CJAlB,AEN8B,GEMlC,CFNiC,CAAL,CAAY,CPIxC,EOJ4B,CAAgB,UAAA,CAAA,EAAC;AVI7C,AQEK,AEN4C,APMjD,ANHA,ACFA,ACPA,AaaA,ACHA,APPuB,ALSvB,IJHA,EWGK,AFTkB,CESjB,AFTkB,ENOnB,AQEG,ALAH,ALLA,ACPA,AaaA,ACHA,APPqB,CESjB,AXHH,CAAC,AIGA,ESN0C,CPMjD,CKAc,CPAF,CEAC,ANHb,CaHiD,CFMxC,CAAU,AXHH,CGChB,AQEQ,AVLR,AcMA,ACHA,CdVA,ECUoB,AQEG,AVLH,AcMA,ACHA,CLEZ,ATZa,AacjB,CZJJ,AHDA,ACFA,ACPsB,AcUtB,CbjB6F,AHQjB,ACTL,AeCsB,AZmBtF,CDDP,AQCyB,AXDzB,ACJwB,AeIxB,AZCwB,COApB,IPAG,CAAuB,IAAvB,CAA4B,KAAK,QAAjC,KAA8C,KAArD;AOA4B,AEN0B,APOlD,AJbmB,AaclB,ANXW,ALUnB,A0BdL,G1BSI,ESFgC,AJH5B,CES4B,AEN5B,AXNuB,AaclB,CJFwB,ATZL,AaclB,EJFyB,ATZL,AaclB,Cbdc,Aacb,MAAL;AZFJ,AQAI,AELJ,APOI,ANFJ,ACJA,ACR6B,AacZ,ACFjB,APRA,KEOoB,CLGhB,AJdyB,AacZ,CJDb,ATb0B,AacZ,CZFZ,AHAF,AgBAE,CHLD,AZCA,ACR2B,AacZ,ANVf,CHUG,ANFF,AeEe,ETAX,CNFD,ASRT,CIGA,CVKa,AaAA,CPRD,CIGC,AbKA,CGAG,AHAF,AgBAE,CfJhB,GAAkB,CEIG,AHAZ,AgBAY,ChBAD,ACJpB,GEIyB,AaAA,ChBAD,CAAC,EGAI,AaAA,IbAR,AHAD,AgBAK,CbAzB,EaAoC,CAAf,ChBAe,AgBApC,GhBAS,CAAT;AWCK,AELD,APIS,ANCb,AK9BR,AJ0BQ,ACTsB,AaclB,ANVS,ALWjB,EAAA,EJFI,AK9BR,CC6BQ,AJZqB,AaaD,AO5B5B,CX4Ba,AELD,APTmG,AJCvG,AOIa,ALWjB,COFU,ALGN,ASDI,ANXU,ALWlB,CChCJ,CM8BgB,AVJH,AQLW,CESP,AELD,AbKF,ASTM,CTSL,CaLG,IFKN,APER,CAAA,GSRiB,EZEb,GDIA,ACJqB,CDIC,ACHlB,EGKR,GAAA,CJFI,EAA8B,OIEtB,CAAZ,EAAuB,CAAvB,EAAgC,GJFkB,EAA9C,EAAkD;AGAlD,AQAiB,AEJb,AbKA,AK/BZ,AJ2Ba,ACTL,AacK,ACFL,APTmB,ALYnB,MOHiB,AEJb,AbKA,ACJC,AcKA,ANXc,CESD,AVHZ,AcKA,ANXc,ENSf,AQAe,AVHZ,ACTH,AacI,ACFJ,APTiB,ALYjB,COHgB,AVHjB,CYDK,AbKA,EGDA,AUJE,AbKA,AgBDF,CbAC,AUJE,AGIF,CLAgB,AIEtB,EZFS,AaAA,CbAb,AaAA,AZGA,COHqB,ATZrB,AEee,CDHC,AQAe,AKAf,CbAC,AQAG,AKAH,CdZC,CEelB,CDHoB,AQAa,ATZjC,AcYoB,AZGA,IDHpB,AaAA,EbA0B,AaAA,CbAC,AaAA,EbA3B,AaAA,EbA+B,AaAA;AbC3B,AQDA,AENS,APUb,ANJkD,AK9B1D,AJ2BmB,ACRd,AaaoB,ACDb,APVQ,ALYS,A0BnC7B,KnB8B4B,AEJpB,AbMA,ASTA,CRMW,AcKM,AXCI,COFjB,AVJQ,AcKM,AXCI,EECjB,ALPS,AcKM,AXCI,CWDH,AXCD,CDFX,AaAA,CX/BjB,SCkCQ,EHHI,AaAA,CbAkB,AGGF,AUHE,EVGtB,EHHI,AaAA,CbAuB,AaAA;AbCnB,AQDH,AEHL,APOA,ANFA,AKvBJ,AJiBQ,AcKA,ACAI,APVR,AalBR,AlB6BmC,A0BfnC,I9BeQ,AsB7BR,CrBsB6B,AcID,CJCf,AVLL,AcIA,AXG2B,COFrB,APEsB,CDDpB,AaAA,CbAC,AQDD,AEHH,APOA,AUHI,APVJ,ALWyB,A0Bf7B,CnBaQ,CRCE,AHCJ,AgBDI,CbAC,AHCJ,AgBDI,AM5BpB,CbkBQ,ETWA,CWFI,AEHJ,AbKY,ASXA,ETWZ,CGDW,AUJI,AGIJ,ChBCK,ASXhB,CqBJR,CxBiBQ,CHHuB,AUJvB,AGIuB,CbAC,AUpB4D,AbqBpF,AgBDwB,AcdX,CjBWb,APMqB,EHHM,AGG3B,AUH2B,GbAhB,AaAA,IbAuB,AaAA,KbAK,AaAA,GbAC,AaAA,CbDb,AaAA;AbEnB,AQFS,ALKjB,ANFH,AKvBD,AJkBC,ACTD,AaeI,ACFQ,APVR,AanBR,AlB6B4B,A0BdxB,E5BCA,CFnBJ,CAmCI,CIHI,COFiB,AmBZf,CnBYgB,CREV,AaAA,CbAC,AQFW,ALKf,ASDA,ACFI,APVJ,CEQgB,CREV,AEtBf,AHSA,Acae,CbAC,ADbhB,AcagB,AcdJ,GnBYkB,ANpB9B,AyBQkC,CzBRtB,AIYR,CNUiB,AEtBrB,AWsBqB,ELFI,ALKrB,ADzBmB,AIYJ,CEQgB,ANpBnC,CFsBgB,AQFQ,ATXxB,AcagB,CbAU,AGGJ,ADzBY,AHSlC,AaeI,ACFsB,CbAX,AaAA,Acd2B,CnBYL,ALKjC,AwBjBuC,CfgBlB,CZFG,AEtB5B,AUyBQ,ACHoB,APVxB,EJZ4C,AHShD,GAAA,KGTA,CyBQkC,CzBRgC,AyBQT,G5BClD,CGTP,EAA8E,AHS9E,EAAoC,A4BDF,CAAlC;A3BY+B,AQAvB,AEDJ,APOH,AD7BM,AHaH,AaeK,ACLsB,APP9B,AapBL,AlB8BK,A0BdD,G1BYA,EOJwB,CAApB,AIQK,CZLD,AYKE,ACLF,CdVE,CWSD,ARtBF,AU4BK,AehBL,CfgBC,EbfM,AoBjBlB,GjBIW,AHaU,A4BDjB,GzBZwB,EAAjB,AHae,CWSlB,GAAoB,CAChB,GXVS,CAAc,CAAd,GAAkB,KAAK,IAAL,CAAU,CAAV,GAAY,CAA3C;ACcI,AQDJ,AEHK,ARnBL,AJmBJ,ACTI,AacW,ACDP,AMjBR,AQGH,E7BUG,A6BRJ,IjBQa,AEKM,CFLL,AEKM,CbdN,CSYD,AEHG,ARnBH,AUwBS,CFLV,AZAR,CEIa,AFJb,ACTa,AcaA,AMjBb,EPkBsB,CbdN,EacO,CVxBnB,EHUiB,AoBJrB,CjBNoB,AJmBpB,AqBbY,CrBaZ,AqBbA,CXgBI,CRCI,AaAA,AMjBe,CnBiBG,AaAA,AMjB1B,CXgByB,CACjB,AWjB0B,CrBalC,ACTgB,CAAc,CAAd,CDShB,AqBbA,CnBiBQ,AaAA,CbA0B,ADbA,AcaA,AMjBc,KpBIT,GDShC,AqBbP,CpBIkC,CAAU,AoBJsB,CrBalE,ACTkC,EDSI,CCTQ,AoBJ9C,CpBII,CoBJ4E,GrBahF,EAAqD,GqBbrD,EAAgG;AnBkBpF,AQDH,AEJM,APUf,ANHA,AKzBQ,AJmBJ,ACTA,AaaI,ACAI,APVZ,AaVO,AlBoBP,EEKA,ANHA,ASZA,ALUA,EFbI,CaYqB,CJAhB,AEJM,ARlBP,AUsBJ,ANTJ,ALUA,CODU,AEJM,ARlBP,AHUF,AOGP,ALUA,CDAY,AFJJ,ACTA,AcaI,CbAC,AQDD,AEJM,APUlB,AD5BW,AWuBE,AMpBN,CXmBC,AEJW,APUnB,AD7BoB,CFwBL,AaAA,EhBEf,ACNa,CDMb,CaPwB,ASfjB,CbUP,ALUA,CFbI,AOGJ,ALUA,CDAsB,AFJd,AeIc,AMpBE,CTeL,APUnB,ALTmB,CYDU,APU7B,AJlBoB,AoBPb,CTeW,CVKQ,AaAA,CbAC,AHE3B,AgBF2B,APV3B,ALUA,CSL+B,AbO/B,CaPkB,AZCV,CEIsB,AaAA,APV9B,ALUA,CFbI,CWQ+B,APUnC,CHLsB,AaAA,CbAP,AHEf,ACN8B,AeIf,CVKf,EHLqC,AHErC,AgBFqC,EfJF,CQN5B,ALUA,EDAmC,AaAA,CPV1C,ALUA,CHJ8B,CEIa,AFJF,AeIE,APVL,ALUA,CDDJ,AaAA,CVMlC,ANHO,ECNuB,AGI9B,CHJ8C,CAAhB,AQN9B,ALUoE,CHJhE,CDMJ,ASZqD,CRMH,CDM5B,EIFtB,EAAmF;ADCvE,AQFG,AEJP,APWJ,AD5BI,AJmBA,ACTJ,AaeA,ACFQ,APVR,AaRA,IpBKA,AOGA,CIGoB,CFKT,AELX,ARhBI,CMqBQ,ANrBP,AHUF,AOGA,CNUK,AGKJ,AJlBA,AcaI,APVJ,CNUK,AQFK,ANrBP,AUyBF,ACFI,AMlBJ,EnBkBM,AaAA,CbAC,AaAA,APVZ,CEQkB,GAAC,ATXnB,CCaiB,ADbJ,AcaI,AMlBjB,ChBuBc,CSHd,COpBgB,CnBkBJ,AGKa,AJlBzB,AcaY,CbAU,AGKtB,ASHkB,ACFI,CbAX,ADbQ,AcaR,CDEX,EZFwB,ADbxB,AcawB,EdbA,KAAK,IAAL,CAAU,CAAlC,EAAqC,KAAK,IAAL,CAAU,CAA/C;ACW8B,AQA1B,AEDJ,ARtBgB,AJsBZ,ACTJ,AaeH,ACLiC,APP9B,AaRI,AQIZ,I5BCQ,A4BDF,CnBUuB,ANtBrB,CMsBA,AWdI,CnBeA,ADVD,AcUC,AMfC,CpBKD,AOGE,CIMD,ASdE,CADS,ErBeN,GQNG,CRMC,A6BVJ,C5BCV,COGiB,CqBJJ,C5BCI,A4BDH,C7BUJ,CYAV,AZAoB,E6BVP,CjBUQ,AXTC,AOGE,CqBJJ,CjBUpB,GXTiB,AOGY,AqBJhB,C5BCe,C4BDF,ErBIT,CPHA,CAAgB,A4BDpB,C5BCI,C4BDe,CrBIM,EPHA,C4BDzB,EAAyB,GAAzB,ErBII,AqBJ0B,C5BC1B,EOGkC,AqBJtC,C5BCqC,C4BDF,GrBIQ,AqBJ3C,CAArB,GrBI2D,CPHnD,COGiB,GAAgD,KAAK,CRM5D,CAAN,EQNJ;ANWC,AOlCT,ACiCQ,AEHA,APQA,ANJA,AKtBA,AJkBC,ACTD,AyBrBR,AXkCS,APVD,AaRI,AlBgBJ,IMhCR,ARqBQ,AyBrBR,AlBwBQ,CNnB6F,CA+B7F,AmBpBI,CpBKD,AOGA,AaRE,CTcC,AXTF,AOGA,ALQA,COCC,ALKA,ANJA,AKtBA,AiBIE,AlBgBF,GKRL,CHcS,AD1BT,CC0BU,AFNA,CSFG,AJNC,CTUd,AKtBY,AHSZ,CIiBa,ANJA,AEZT,CWQY,APQhB,CKLA,CLKgB,AGdG,CCxB3B,AJsCyB,AJhBT,CSWU,CEHG,CFGrB,ALKoB,AJhBT,AOEG,CAAU,ALQxB,CSFwB,AbIxB,ASVc,CTUS,AIFA,CJEvB,A2BlCR,CrBsCiC,AJhBT,AOES,CIMzB,AbI0B,CAA1B,EAA6B,AEZlB,CAAU,CAAV,GFYuB,AEZT,CIgBL,CAAgB,CJjBpC,EAEI,AOCJ,CTU6B,ASboB,CTaR,ASTzC,CHaA,AJfO,EIeqC,CAAC,AJfnC,CFWV,CMIA,CNJgD,CMIC,CJflC,GFWsC,CEX3C,CAAU,CAAV,GFWsC,AEXxB,CFWoC,EEb5D,EAGI,EFUJ,GEVS,IAAL,CAAU,CAAV,GAAc,GAHlB,EAII,KAAK,IAAL,CAAU,CAAV,GAAc,GAJlB;AQrBR,ACkCK,ALKO,AD1BA,AHcP,AaYD,AYvCJ,ALcwB,AlBmBhB,A0BZR,EfkBI,CbxBA,CEkBI,CkBnBA,CjBDI,CAAC,ADoBF,CAAC,CCpBG,AyBQN,CxBkBS,EFNV,CCrBY,AU2BhB,CTAkB,ASAlB,GTAqB,KAAK,CSA1B,CAAA,EelBJ,CAA2B,EAA3B,CfkBI,CelBmC,CxBkBd,CAAgB,ASArC,CTAqB,CAAb,AwBlBZ,EAA+D,MfkBpD,GAAP,EAAoC;ALvCxC,AG+BQ,APSI,ANLJ,AKrBI,AJiBJ,AcSA,AYxCR,AXoCQ,APVA,AaPA,AlBeA,A0BZJ,IfkBI,ANdA,ALQA,ECpBI,AyBQF,CzBRG,AU0BF,ANdA,ALQA,CHHC,AcSA,ANdA,ALQA,CSHC,AbIA,AKrBE,AWsBF,AMjBA,CZnBb,AJwCkB,AqBxClB,EZwCQ,CFTS,AbIA,AsBhBT,AQGS,CjBSC,AbIA,ACJV,CKSe,CIxCvB,AT+BoB,A0B/BpB,ALmBoB,AQGA,CjBSC,AbIA,ASTb,CC1BR,AG+BQ,APSkB,ANLlB,A2BnCR,CrBwC2B,AFNnB,CSHgB,AbIA,ASRZ,CIIa,AbIA,CgBCjB,AZFkB,CEMK,AFNL,CSHE,APSI,ANLJ,A8BbA,CdcC,AZFH,A0BZG,EdcrB,APTW,CIIX,ATGkB,CEMC,ANLM,CaJC,APSI,COTH,CJJX,CIIhB,ATGuB,CEMJ,COTY,APSI,CAAhB,EFND,CJCE,ASRT,AqBLC,CxBkB4B,ANLJ,ASRZ,AqBLY,CxBkBjB,CwBlBP,CAAhB,CxBkBgD,AFNhB,CEMV,AGbd,CTQJ,EAA4C,AID1B,CJC2B,CMKK,AGbhB,CHa9B,ANLJ,CMGiD,AFJrB,CEOxB,ANN6C,CIDrB,KAAA,CKPxB,GAA2C,CLOnB,CAAV,GKPkC,ALOxB,EAAV,GAAe,EKPc,CAAa,GLOrB,EKPQ,CLOL,CKPtC,GACA,KLMmC,EKN5B,CLM2C,IKNtC,ELMhB,KKNW,CAAa,KAApB,KAA8B,QAA9B,GAAyC,KAAK,OAAL,CAAa,KAAtD,GACC,MAAM,GAAG,SAAH,GAAe,MAH1B,CALiD,CASjD;ANOA,AOrCwB,ACoC5B,AEJQ,AbIA,AKxBQ,AJoBR,ACLP,AaeG,AY1C+B,ALoB3B,AlBeJ,EMnCwB,ACoC5B,AgBpCmC,EvBmC/B,CCvBA,CJoBI,AqBZA,CAAC,AlBeF,CWOG,AXPF,CDEC,AFLE,AqBZA,CrBYC,CShCgB,AGgCf,AbIA,A2BpCsB,CjBAP,ACoC5B,AIMc,AY1CqB,ChBoCnC,AWjBgB,EPuBC,EXPb,CJCI,CAAa,ACJb,CcUc,AXPF,CDEhB,ACFA,CDEkB,AQDtB,AVJyB,CUIzB,AXAQ,CaJA,CAAmB,CVKvB,AHFiD,CGE1B,AHAnB,ACLsB,CcUb,CL1CW,AGgCpB,AEUuB,CJN/B,AEJgC,AEUf,CL1CW,CTgCH,CUIzB,AVJoC,AcUD,GY1CA,CjBAP,CAAA,AK0CY,AY1CL,C1BgCV,GAAoB,AcUV,CJN3B,AIMqC,CAAV,AY1CA,CAAA,EZ0CY,CAA3C,GJNJ,AVJyB,EUIC,CVJ+B,OUIzD,EAA0C,AVJlC;AEMA,AQDJ,AEJQ,APSJ,Ac1CZ,AfiBQ,AJgBC,AcUD,ACNA,APNA,AaVI,AlBeJ,A0BbJ,IVvBJ,AX+BQ,ALKA,CHLA,CEOI,AmBjBA,AQEJ,C3BeK,AMPF,AaVE,AlBeF,A0BbF,CjBUO,AEUF,ANZF,ALKA,CDEG,AULE,ARhBJ,AWoBA,AMhBE,ChBqBC,COTG,APSF,ALTF,AcUE,CFVG,CAAC,AGIJ,CbCG,AErBZ,AU0BY,ACNF,Acdd,CxBmBiB,COTG,AiBVN,CzBNG,AWoBA,APNb,ALKA,CDEO,AaDP,CbCiB,AiBtCzB,AL2CyB,CZLV,AULa,APSF,AULF,APNA,COMC,EbCI,AULA,CVKd,AULK,AGIQ,GbCG,AULE,AEUb,CZNW,AYMG,ACN1B,APNA,CMYY,CTDC,AULa,CHJC,APSE,AULF,CHJhB,AEUmB,CCN9B,EAA+B,CHJC,CPSnB,ASCsB,GTDG,CAAlC,ASC0B,CAAU,CFXZ,APUa,ASCX,GAAY,CAA1C;AZJI,AOtCR,ACqCC,AEJW,AC/BhB,ARwCgB,ANLJ,AoBtCZ,AfkBY,AJgBA,ACLR,AaeI,AY3CJ,AXqCQ,APNJ,AabY,AlBkBZ,A0BbA,E5BKJ,CSOA,CIQI,ANZA,ALKA,A0BbA,CRLA,CnBoBI,AErBA,AJgBA,CEKC,AYKF,ANZA,ALKA,CSHK,AEUJ,ANZA,ALKA,CDEG,AULE,AZAF,CDIG,AKpBF,AJgBA,CSjCZ,AGiCe,AXLf,AyB5BA,AXqCa,AcdF,CxBmBK,ADzBF,AHWd,A4BLY,CzBNG,CLoBG,AIDd,CAAW,CSHK,AiBVhB,CxBmBiB,ANLA,AeMjB,AepBa,CzBNH,AU0BI,CdVV,AGGW,CSHJ,AJFX,ALKgB,CSHK,AXLzB,AEQI,CSHW,AbIW,ACJD,ACLzB,AaeI,CTDY,AGXO,ALKA,CWOC,ACNhB,CHJmB,AGIA,EfJG,AcU1B,AXPuB,CMpC3B,AJ0CgC,AFNJ,CMpChB,AKsCwB,ACD5B,AZDJ,CFRJ,AagBI,ACP4B,CPN5B,CTMiB,ACJI,CDIY,ACJD,ACLpC,CFSqB,CUrCrB,AVqCQ,A2BrCR,CAAY,CjBAyB,AJ0CzB,EAA+B,ALTlB,A6BVc,EAAtB,C7BU4B,A0BjC7C,CzB4BS,CyB5B4B,AGuBO,G5BK5C,EAAwB,EDKC,GAAgC,G6BVrD,M7BUI;AEGmB,AULK,AC5BpC,ARwCoB,Ac5CpB,AfiBqB,AJkBZ,ACLD,AcSQ,AYvChB,AnBiCQ,AaTA,AQCA,IFzBR,AnBiCQ,CNIA,AEpBA,EQeI,AJCD,COMK,APNJ,CK7BH,AEmCQ,AMfJ,CFxBb,CJuCmB,CAAC,EMfZ,EFxBR,AXiCQ,CAAa,AaTA,CRpBrB,AMJA,CNImB,AEmCA,CFnCnB,EAA8B,CAA9B,AEmC+B,CAAC,APNxB,CK7BiC,AcJzC,CnBiC8B,COMK,CAAC,CFnCpC,EAAuD,AL6BpB,COMK,GAAC,CAAN,GPNL,COMc,APNA,CK7B5C,AEmCmB,APNX,COK4B,CFlC4C,AL6BjC,KAAK,QAAL,CAAc,CAArD,CK7BR,EAA6G;AXsCrG,ASxCR,ADoCK,AEFI,AC/BL,ARwCgB,ANNR,AoBvCkB,AfqBtB,AHUA,AaeA,ACNQ,AYxChB,AnBkCQ,AaTI,AlBaJ,A0BZH,EV1ByB,ERE9B,AG4CQ,ANZA,EK7BE,AQoBE,CPqBD,ANZA,CMYC,ACNI,APNJ,CNQC,AErBA,AWmBI,AZFJ,CEOO,AgBpBJ,CRpBD,AdkCE,AoBvCa,AJwCX,CIxCW,AEyBZ,CAAC,AlBaF,CUjCC,AViCA,CJCG,ASLb,CTKc,AgBCE,CXnBhB,AUyBA,AXRa,CUjCC,AQoBJ,AlBaV,CJCiB,AsBfJ,ChBqBS,ANNlB,AKlBY,AUyBA,ACNL,AZFK,CQpCxB,AIsC6B,AZFJ,CDIjB,AHHoB,AgBCT,ChBDU,CMMM,AFPP,CDIC,AYIA,ACNE,ChBDC,CGGxB,AiB1CsB,CfqBE,CCwBQ,Ac7CV,AhBsCG,CJCG,AeOZ,CfPa,AKlBF,AUyBA,CDzCjB,CAAU,ARwCgB,CQxC1B,ARwCgB,Cc7CJ,AfqBS,AUyBf,CDzCO,AMLD,AfqBU,AUyBA,CDzCtB,ARwC+B,ASCzB,CTDU,ADxBV,ADiBI,CUjCM,AViCS,EEOU,ANNrB,AKlBa,AUyBA,CTDS,ANNN,CclC9B,ARwCE,CDxBZ,CShBgC,AViChC,EAA2C,CUjCjC,AdkCN,AIDwC,EUjCP,AdkCW,AeOhC,AXRhB,CJCiD,CclCvC,AViCsC,CUjCpD,AdkCQ,AeO6C,EfPI,OeOrD;AL7CJ,AECJ,AEII,ARwCa,ANND,AkBrChB,ACAA,AdoBQ,AgBrBR,ApBkCQ,AsBlCR,ArB8BQ,AaeA,AY9CJ,AXqCgC,AYtCpC,AnBmCK,AaTO,AlBaA,GKlBR,CSlBJ,ACAA,AEDA,ApBkCQ,AsBlCR,AR6CQ,EDzCE,AQoBE,AlBaA,CHHD,AcWA,ACTC,CNrCR,ALsBU,AJaF,AcWA,AY9CR,CrB0CY,AFJD,CwBvCf,AxBuCgB,CFPD,CFQO,CUvClB,AiBAA,CtBsBgB,CCuBG,AJdf,AoBNa,CZxBb,AiBAA,ACFR,AxBuCY,CUjCS,ATiBE,AUwBf,AOrBe,AlBaA,CiBrCvB,AOFA,CtB8C2B,ALVnB,Ca9BgB,AdkCM,CKjBH,CKrBnB,ALqBoB,AJaF,AsBlC1B,AIAQ,AvBqCoB,CMrCpB,AVsCyB,A2BtCzB,CbIoB,ARwCI,CY3ChC,AboBuB,CAAS,CKrBxB,AiBAA,CjBAA,AiBAA,ErB4CmB,Aa3C3B,CdoBqC,ADgBd,CMrCf,AiBAA,AvBqC8B,CAAf,CMrCT,AiBAA,CrB4C6B,AFPF,CAA7B,EAAgC,CChBrB,AJaf,CSlCA,ALqBA,AsBrBA,CbIgB,CJJF,AIIe,ARwCd,AqB5CD,CbIE,AViCyB,CEOG,CI5C5C,AIIgC,AaJhC,CbIiC,CJJd,AiBAA,EbIiB,CJJpC,AiBAA,EbIgB,AViCoB,CAAe,CUjCV,AViCL,CMrCb,AiBAA,CvBqC+B,CAAlD,CUjCY,CJLpB,AiBAA,CbKmD,EAA/B,CAApB;AXqCI,ASzCR,ADsCI,AEFI,AC/BJ,ARwCgB,ANNA,AkBtCpB,ACAA,ACFI,AfuBI,AgBtBR,ApBmCQ,AsBnCR,ArB+BK,AaeG,ACNC,AY1C2B,ANwBf,AlBgBZ,A0BZL,EnBYA,AGjCA,AcPgC,AE4BhC,C5BCA,CDQI,AcWA,CC3C6F,AMmB7F,CNmBA,CFpCC,Ab8BE,AcWA,CDzCD,ATiBI,AJaF,AcWA,CZLC,AULA,AiBVF,ClB1BX,AZuCoB,A8BbR,C9BaS,AoBxCjB,AQDgC,CjBwChC,ANhBc,AuBxBkB,CzB2CnB,AQHb,AXCmB,CGEL,AYKV,CVxBa,AUwBF,CH9CnB,CTyCqB,AHFM,ACJnB,CEMA,ASzCR,AEKI,AdkCwB,CaHpB,AC/Ba,ATiBI,AyBIrB,C3BeoB,AEnBE,AUwBF,CZLC,CQHrB,AEFsB,CFEtB,AGjCA,ATiBiB,AyBII,C3BeG,AULpB,AC/BkB,ATiBI,AUwBX,CAAU,CfPN,AoBxCnB,AL+Ce,CfPkB,AoBxCrB,CjB0CR,AWpCsB,AdkCP,CWDnB,ANhB+B,AUwBJ,AepB3B,C3Be8B,CAAC,AHFM,CWDrC,AIQI,CZLA,AiB1CJ,AQDgC,CbgDA,CZLG,AHFM,AoBxCJ,AL+CjC,AahD4B,C5ByCU,CKjBzB,CAAb,CAlB0E,CAmB1E,CSlBkB,AcPU,CjBwCzB,AGjCwB,AcPC,GjBwChC,EAAoC,CXCC,CAAkB,CAAlB,EAAqB,CclCpC,AdiCO,EcjCe,CAAtB,CAAtB;AXqCQ,AOxCJ,AEFwB,ADuCxB,AEFH,AC/BD,ARwCgB,ANNA,AkBvCpB,ACAA,ACFI,ACCJ,ApBoCQ,AsBpCR,AR+CQ,AY7CA,AlBgCR,AaRQ,AQEJ,ElB5B4B,AEM5B,EHiCI,AVHA,AcWA,EenBE,CnBWC,AVHA,AcWA,CL7CG,ACqCF,ASxCR,AnBqCQ,AcWA,AY7CE,ClBgCd,AaRa,ChBoBO,ANNA,AkBvCpB,ACAA,AEDA,AEAA,CpB0CiB,AS1Ce,AZwCX,ACJb,CWpCwB,ADuCxB,AGjCM,Ab8BE,Ca9BD,AdkCQ,AoBzCnB,AXmCJ,CMaQ,CAAW,CL7CG,AQDtB,ACAA,ACDQ,ACAR,AEAA,AIEsB,CbIlB,AdkCuB,ACJN,AqBVb,CRpBY,AdkCQ,AkBvC5B,ACAA,AEDA,AEAA,CbEyB,AiBAA,AG0BF,CpB1Bf,AJ4CsB,ASCN,AY7ChB,ALwBgB,EF1BhB,AU4BkB,ChBtBtB,AMNI,CjB0CI,AGIuB,ASChB,CZLY,AWpCJ,Ab8BX,AcWa,CfPN,ACJO,AcWX,CfPkB,AoBxC7B,AnBoCA,CDIe,AoBxCf,AE0BA,CnBgBI,AS1CoB,AN8CQ,ALVP,AcWF,CZLK,A2BdF,ClB5BF,AZwCS,A8BZN,CxBkBQ,Ac9CnC,AL+CA,EK/CM,AnBoCwB,AcWF,CfPS,CclCzC,AdkC0C,CYxCd,AN8CgB,CM9ChB,CG+CS,CTDU,Ac9C3C,Cd8CgC,Cc9ClB,AnBoCW,CAAc,AcWX,CTDmB,ALV/C,AcWsC,AenBpB,CxBkBN,Ac9CZ,AL+C4B,AenBa,C7BQC,CmBpCvB,CpBwCc,AeOO,CfPW,CAAlB,AoBxCjC,AU4BkB,C7BQ6B,AcW/C,AenBJ,C9BY0D,GoBxC/B,AnBoCmB,CAAU,CAAV,EmBrC9C,CnBqC4D,CAAxD,EAA2D,CAA3D,EAA8D,IAAI,CAAC,EAAL,GAAU,CAAxE;AEOQ,AOxCR,ACsCA,ALMS,AWzDjB,AjBgDiC,AkBrCG,ACAK,AduBjC,AgBxBqB,ApBqCrB,AsBrCyB,ArB+B5B,AaiBG,AY7CA,ACJJ,AnBDJ,Aa8BQ,AlBWA,A0BVJ,CrB/BJ,CSGoC,ACAK,AEDZ,AEAI,AO6B7B,CrB/BJ,CRuCQ,AcWA,GdXG,AcWA,CZLK,AOxCJ,ACsCE,ANjBF,AJaA,AcWA,AY7CA,AvBoCE,CDIG,AGCM,ANNP,AsBVH,EnBeM,Ae1CiB,ACAK,AEDZ,AEAI,AKD7B,CzB4CgB,AQFF,AOxCkB,ACAK,AduBzB,AgBxBa,ApBqCrB,AsBrCyB,ERgDzB,CJPa,ALME,ASCJ,AenBF,CpB1BG,ALqBA,AsBrBA,AG0BF,CzBLV,AiBIA,AlBWe,EDIJ,AOxCI,AJ4CI,ADvBJ,AsBrBA,ChBsCG,AIOF,AOpBA,AlBWE,CMpClB,AiBAA,ExBwCuB,CAAC,AGIA,ASCb,CAAU,AXTE,A0BV3B,CT7ByB,ANgDV,CZLgB,CAAC,AQFf,AUzCQ,AC4BG,AQCF,CnBYK,AIOJ,CJPV,ALMM,AiB/CM,CD4BE,CnBeK,AoB3CP,ARgDzB,AajDJ,CjB0CmC,AOxCH,AUFpB,CPCa,ANgDO,CZLK,AGIE,AY9CP,AGDP,AC4BU,CnBeJ,AmBfK,AlBWd,CAAiB,COEC,AQxCH,AIDR,AD4BT,ChBmBG,AiB/CM,ARgDQ,AajDrC,CzB4CwC,AgB1CH,ChB0CtB,Ae1CiB,AUFK,AN6BI,CnBcT,AQDG,AOxCH,CPwCa,ALME,ASCf,CJPG,AIOO,AOpBtC,CPoBA,CI/CiC,CRwCU,AQxCV,CRwCjC,ALMgD,EFR9B,CAA+B,E0BVrD,CxBkB+C,EFRW,GEQK,KFRzC,CAAlB,CEQe,EAAqD;AHH5D,AK9ChB,AIGI,ADyCI,AEHJ,AChCA,ARyCgB,ANNJ,AoBxCR,AfuBI,AJaJ,ACNR,AaiBQ,ACPA,AMZA,AlBUA,A0BVJ,EjBSA,ELzCJ,APwCQ,AcWA,AXTA,E0BVE,ChBvBD,Ab+BE,AcWA,AXTA,CDIK,AQFF,ASxCA,AnBoCF,AcWA,AOnBE,AlBUF,CDIK,AHFD,AEVhB,AcUa,EbEM,AS3Cf,ADyCa,AGnCJ,AdmCG,AKjBC,CQcb,AChCU,AgBuBE,CjBSZ,AOrCe,CTwCC,AXAJ,ACJR,AcWA,AOnBY,AlBUZ,CUjCS,AC0CE,AXTA,A0BVA,C3BcK,AWrCpB,AMLkB,CAAC,AE4BA,CRvBH,AdmCA,AEVpB,CSUyB,AGnCJ,AdmCA,CGEF,AYKK,CZLK,AmBdF,CnBcR,AULf,AChCoB,AEmChB,AMZoB,CTSxB,ARdQ,AWiBe,CR5C3B,AOmDmB,AXTS,CDIG,AYKF,AOnBN,AlBUM,CUjCzB,ATkB4B,AUwBb,AOnBa,AlBUb,COEC,ANhBJ,AWgBR,AcZuB,ClB7B3B,ADyC8B,AGnCJ,AEmCE,CJzChB,ADyCI,AGnCW,AdmCf,AeOe,AXTE,A0BV7B,CjBSA,AbG4B,CcnC5B,AdmCY,AoBxCM,AE4Be,CXYC,AXAtB,AeOR,CFVJ,AChC+B,AMLH,CL+CI,AXTE,CQvClC,EAAqC,ADyCE,CXAT,CeOO,AOnBlB,CAAf,CXY8B,CAAU,AXAhC,CWAsB,AEH1B,AEUwB,CAAU,CAAV,AXTH,COEiB,AXAhB,AoBxCZ,AhBsC4B,COE1C,CXA0B,AoBxCM,AL+CQ,GFV5C,AEUI,EFVsB,AbGI,CIFD,CAA0B,CAAnD,EJE0B,AIF4B,CJE9C,EaHZ,CbG8B,AoBxCZ,CPqCwB,AOrCtC,IpBwC0B,AIFqC,CJEvD,AIFwD,CAAV,EJE5B,CIF0C,CJE1C,CAAE,GIF6C,GJE/C,CAAS,KAAK,EIF4B,CAAiB,IJE3D,EAAuB,EIFmB,CAA0B,CAA9F,IJE0B,EAAiC,MAAjC,CAAlB;AGAoB,AK5CpC,AEMQ,AEHJ,AD0CI,AEHA,AChCA,ARyCY,ANNP,AkBzCT,ACAA,AdyBgB,AgB1BhB,ApBsCC,AsBtCD,ArBPJ,AawDQ,AY9CA,AXuCI,AMZJ,AlBUA,A0BVJ,C5BrCJ,C4BqCI,C7BPA,AC9BJ,CSiDQ,AIOA,AXTA,EYEI,CbDA,AQCD,AIOA,ACPE,AZFF,CQxCP,AD0CQ,AGnCE,ATmBM,AUuBR,AOnBE,AlBUF,CMrCC,ALuBQ,AsBvBR,AXuCE,CVMK,AUNJ,CEzCZ,ACAA,AdyBmB,AgB1BnB,AEAA,CD8Bc,CZ3BD,AEHb,AeGa,CjBAC,AIIE,AaJF,AvBqCV,CCdmB,AWgBN,APPN,AaLM,AQAJ,ClB7BT,AkB6BU,CpB3BG,ACuCb,AGnCe,AC0Cf,AY9Ca,CjBAb,ACuCc,AgBvCd,CtBuBuB,AWgBf,AMZS,CZ3BD,AJ6CM,ADtBE,AsBvBR,AXuCE,AMZA,CZ3BD,AIIE,AaJF,AXuCV,CJzCP,ADyCA,CCzCA,APyBuB,AiBIV,CZ3BO,ACuCA,ALMM,AqB7CN,AXuCA,AMZE,CD9B1B,ChB0BgC,AgB1BpB,CTCR,ADyCA,AmBZJ,ClB7BI,AkB6BsB,CnBOU,ALWpB,AiBhDhB,APyC4B,AMXG,CXa3B,AY3CQ,EbGR,AEFA,AMAJ,AbyB2B,AgB1B3B,AMGI,CTFQ,CREsB,AEFxB,ASD2B,AMGH,AG2BlC,CpB3BmC,ALuBM,AsBvBN,CJHnC,CbGI,ASFJ,AQEI,AL2Ba,CH7BL,AIDyB,AD8BjC,CZ3BmC,AIIpB,AINnB,ASEuC,ALOyD,CVT5F,AEM6B,AQwB7B,CRxB8B,AING,AbyBQ,GSnBR,AKNrC,CPAiB,APyBM,CczBc,AdwBzB,GOzBZ,AEO0C,CAAC,aAAN,CAAoB,CAApB,EAAuB,CAAzC,EAA4C,CAAC,GAAG,GAAhD,CAAf;AXsCC,AIhDT,ACAA,AEOY,AGoCP,AChCG,ARyCS,AYhDb,ACAA,ACCI,AfyBY,AgB3BhB,AGCJ,ACJA,ACAA,AXqDQ,AY9CI,AXuCA,AY7CR,ACDJ,AzB6CQ,A0BXJ,EAAA,CjBOA,CNzCJ,AOWQ,AUPR,ACJA,ACAA,AXqDQ,AcrDR,AzB6CQ,CDxC6F,CA4C7F,AaHI,CDOD,ACPE,AZDF,CczCP,ACAA,Ad0BgB,AgB3BhB,ANkDQ,AapDR,AxB4CQ,CEIW,Ac5CV,AfyBQ,AWgBN,AcZJ,CtBlCX,AEOkB,AIIJ,AaJI,AG2BN,ChBvBG,ATmBQ,CUuBf,CL9Ca,AQHjB,ACAA,ACCa,ACFb,AMIiB,ACNjB,CRIc,Cd+CK,ADtBI,CG9B3B,AEOwB,AQFhB,ACAA,AEDA,AMGgB,ACLhB,CRGa,AhBwCb,CI7CR,AYKQ,CfyBuB,CE9B/B,AGO4B,AUFJ,AfyBQ,AsBvBJ,AvBsCJ,CUlChB,AMNiB,AhBwCjB,A0BXJ,ChBvBsB,AINlB,ACAA,AEDA,AOFA,AEgCgB,CZ7BhB,ACAA,AdyBuB,AgB1BvB,AOFA,CRGoB,CAApB,AIDR,CVOQ,ATmB4B,CSnBL,AINvB,ACAA,ACAuB,ACDvB,AOFA,CVGA,ACAA,ACAwB,ACDxB,AOFA,ACFR,CHAA,CNKQ,AKLR,CXWmC,CIN3B,ACAA,ACA4B,AfyBL,AgB1BvB,AOFA,EVGM,ACAA,AEDA,AOFA,CvB4B+B,AyBIzC,EpB3BoB,AiBAA,CjBAa,AiBAA,ETF7B,ACAA,AEDA,AOFA,CvB4ByC,CazB3B,ACAA,AEDA,AOFA,ElBKqB,AIIZ,AaJY,CbIH,AINhC,ACAA,AdyBmB,AgB1BnB,AOFA,EVGmB,ACAA,AEDA,AOFA,ElBKmB,AiBAA,CjBAtB,AIIO,AINvB,ACAA,AEDA,AMGgB,ACLhB,ElBKyC,AIIF,AaJE,CbIlB,CJJP,AIIhB,AaJgB,CTFO,ACAA,AEDA,AOFA,ClBKsB,AiBAA,GTHjD,ACAA,AEDA,AOFA,ElBMoB,AiBAA,EjBAoC,AiBAA,EjBApC,AiBAA,CjBAZ,AiBAA;ApBPZ,ACAmC,AEQvB,AEFJ,ADyCA,AGnCA,ARyCY,ANPR,AoBxCA,AfsBI,AJaX,AuBrCL,ACJA,ACAA,AXsDQ,AY9CI,AXoCoB,Aa5ChC,APmCQ,AQCJ,EtBpC+B,EG+C3B,AGnCA,AC0CA,CCVA,CNpCI,AiBAA,AG4BF,CnBWC,ANpBqB,AU2BrB,CHhDG,ADyCF,AIOA,AOnBA,CjBHI,Ce1BE,CZNiB,AR8ClB,CQ9CkB,AcmCnB,EZ3BI,AIIF,AMNI,ALgDd,AY9CY,CjBAC,AIIF,AZwBJ,AyB5BM,CL2BD,CXYZ,ASzCiB,ALiCe,AOJhC,AQCa,CfoBb,CLhDI,AEFa,AEMjB,AaJI,AL2BW,CZ3BG,ACuCF,AGnCA,AaJE,AG4BF,C9BUZ,AoBxCiB,CRAD,AZwCA,CUtChB,AVsCA,A2BtCA,CG4BgB,C9BUG,CYxCC,AEMxB,EgBwBgB,CnBWhB,AmBXyB,E9BUrB,CQ9CuB,AR8CG,EQ9CH,CsBoCX,CAApB,C9BUuC,CoBxClB,CAAa,CZNH,AYMI,CZNJ,EIMP,AQAY,CRAC,AZwC7B,EYxCgB,AZwCwB,AoBxCd,ERAO,CQAC,CRAlB,CQAH,CRAwB,AZwCrC,CoBxCsC,EAAzB,ERAG,AQA0B,ERAE,EAA5B,CAApB,AQAiB,EAAoC,EAApC,CAAb;AbNZ,AGUY,AEHJ,ADyCA,AELH,AC9BG,ARyCY,ANPR,AkBxCJ,ACAA,ACAI,Af0BQ,AgB3BZ,AEHJ,ACCJ,ACJA,ACAA,ACUY,AXuCJ,AY7CA,ACJR,APoCY,AlBUJ,A0BTJ,EAAA,EnBWI,AGnCA,GHmCG,CCzCG,ADyCF,AOzCE,ACAA,Ad0BM,AgB3BN,AEHV,AKCU,CvB6BO,AWgBR,AZHA,CG9Cb,AGUkB,AJ4CE,Ac/CF,AIHlB,ACJA,ACAA,ACUkB,AEVlB,C7B+CiB,AKdM,AiBGN,ECjCb,AKCe,AxB0CF,A0BTF,CpB3BO,AQHF,ACAA,ACAE,ACDF,AMIE,AvBoCJ,A0BTF,CzBJW,CEjC3B,AgBIQ,ACAR,ACJA,ACAA,AEIsB,ACJtB,CnBUyB,AEHF,ADyCf,AOzCe,ACAA,ACAE,ACDF,AMIE,AvBoCJ,CG9CrB,AP+CY,AwB3CZ,ACJA,ACAA,AGAA,AzB8CQ,CJCiB,AKdM,AWgBvB,CJ1CkB,AEMF,ARyCM,AsBlDJ,AxB0CF,A0BTpB,CpB3ByB,AIGJ,AINE,ACAA,ACAE,ACDF,AMIE,AvBoCJ,CmB1CjB,AP6CkB,CO7ClB,ADgCI,CV7BkB,AN+CI,AUL1B,AZHoB,CUjCpB,AToB2B,CSpBL,AdkClB,AsBXoB,CChCxB,ADiCQ,CCjCR,CjBkDY,AFRa,ECbF,CSpBvB,ASTA,EbMiB,ALuBmB,AkB7B9B,AIMW,ACNH,ClBMY,AiBAA,ACNF,GlBMK,AQHd,ACAA,ACAE,ACDF,AMIc,ACNf,AxB0CM,CMpCU,AQHF,ACAA,ACAE,ACDF,AMIE,AvBoCK,CgBvCJ,Af0BS,AkB7BxC,AKA6B,ChBGX,AMAH,ACAA,CPAgB,ASDhB,AEFD,CLGkB,ACAA,ACAA,AQHlB,CvB6BK,AgB3Bc,CTCf,AMAH,ACAA,AdyBP,AkB5BR,AKAkC,AxB0ClC,CgBvC8B,ACDf,AOFD,ClBMY,AEHU,AMAA,ACAA,AIHjB,AIMO,AvBoCiB,CMpCJ,AWJF,AMIE,ACNF,AxB0CO,CMpC3B,AEHC,AQAoB,AOGrB,CJNjB,AnB0CA,CMpC0C,AEHF,AeGE,ACN5B,CVGC,ACAA,ACAE,AQHjB,AxB0CgD,CiBxCjC,CXI8B,AQHF,ACAA,ACAA,AOGE,CjBAC,AWJF,AEFrB,AIMuB,CfH5B,AMAH,ACAA,ACAE,CFAjB,ACAA,AEDe,CTCgC,AQAA,ACD/C,CEHJ,CXIsB,CAAlB,EFG0C,AUHzB,AOGyB,CjBAa,AiBAA,CjBAb,AUHY,AOGZ,EPHzB,CVG0C,AUHvD,AOGuD,CjBA1C,AiBAA,EjBA6C,AiBAA,EjBA7C,AiBAA,EjBAiD,AiBC1D,CAAC,IAAI,CjBD2D,AiBChE,CjBDiE,EiBCxD,EjBDwD,CAAA,AiBCjE,GjBDiE,AiBClD,CjBDkD,CAAA,EAAG,CAAH,CAAD,AiBC3C,CjBDZ,AiBCa,CjBD1B,GiBC0B,CAAA,GAAA,CAAA,CAAA,EAAG,CAAH,CAAD,CADZ,CAAb;AxBwCJ,AIlDuB,ACC3B,AIOI,ADyCA,AGnCH,ARyCY,ANPR,AkBxCD,ACAA,ACAI,Af0BQ,AgB3BZ,ApBoCJ,AuBvCgC,ACJK,ACAD,AXyDhC,ACPH,AalDkC,APsCnB,AlBSR,A0BTR,EvBtC2B,AN2C3B,AuBvCgC,ACJK,ACAD,AGAD,ACsCnC,EnBWI,AIQA,GJRG,AIQA,CHjDG,ADyCF,AOzCE,ACAA,Ad0BM,AgB3BN,ANkDF,AOnBQ,AQAV,C3BYG,AEhBQ,AiBIA,AQAV,CV9BO,AnBmCd,AGIY,CG/Ce,ACC3B,AHiCmB,AJSnB,AuBvCgC,ACJK,ACAD,AGAD,APsChB,CftCQ,AiBIK,ACJK,ACAD,AGAD,ElBiD/B,AOzCY,ACAA,ACAE,ACDF,CTCC,ADyCF,ANfQ,AiBIA,AlBSN,COEb,COzCe,ACAA,ACAE,ACDF,ANkDf,CHjDgB,ADyCF,CAAd,ANfuB,AiBIA,CjBJC,AJS5B,AccoB,AOnBQ,CJ9BL,ACAA,ACAE,ACDF,ApBoCvB,CEOI,AS1CoB,CT0CD,AEhBI,CiBIA,AlBSf,CAAe,A0BT3B,CV9B8B,Af0BE,ADapB,A0BTY,C3BYpB,AiB1C2B,AE8BE,CnBYL,AIlDD,AaQG,AnBmC9B,AGI8B,CgBvCT,ALiDjB,CRzDuB,AaQO,CZPlC,AYOmC,AnBmCnC,CO1CY,AHiCe,ADanB,CoB3CwB,AFkCL,AQA3B,CV9BoC,AhBuCA,CCbK,AmB9BT,AMkCC,CvBtCN,AsBAQ,APsCO,CftCf,AaQO,AMRE,ClBCpC,AUOmB,ACAA,AEDA,AIPkB,AIAF,CjBQf,AMAY,ACAA,AEDA,AKPI,ClBCC,AIOJ,AQAS,AKRL,CpBkCQ,AJSrC,AuBvCwB,CNIb,ACAA,ACAE,ACDF,AGHa,AFkCc,CV9B1B,CMAiB,ACAA,ACAS,ACDT,AQPF,CjBQG,AP0Bf,AqBlCa,AGAD,ACsCO,CZ9BvB,ACAA,AEDA,AIPkB,ACAD,AJsCb,CV9BH,AQAC,AKRgB,AHqCzB,CJ7B6B,ACAA,AEDA,CTCC,AQAS,AnBmCnD,C6BLiC,CV9BZ,AnBmCK,C6BLqB,CZ9B5B,ACAA,ACAoC,ACDpC,CTCC,AQAC,CFA2B,ACAA,ACAxC,ACDwC,CTCC,CMA9B,ACAA,AEDA,CTCC,AMAhB,ACAA,AEDA,CTCA,AXmCJ,EAA0C;AEQlC,AOxCA,ACuCJ,AELJ,AC9BH,ARyCY,AY/CL,ACAA,ACAI,AfuBI,AgBxBR,ApBoCA,AsBtCA,ARoDA,AY9CI,ACPJ,ANkCY,AlBSJ,A0BTR,EjBMJ,EFKI,AVNA,AccA,AarDA,AEkCA,E3BYI,AOxCA,AUFA,AOGA,CxBuCC,AQDF,ALRC,ADfoB,AU+BrB,CJRC,AOzCE,ACAA,AdkBF,AgBnBE,AEFA,ARoDF,AOnBQ,AlBSJ,CDGD,AyB9CH,ANkCS,CnBYL,AiB1CA,AQJH,ClBMG,AUFC,AnBmCF,A0BhCC,AL2BO,AlBSJ,CMrCF,AGkCb,AZDY,A0BhCC,AvBoCG,CSHhB,APWe,AiBlDA,CZ4CX,AOzCY,ACAA,ChB0CC,AQDF,AU1CE,ApBoCb,AqBLmB,AQAR,C7BKC,AsBtCE,AOiCF,CZ9BG,ACAA,AJiDf,CMlDgB,ClB2CR,AmBZe,CnBYL,AQDF,AY5CE,AKDlB,ANkCwB,CnBYjB,Ae1CY,ACAA,ACAf,AQJY,AxB2CR,CMrCJ,AGkCR,AOpCwB,ACDA,AMIhB,CjBDgB,AGkCxB,AcjCwB,AL2BG,AQAvB,C3BYoB,AQDT,AmBXS,CnBWC,AiB7CrB,CjB6CW,ASzCP,AQJiB,ANkCO,CZ5BxB,AUFqB,AOGrB,CjBDqB,AiBCA,CxBsCD,AQAD,AEL3B,AiBN6B,CAAC,CV9BG,AQJ7B,ClBMI,ACuCJ,AELJ,AcjCQ,AL2BmB,EXWK,AY5Cd,CZ4Cd,AY5CwB,ADiCa,CrBKrC,C6BLA,CZ9Be,ACAA,AIHD,CLGc,ACAA,AW8BO,CT/BnB,AEFa,CFEC,CRqC3B,AKpCY,ACAA,AG8B2B,CCjC5B,CLGmB,ACAA,ACAR,ACDT,AS+BwB,CjBM5C,AOpCsC,AGHA,AOiCO,CT/BN,AEFrB,ADiCK,CTMa,AKpCjB,ACAA,CIHsB,CLGC,ACAA,ACAb,ACDT,EDCwB,ACDA,AEF1B,CHGW,AU8BzB,CT/BgB,AEF0B,CLG3B,ACAA,ACA4B,ACD3C,CDEQ,CFDqC,ACAA,AIH/B,CAAd,CLGe,ACAA,CDAf,ACAA;AhB2CI,AInDR,AGWK,AEHD,AD0CA,AELA,APWQ,ANPR,AkBxCA,ACAA,ACAS,Af2BR,AgB5BD,ApBoCA,AuB/BJ,ACbA,ACAA,AX0DI,AY9CC,AXuCL,AanDA,APoCY,AlBYA,A0BTX,EdYD,CcdA,ClB7BI,AD0CA,AELA,AEaA,CVjCA,AyBLuD,C3B+BnD,A2BVR,C3BUS,AQDF,AELA,AEaA,AOvBqB,CXepB,AELA,AbIA,AkBxCE,ACAA,ACAG,ACDH,ANkDF,AXVI,CDGD,AS3CH,AQCM,AnBmCL,AqBJG,CVhCH,CLRT,AaSgB,Af2BL,AmBvBX,ACbA,ACAA,AX0DI,Ac1DJ,AzBgDe,CSHX,AEaQ,ACPZ,AZHgB,CYGhB,CLDI,AVNA,CUMW,AXDA,AkBxCE,ACAA,ACAG,ACDH,ApBoCF,AGIH,CgBvCS,AhBuCD,CWUH,CGjDG,ACAA,AEDA,ETAhB,AD0CgB,AXDA,CYzCA,AXoChB,AccQ,AXVa,CcvCD,ACAA,AEDA,ANkDF,ACPtB,CDOY,ACPZ,CLDe,ASzCC,AnBmCQ,CWpCpB,AD0CqB,ASzCK,AnBmCL,CWpCA,AD0CV,ASzCC,ALiDU,CR1D1B,CAAY,CIkDe,ASzCO,CnBmCJ,Acc1B,ACPJ,AZHoB,CJCZ,AoBxCI,AhBuCuB,CoBnCnC,AT6CgC,AXVZ,COEhB,AarCQ,ARsCZ,CTnDA,AHgDsC,COEL,AVNR,A4B5CzB,AzBgDY,CGhDyB,APiDD,ACLA,AyB5CpC,AGAY,CjBQR,AaRJ,ACAY,AX0DyB,AXVI,CqBhD7B,CbQ0B,AYKtC,CbqCsC,AOzClB,ACAA,AEDA,CHCc,ACAA,AEDA,AGKG,AT6CL,Cdd5B,AccsC,Ac1D1C,AzBgD8C,CiBxC1B,AKRpB,AX0DgC,ACPxB,CLDyB,AOzCb,ACAA,AMTpB,AIAqC,ClBkDM,AU1CL,AKRD,CdQjC,AD0CA,AXDA,AkBxCmC,ACAA,AMTF,AV0DS,EHlDC,AZyCC,AqBzC5B,CHCA,ACAA,CEDuB,ANkDvC,CGjDwC,ACAA,AH0C5C,AZHyC,CiBxCrB,ANkDgC,AXVI,CcvCpC,ACAA,AEDhB,AL2CsB,AZHe,CcvCrC,ACAA,CfuCuD,CAA/C,CQxCR,AGkDqD,CXVK,CAAlD,EWUwC,ACPpD,AZHiE,CWUH,AXVlD,CWUwC,ACPV,CZH0B,EWUF,EXVI,EWUlE,EAAoE,AXVE,CAAC,EAA/D,GWUgE,IAAI,CAAC,EAAT,GAAY,GAAhF,EAAqF,MAAI,IAAI,CAAC,EAAT,GAAY,GAAjG;AZTwB,AKjD5B,AGmDI,AEJA,AC/BR,ARyCgB,ANPJ,AkBxCJ,ACAA,ACDkC,Af4B9B,AgB5BJ,ApBoCA,AsBvCA,ACOJ,AT8CI,ACPA,AY9CA,ANmCY,AlBQJ,IOER,AGnCR,ASVQ,ARqDA,CZVA,EQEG,AIQA,CP3DP,AGmDQ,AEJE,APUE,AY/CF,ACAA,ACD4B,ACA5B,AGIV,AT8CQ,AarDA,ANmCQ,AlBQJ,CgBxC2B,AnBoC9B,AsBvCD,ADmCS,CCnCR,CvB4CI,AoBzC4B,Af4B5B,AiBIM,AlBQJ,CSFD,AEYV,AXVY,CIjDhB,AaSe,AGIf,CbsCI,AVNA,A2BvCU,CjB6CC,AEJE,AKrCA,ACAA,ACD4B,AnBoC9B,AqBJQ,CdxCnB,AYQ0C,ACA5B,AGKd,CIRa,CtBmDK,AY/CF,ACAA,AfuCR,CHJR,A2BvCA,ANmCuB,CXUP,AEJE,AC/B1B,AOP0B,ApBoCF,AsBvChB,CtBuCA,AsBvCgB,CfLhB,AFwDsB,ANPlB,AkBxCgB,ACAA,AKIpB,ChBbA,AHoCI,AmBvBJ,CbqCW,AS1C0B,CT0ChB,AS1C8B,AnBoC9B,AsBvCrB,CZ6CW,AS1C0B,Af4Bb,AkB/BH,ADmCO,CdxC5B,AFwDQ,ADpBiB,AmBvBzB,ChBbA,AK8Ca,AWjCb,CbqCuB,AEJI,AOtC4B,CPsC1C,AZFa,CsBvC1B,CfLA,AgBaA,AF2BuB,CXUvB,AEJ+B,AU7CE,CfD3B,AaQQ,AEDd,ACMM,CbqCuB,AU1CL,ApBoCH,AqBJgB,CrBIL,EYEI,AQtCtB,EbRd,AGkDkC,AOzClB,ACAA,AEDa,AGK7B,CNJ8B,ACAA,AG+BW,CdxC3B,AK8CiB,AZF/B,CYEyC,AQtC3B,ApBiCwB,CUST,AEJE,AKrCf,ACAA,AlBoChB,CO7CA,AGkDuC,AU1CL,AGKrB,AF2BM,CXUnB,AOzCmC,ACAA,AEDrB,AC+BN,CdvCW,AK8CwB,CAA3C,AQtCqC,CHCrB,ACAA,AKGpB,ChBZI,CUSwC,ACAA,AED1B,EHCE,ACAA,AED0B,CHC1C,ACAA,CXTuB,CaQT,CAAd,EbTJ;ALsDI,AOzCA,AEHA,AD0CA,AEJA,AChCR,AR0Ca,ANPJ,AkBvCD,ACAA,ACHQ,Af6BA,AUsBR,AY9CA,AXuCH,AY/CG,ANoCY,AlBQP,A0BRT,GdSA,CLCI,AIQA,CL/CA,AiBCA,CG4BA,CpB7BA,ACuCG,AS5CwC,ALoDxC,AY9CH,CfJM,AD0CF,AEJE,AKpCA,ACAA,Ad0BE,AUsBJ,AatDa,ANoCL,CnBYP,AiB5CG,Af4BC,AiBII,CZ7Bb,AiBCA,CdkCS,ARVE,AiBII,CJ9BL,CCAC,CNoCC,AEYZ,AatDuB,ClBOnB,AQDS,Ab0BE,AsBxBX,AL4Be,CZ7Bd,AEHS,AOEA,AQET,ChBsCL,AiB9C0B,AEoCf,CzBJO,AyBIN,C3BYZ,AS5CiB,ACsCA,AKpCA,AUNjB,ANoCuB,CH9BL,AG8BM,CjBJb,CFgBO,CS5CG,AUgCE,CnBYvB,AEhBsB,EKzBtB,AiBCA,AL4B4B,AQAhC,CjBMgB,CHnCI,AGmCU,ARXD,AsBvBT,AG4BM,CjBMV,CMpCE,CAAQ,CTCtB,AGmC8B,AclC9B,AL4BuB,CZ7BH,AEHH,AMEJ,ASEO,CfJK,AMEA,CI8BY,EVhCpB,ACsCkB,AMpCP,CTC5B,ASD6B,AQE7B,CjBDoB,AEHU,AeIV,CTFW,CRC/B,AGmC8B,AKpCE,ASEhC,CfJiB,ACsCuB,ASNE,CZ7BlB,AGmCM,AclCN,CfJW,EAAlB,ACsCyB,AMpCpB,AG8BH,CTMnB,AMpCsC,CPFC,AOEzB,CPFG,AMEQ,CNFzB,AMEyC,ACAA,CTCzC,AQDyB,ASEzB,GTF6C,EAAhC,ACAkC,CAAC,CDAC,GAApC,EAAyC,EAAzC,ACA4B,CAAgB,CDAC,ACAjB,CDA5B,CAAb,CCA6D,EAA/C,EAAmD,EAAnD,EAAuD,CAAvD,CAAd;AhB2CH,AIvDD,ACGI,AGkDA,AEJA,ACjCR,AR2CS,ANPJ,AkBvCG,ACAA,ACHS,Af6BD,AgB7BR,ApBqCA,AuBpCJ,ACXA,ACAA,AX6DI,Ac7DJ,APwCY,AlBWP,A0BRD,G9BXJ,CWqBI,AEJA,AKpCA,ACAA,AEHA,AGCJ,Gb0CO,AEJA,ASdqB,CfnC5B,ACGU,AGkDF,AEJA,AKpCA,AEHK,Af6BD,AoBvCZ,ACAA,AGAA,APmCQ,AQQE,CZ9BD,ACAA,ACHK,Af6BD,AgB7BL,AGCR,CVKJ,AKHc,AEHD,AGCT,CJDgB,Af6BD,AJQJ,CUMP,CJrDJ,ACGe,AiBHf,ACAA,AGAA,ETUoB,Af6BD,AJQf,CM9CA,ACEc,AMatB,AMNyB,AKTjB,ACAA,AGAA,AC0Cc,CjBMd,CAAc,ACjCtB,ATuB0B,AmB5BtB,CNEI,Ab0BmB,AyBIF,CtBxCC,AUUF,ACAhB,AEHA,CFGiB,AEHD,AGCA,CjBVhB,AMgDA,ARVW,AoBtCX,ACAA,AGAA,CtBAA,AkBAA,ACAA,AGAA,ChBgDoB,AKpCpB,AEHY,CFGS,ACArB,ACH0B,Af6BH,AgB7BvB,AGCJ,CLE0B,ACHd,ACAa,CdTrB,AMgDA,AYhDA,ACAA,AGAA,AC0CyB,CvB1CzB,AkBAA,ACAA,AGAA,AC0C0B,CjBCM,AK/BP,CLqCzB,AMrC0B,CEH1B,CdTA,AkBAA,ACAA,AGAA,CRS4B,CdTtB,ACEQ,AiBFR,ACAA,AGAA,CrBEkB,GAAV,CaOd,CdTA,ACE6B,AiBF7B,ACAA,AGAA,CRSoC,ASiCnB,CvB1CH,AWYO,AOZP,ACAA,AGAA,AC0C0B,CtBxC1B,AUUgB,ACAR,CAAS,CZZ/B,ACEkC,AiBFlC,ACAA,AGAA,CrBEc,CDFK,ACEnB,AaOA,AITmB,ACAA,AGAA,AC0CF,CAAjB,CZ9BqB,AGHuB,CdT5C,AYYsB,AMZtB,ACAA,AGAA,CXYsC,CAAjB,ACAkB,CDAvC,ACAsB,CAAtB,CZZuB,AkBAA,ACAA,AGAA,CRSvB,EAAqD,CdVzD,AkBAA,ACAA,AGAA,MRUI;AXIA,AEHA,AD2CA,AGtCuB,AIFvB,ACCA,ACL6B,Af2BJ,AJW5B,AsBvCG,AIMA,AXsCH,AY9CG,ANsCC,AQDD,EhB5BuB,Cb0B3B,CW/BI,AD2CA,AOxCA,AY8BA,CpB9BA,AiBCA,ALmBA,EZpBA,ACwCG,ANjBqB,AsBtBxB,ChBuCI,AOxCA,ACCE,ACLuB,Af2BzB,AkB5BE,CXEF,AMGC,AEJyB,AQHzB,ClBOL,AEHK,AeIL,CbCuB,AMNS,AEmCzB,CR7BgB,AKDb,AW6BF,CFrCC,AEqCA,CnBUT,AiB/CU,ClBON,ASCS,ACLuB,AGDvB,AIMT,CjBDC,AUJgC,AOKhC,ChBwB2B,AiBhCnB,CjBiDb,AY/CgB,AKFhB,CVOA,ACCiB,CPJjB,AMGgB,AUPA,ChBIA,AgBJC,CLEG,AOmCpB,EZ9BA,AEJgC,AQHZ,ChBIpB,AMGqB,AEJyB,AQH9C,AEqCqB,ClBjCA,AQDW,CQHT,CdSA,AcTC,CVOC,AEJyB,CNM3B,AcTvB,ElBOA,AiBCA,ACR4B,CTQf,CTDS,AEHtB,AOIyB,AQAH,EbCC,CAAA,CJFvB,AiBCA,CjBD0B,AaLV,AIMU,CRAK,AINF,CJMG,CDDX,CAAS,AKLd,CbKhB,AiBCA,AG6BA,CpB9B0B,AaLQ,AIMR,EjBD1B,AaLgB,AIMhB,EjBD8B,AQAT,ACCI,AINa,AIMR,CRAW,CDDH,ACCb,CDDJ,CKLL,CLKyB,ACCI,CDAzC,AKNwC,CJM/B,CTDb,AaLgB,AIMhB,CRAiD,AINjD,GJMa,EAAyC,EAAzC,EAA6C,CAA7C,CAAb;AhB4CJ,AIxDI,ACCA,AK+CA,APSA,ANNJ,AkBvCS,ACCL,ACNQ,Af+BP,AgB9BD,AEAA,ACsSJ,AC9SI,ACAA,AEKI,ACLJ,AP2CI,AlBMJ,A0BPA,E3BcJ,AHLA,EQlDI,AK+CA,AMnCA,AELA,AGsSJ,ApB7PI,A0BPA,EZ9BK,Cf4CT,AURO,AKpCG,AEPqC,AhB4CxC,CDOP,AIxDU,AMgDF,APSA,Aa5CA,ACRqB,AGGrB,AERE,ACAA,AGAA,AzBiDF,CIhDA,AUWI,ACCH,ACRD,ACGC,AGsST,ChB7SS,AaOC,AGsSV,AIzSc,CNsCD,CG3CC,AK0CF,CvB1CG,APmDf,AkBvCgB,AQZD,AEKE,ACLF,AC0CF,C9BSb,AkBvCiB,AKJH,CERG,ArBiDb,CGjDc,AmBAA,AEKE,ACLF,C1BwDlB,AURI,AUxCa,CpBgDjB,CGCmB,Aa5Cf,AILA,ChBRkB,ACClB,AK+CgB,AMnCA,AELhB,AKRkB,AEKE,ACLF,CrBCF,AaOC,AGsSrB,ClBrPsB,AY7CV,AY8BR,C9BSJ,AkBvC0B,AI+BlB,CnBaR,AHLA,AkBvCY,ACCR,AKiSU,ChB7SV,AWYqB,AELrB,ASkCqB,CtBzCA,AaOC,ACmCE,CnBa5B,Ae5C8B,AI+BD,ChBcD,COTxB,APSyB,AY7CrB,ACCqB,CELC,CbP1B,ARkDJ,GOnDkB,APmDlB,A0BnDkB,AGAA,CtBAU,AmBAA,AGAA,CL8Sd,CrBtPP,AyBnDa,CrBLF,AmBAA,AEKe,ACLf,CvByDU,CHD5B,AIxDiC,ADyD7B,AoBzD6B,AGAA,CvBgCjC,CHwBoC,AGEhC,Aa7CqB,CZbP,AYagB,AELR,AKRR,AEKoB,ACLpB,C7BmDV,AqB3C2B,AOHI,CrBLD,AmBAA,AGAA,CtBApB,AmBAA,AGAA,CtBAd,AmBAA,AGAA,CVaqB,EAAgB,AELf,CrB2C1B,AmBtCyB,CAArB,AELuC,AOHV,C5B8CR,AqB3CC,AOHsB,CPG5C,AOH6B,GAAmB,G5B8CpD,EAAwC,A4B9CiB,CAAC,YAAN,CAAmB,IAAE,CAArB,EAAwB,CAAxD,EAA2D,EAA3D,CAAZ,oEEyCuB,EAJN,GAIQ,mDAJR,IAIoD,YAAY,CAAC,MAAb,GAAsB,CAJ1E,IAI2E,yHAJ3E,GAQO,EARP,GAQS,yDART,GASQ,EATR,GASU,sDATV,GAUM,EAVN,GAUQ,gDAV7B,CAHsB,CAgBtB;A3BEA,AO5CA,AEJA,AD6CA,AELA,ACjCJ,AdoCI,AkBxC8B,ACE9B,ACLI,ACAJ,ApBoCH,AsBrCG,ACuSA,AC/Sc,AEcd,AXsCJ,AY9CQ,ANsCI,AlBMX,EYED,CZzBA,CD8BI,AShDA,ACwCA,AMnCA,AELA,EHG8B,AEH1B,AKTU,AGMV,CzBmDD,AURA,AKrC4B,Cf6C3B,AO5CE,ACyCA,AELF,AbGA,AmBtCA,AINa,AIMX,AL8BE,CJhCyB,ACE5B,AELA,ACmCI,CXUD,AS7CA,ACAF,AGsSA,CV/RV,AMPa,AKTU,AGMV,ANsCE,CnBaX,AShDQ,AI2CZ,AY9Cc,ChBGD,AD6CE,AO1C0B,AMmS5B,AC/SY,AToDzB,CExC0C,AKJf,CbKV,AiBCA,AL8BE,CEmQH,CX9PZ,AUzC0B,CbKV,ACyCA,AgBxCA,AL8BE,CtBQH,AmBtCf,AINA,CJMgB,AELhB,CDAI,ACAa,AGsSD,AFnQL,CZ/BS,ACyCT,AXFgB,AkBxCM,AEHb,AIsSH,AGjSG,AXsCxB,AY9CQ,ChBGJ,AD6CqB,AO1C0B,AFwCnD,AY9CyB,ChBGD,AD6CpB,AO1CiC,ACEjC,AG8BsB,CH9BD,AELrB,CDAI,ACAkB,CPO1B,AdoCI,AkBxCmD,AEH1B,CRAzB,AEOQ,AQ2BiB,CVlCA,AOKA,AKiSzB,AR3PJ,CK3C8B,AOHtB,CRGyB,AQHA,CZ8CjC,CJ3CiC,CEOjC,CcVqC,CdUA,EJHjB,AiBCA,CjBDY,AiBCA,GjBDZ,ASCK,AQAL,AXsCb,CGtC2B,AELR,CXIW,AUJR,ACAM,AMKE,CPLC,AJ2CtC,CJ3C6B,CFIT,AEJkB,AeKlB,AXsCgB,CY9CH,ClBOS,ASCjB,ACLI,AOKa,ACRA,CPGhB,CFKgB,ACLE,CDKnB,ACLI,ACAc,AOHV,CPGP,CFKmB,ACLE,ACA3C,AOH2C,CTSvC,ACLI,AQJqB,CAAzB,ClBOY,AiBCA,CfLS,CFIuB,AiBCA,CfLD,CAAtB,EAAyB,CFIlC,AEHZ,EFGmD,EAAvC,AiBCA,CjBDhB,CiBC2D,EAA3C,CAAhB;AxB6CA,AI1DA,ACEA,AIOK,AD6CL,AELA,AClCJ,AR2CI,AY/CI,ACGC,ACLI,Af8BT,AgB9BA,AGuSA,ACjTa,ACCb,AVoDA,AapDA,AP4CQ,AQWR,IvBvDA,AIsDA,AU7CA,AKTA,AVoDA,AapDA,ACuDA,CZ7CyC,AOXzC,CbUK,AMCgB,ACIhB,CPLC,AD6CH,AO5CH,ACIM,AHsCH,CbMG,AKxDF,AGoDA,AELA,AClCR,AR2CQ,AcjDK,AJ2CL,AMRI,Cf5CJ,AKSI,ACwCH,AMnCG,ACLE,Af8BL,AqBvCD,AGAA,AP4CK,Cf5CJ,AiBgTC,AEhTD,AGAA,CTSO,ACAL,ACmCI,CnBcD,ASjDN,ACwCI,AQxCA,AL2CR,AcGQ,ChBxCZ,AKDgB,AWyCH,CtBrDC,AWYG,ChB4CA,AiBjDG,AIuSL,AFpQI,CTKH,ACjCZ,AMPiB,CZPJ,AGoDb,AELa,CW+PC,AFpQI,Cd1ClB,AFwDe,AgBdI,CnBcD,AI1DlB,AIsDgB,AELR,AajDR,AGAA,CtBAgB,AMiDC,AajDD,AGAA,CfgBhB,AKFQ,AdyBR,AgB9BA,ACmCW,CR5BX,AKFsB,AELH,AGuSD,ClBtPE,Aa5CZ,ACLI,AIuSO,CjBhTnB,AaS0B,Af8BL,AqBvCrB,AGAA,AP4CuB,Cf5CF,AMiDC,AOxCV,Af+BR,AqBxCiB,AGAA,ACuDrB,ChBvCA,AR0CI,Aa5CsB,AEL1B,AS8CuB,C3BGV,AW1Cb,AOPwB,ClBiDG,AgB5CvB,ACL0B,CjBiDjB,AUTI,CNjDjB,AMiD2B,APSA,AcjDnB,AMTR,AGAA,ChBiDiB,ACjCjB,AOP4B,ClBiDG,AqBsPjB,CVhSR,AUgSuB,CX/PE,CPSC,EHAI,AUT5B,CW+PM,AMzPqB,CjBNC,ACjCpC,AUgSmC,CMzPnC,C3BG+B,AQJ/B,CRIyC,A2BHD,C3BGT,CUTU,ACjC5B,AOPW,AGuSxB,ClBtP2B,AejDM,ClBiDU,AGAA,CHA3C,CUToC,AClCxC,CDkCkD,CAAV,AQxCZ,CfiDwB,CejDR,CRwCU,AQxC1B,CAAxB,ERwCQ,CAAR,CiBMA,CAAyD,ExBGd,CAAgB,KwBH3D,CxBG2C,CwBHwB,ExBGC,CAAzC,EAA4C,KAA5C,AwBHiD,CxBGC,IAAlD,AwBHwC,CxBGe,CAAvD,AwBHsD,CxBGjF,EAAsF;AHCtF,AKxDA,AEUA,AEJa,AD8Cb,AELA,APSI,ANPJ,AkBtCA,ACA8B,ACLI,AfgC1B,AgB/BR,ApBoCJ,AsBtCI,AERA,AEcA,AXwCA,AYhDI,ANoCqB,AlBQjC,A0BMY,E7BVR,ESjCI,AC0CA,AU7CA,AMIA,EfLa,ANkDT,Aa7C0B,Ad2BtB,AuBnCJ,AEkDA,ClB/CU,AD8CX,AQzC4B,Ad2BtB,AiBCe,CnBiBlB,AKxDF,AGoDA,AELE,AKpCA,AEL4B,AKT5B,ATsDA,AMZF,CZ7BA,AEJY,ACyCT,AbEF,AmBtC4B,ACLE,AfgCxB,AkBjCN,AIMD,AvBoCZ,CMrCa,ATiCT,A0BhCS,CxB6CI,AiBlD4B,ACC9B,ApBoCX,A2BxCY,Cf4CE,AKpCA,AGJF,AIVE,ATsDA,AYhDD,C5B8CA,AmBtC4B,Ad2BtB,AkBjCN,AnB0CjB,CDSoB,AKxDF,ARiDA,AmBtC4B,AIN5B,CLMG,AEL4B,AKT5B,ATsDA,CI7C6B,AfgCxB,CGtCL,AGoDb,AELe,APSA,ANPF,AKXM,AkBjCN,AOgDE,C9BJf,AuB5CA,AOgDgB,C3BGC,AKxDjB,AUWiB,CRDjB,AJ8CkB,ANPF,AKXL,AJKf,AsBtCoB,AIMhB,AXwCkB,CNzCF,AGqCN,AbEO,ACNrB,AsBtCqB,AIMD,CdoCI,AMpCa,AEJjC,AOJI,Cf4CJ,AMpC+C,Ad2BxB,AgB/BJ,AOJC,CtBqDhB,ANPgB,AmBtCa,ACLI,AGDjB,CbKpB,AUJmD,AGDnD,AIMA,CjBDqB,AUJgB,AOKhB,CxB6CT,AgB7CuC,Ad0B/C,AgB9BJ,AEFuB,AKFnB,CzBqDsB,AkBjDF,AEFA,AP8CX,AYhDY,AEkDrB,C3BGQ,AHPa,AoB3C8B,AnBqC3D,AeQ+B,CO9C3B,AP8Ca,CYhDT,AEkDyB,C3BGC,AkBjDF,ApBoChC,AsBtCgC,CbK5B,AQCa,ASAb,AXwC+B,CExCN,Gf6CU,CaLC,ChBFhB,CAAgB,AkBtCL,Cf6CD,Ae7CE,Cf6CQ,AFbnC,AeQ0B,CbKD,AFblC,AeQ6C,AcEA,CdFV,AcEW,CT9ClB,ApBoCP,CEayB,AHP1C,AqB1CiC,ClBiDjC,AaL2C,CbCX,AHHY,AgBE5C,CbMA,AHR6C,AkBtCpB,CAAgB,AY0CO,C9BJhD,AkBtCyB,AGJD,AS8C0B,E9BJD,AqB1CT,CHIK,AGJrB,CAAxB,CHIa,AY0C0C,CAAC,CZ1CP,GAApC,EAAyC,AY0CJ,CAAkC,CZ1CvE,EAA6C,CAA7C,CAAb,AY0CgD,CAAP,CAArC;AvBtDJ,AKOI,AD+CJ,AENA,ACrCJ,AR+CK,ANPG,AkBtCJ,ACDI,ACLI,AfiCA,AgB9BR,ApBmCA,AsBtCI,ACwSJ,ACjTc,ACEd,AX4DA,ACPA,AarDA,AP4CC,AlBtDT,A0BiES,C1BjET,EAAA,COgEQ,AG3CJ,AIEI,CNPkD,AOKT,AW0CzC,CX1CqB,Ad6Bb,AoB1CM,CbUV,AD8CD,AQ3CH,ACL2C,AfkClC,CMcL,AENmB,AKnCnB,AGHE,AKVF,AX4DA,ACPE,AarDF,CtBAC,AMgDmB,ACrC5B,AIES,AELG,AfgCG,CS7Bf,AdwCc,AuB5CA,ACwSN,CbzPJ,AVTO,AwB/CY,ATuDV,CLCD,AENmB,AZHnB,CM7CC,AFwCM,AkBjCF,AETQ,AV8DZ,CR5DC,AIsDA,AetDA,AVqDE,AarDF,CL+SD,CnBvQS,AkBjCF,ChBPH,AIsDF,AENqB,AZHnB,AyB7CA,AGAA,CtBAb,AOWJ,CdwCuB,AkBtCnB,Ab2BW,AmBuQE,AE/Sb,AVqDiB,AarDjB,CtBAgB,AWaA,AKNI,ACwSpB,CjB/SiB,AIsDjB,AEN2B,ACrCX,AODG,CRsCkB,AbGf,AKXA,AJKd,AuBkQQ,CbzPC,AENjB,AZHmB,Acef,CR5DgB,AIsDpB,AOzCA,AGHsB,ANkDF,CR5DpB,AOWJ,AIEyB,AH+CjB,CJNgB,CJtDG,APmDI,AgBEf,CTrDY,AIsDF,AU5CI,AL2CA,CExCD,AjBgClB,AeQK,CTrDZ,AN6CA,Ace0B,CJNH,CJtDK,ASqDE,GLC9B,AIM+B,EJNF,AXHP,AuB5CN,AP8CmB,CLCnC,AXHsC,AuB5CT,CvB4CP,CWGU,AXH5B,CgBE0B,CExCT,AFwCmB,CExCV,AKNI,AP8CJ,CLCM,AU5Cd,CV4Ce,AU5CH,ANkDR,CAAgB,ACPA,CLC1C,AIM0B,ACP1B,CK3CsB,AEHe,AP0CL,CEpCX,AKNL,ARqD6B,ACN7C,CK5CuC,CHGD,AKNE,CLMnB,AH+CK,CMlDJ,AEHN,CLMyB,AH+CzC,CG9CI,AGJwC,AEHA,CFGC,ANkDO,IQrDpC,EAAmC,CFGP,CEH5B,CFGsC,AEHlD,OFGwC,CAAtB,EAA0C,KAA1C,EAAiD,EAAjD,CAAtB;AlBiDA,AI1DI,ACEJ,AESA,AEJK,AD+CL,AENA,AClCA,AdqCI,AkBtCC,ACCL,ACPS,Af8BL,AJQP,AsBtCO,ACwSA,AClTS,ACGb,AX4DI,AYhDJ,ACRI,ACJJ,ACuDA,G7BZJ,CEeI,AO/CA,AC2CA,AENA,AClCA,AaFA,AG2CA,CzBnBqB,AoBvCrB,CbUK,AMMA,AbuBL,AkB7BI,ARqDA,AaxDA,CzBsDD,ASnDG,AD+CH,AENA,AKnCG,Cf6CF,AQJA,AENA,AMlCE,ACPG,AMPL,AGAA,CrBEC,AESD,AEJI,AMMA,AENE,ALqDH,AYhDH,CpBZM,AGWL,AVwCK,AeSF,AYhDH,CfLD,AQAQ,AGAH,AOgDF,CnBDP,AQxCU,AIPA,ACwSA,AI3SA,AEmDF,CvBvDK,ACEJ,AMYA,AIDG,AMkSD,AI3SA,CpBFD,AK8CV,AClCU,AIDG,AQbH,AGAA,ChBgDC,AMlCE,ACPG,CbPA,AMgDJ,AOzCK,AIwSF,CrBrPf,AKxDa,AMYJ,AdqCQ,A0BnDJ,AGAA,CrBEb,CK8Ca,AClCE,AKAE,AOdjB,AX4DI,Ac5DJ,C1B0DgB,AI1DI,ACEJ,ARiDI,A4B/ChB,CpBFa,AgB6SG,AI3SD,Cf4CnB,AClCS,AIDD,AKNJ,CLMkB,AKND,AOgDrB,CtBrDoB,AK8CF,AClCE,AIDZ,AENI,AIwSW,AI3SnB,AEmDgB,CtBrDpB,AK8CA,AClCS,AMPiB,AIwSZ,CdpSd,AUJQ,AOKR,CnBVuB,AESD,AIGC,AdqCI,AkBtCD,ASDJ,CnBVE,CLwDxB,Ae7CI,AMkSyB,ChB7S7B,ARiD8B,AuB5C1B,ACwSA,CdpSJ,AaJ6B,AIK7B,CnBV4B,AESD,AIGA,AaFA,AG2C3B,ChBzC4B,AKAf,CAAY,CIPQ,EhBPjB,CAAa,CGW7B,AVwCuC,A2BvCvC,C3BuCwC,AmBrCT,CAAC,EZdE,AOczB,CPd0B,COcK,GdqCV,AuB5CD,CvB4CoB,AmBrCxB,AIPa,CTOM,AdqCxC,AmBrCqC,CLAI,AKApB,CZdI,AgBOA,ChBPe,CAAf,AYcgB,AIPF,CAAd,CJOhB,CZdmC,AgBOF,CJOG,AINzC,EhBRqB,CYchB,EZdyC,AYcA,CZdC,CYc1C,EZd2C,AOc/C,AKAiD,CLA1D,AKAa,CZdG,AYchB,EZd4D,EAA5C,CAAZ;AJ2DJ,AI1DI,ACEA,AIIQ,ADgDZ,AENA,AClCA,AR2CA,ANNI,AkBvC0B,ACE9B,ACR6B,AfoC7B,AgBjCA,AEFS,AETT,AV8DI,ACPJ,AYhDI,ANuCJ,AQYA,I3BEA,AQJA,AENA,AClCA,AKAA,AELA,AL4CA,ETrDI,AKMQ,AMMkB,AHgD1B,CZFD,ASpDU,ADgDV,AENA,AKpC4B,AFyC5B,CbKC,AQJA,AENA,AMlCA,ACRyB,AGCpB,AETH,ATuDF,AcGE,ClBlDS,AMMkB,ACE5B,ACRyB,AfoCzB,AgBjCD,AEFM,ARqDH,AOhBF,Cd1CK,ARiDA,AqB1CL,ANmDG,AavDE,CrBLD,ACEE,AFuDJ,AcnDyB,AGCpB,ChBPF,CMgDV,AClCS,AIF4B,CVVvB,AK8CJ,AClCA,AIF4B,AUPxB,Cf2CH,AO1CyB,AKRvB,ArBkDN,CgB1C8B,AGCpB,ARqDb,CZFJ,AQJA,AGxCS,AdqCQ,AuB5CC,ARqDH,ACPf,AYhDiB,Cf2CL,AYlDI,CXgBD,AKAf,Ad4BA,AoB5CA,CjBIoB,AGoDJ,AXHI,AmBrCJ,AELhB,AL4CgB,CRnDK,AK8CrB,AQvCgB,AOJK,AEmDJ,CvBxDb,AOcK,AR2CT,AY7CiC,Ab8Bf,AUkBE,AOhBpB,Cf5CqB,AMgDJ,AKpC8B,CVVzB,AK8CtB,AClCoB,AIFa,ACEjC,ACRgC,AfoChC,AyBcqB,ChB1CZ,AKAY,ACRyB,ACG9C,AEFY,ADqCS,Cd1CjB,AK8CgB,AO1CY,ACGX,AEFM,ARqDZ,AOfX,CTGiB,AClCE,AdqCI,AkBvCwB,AKLvC,ARqDa,CAAV,CI9CU,ACRyB,AJ+ClD,CTrDI,AMgDkB,AbGQ,AuB5CC,ChBPF,AQ4DA,CD9CF,AgB0CE,CjBR7B,AClC4B,AgB0CE,EvBxDG,AMgDN,AUzCS,ARqDhC,CFZwB,AUzCS,CRqDF,CavDlB,Cf2CY,AbGU,AqB1CvC,AOJ8B,C5B8CU,EWGxC,AENA,AMlCqB,AJ8CmB,CD9C/B,AKAqB,CNkCI,Ae3CC,Cf2CnC,AClCwC,AcTJ,CbuDD,AeJd,CfIwB,AeJD,CvBxDf,APmDC,AuB5CC,ARqDI,CR5DG,APmDW,AmBrC5B,AIP6B,CTON,AdqCxC,CcrCyC,AKAP,AJ8CW,CR5DpB,AYcR,CIP+B,AKFtB,CrBLa,AYcF,AIPV,AKFc,CrBLhB,AYezB,AJ6CA,AavD0B,CLEyB,ChBPT,AgBOtC,ChBNA,AqBIyC,CEmDO,EAAnC,CAArB,CFnDsD,CAAC,GdS9C,CAAT,QcTiD,CAAmB,IAAE,CAArB,EAAwB,CAAxD,EAA2D,EAA3D,CAAb;AzBsDJ,AI1DS,ACEL,AIGA,ADiDJ,AENA,APSH,AY9CO,ACGC,ACTG,AfqCX,AJEL,AsBtCkE,ACwStD,AC/SJ,ACCA,AX4DI,ACPJ,AYhDI,ACLJ,AP6CQ,GhBnBZ,CHgCI,AQJA,AENA,AGKA,CJlDkD,AMOT,CNPhB,AMOJ,ACIhB,AJ8CD,AOfI,CnBaL,ASvDH,ADmDG,AENA,AKtCH,ACIM,ACXqC,AJkDxC,AMRM,CnBaL,AI1DK,AIsDL,AENA,AO7CqB,AGGiC,AEPtD,ATsDA,CTrDM,AKPuB,AOqBzB,ACXJ,AnByCZ,AsBtCmE,AGNtD,AX4DE,Ac5DF,AP6CM,Cd3CD,AIMV,AGoDQ,AavDE,CrBLE,AgBMiD,CCwSrD,CX9PR,AMlCY,AKgSH,AE9SA,AEKI,ACLJ,AP6CM,CnBaf,AI1De,ACED,AK8CJ,AMlCG,AIRmD,AEPtD,ACCA,AGAA,C1B0DC,AI1DK,AMgDL,AU1CsD,CRsD7D,AavDY,ANwCE,Cd3CD,AGoDjB,AVVR,AuBkQqB,AC/SA,ACCA,AX4DE,ACPf,AarDa,AP6CM,CTGP,AW8PR,AE9SJ,AGAA,C1B0DA,AsB3DA,CD+SgB,AE9SA,AEKI,ACLJ,AP6CL,CnBayB,AKxDf,AK8CrB,AahDiB,AGAA,CVcT,AJ8CY,CR5DR,AMgDK,AMlCK,AIRuC,ADuCtC,CnBavB,AI1DyB,AMgDP,AMlCV,AIRkE,AGNtD,AGAA,CtBAR,AgBMiD,AGN7D,AGAA,Cd4De,CFZI,AMlCO,AOdH,AX4DE,Ac5DF,AP4CnB,Cf5CyB,AgBMiD,AGNtD,AX4DT,Ac5DS,CVcpB,CNkCJ,AahDA,AEKgB,ACLhB,CNM6D,ARsDhC,AavDL,CrBLhB,AMgDgB,AahDI,AGAA,ChBgDH,CU1C2D,ARsDhF,CavDwB,Cf2CF,AEYQ,AavDL,CbuDzB,CP1Da,CAAa,AK8C9B,AU1CuF,EV0CxD,CAAC,EL9CG,AoBGX,CpBHY,AK8CH,Ae3CK,CAAtB,Ef2ChB,Ae3CyC,Ef2CH,CAAtC,Ce3C6C,CpBHf,AoBGgB,CpBHD,CAAf,GAAmB,GAAnB,AoBGW,CAAc,CAAd,CpBHc,CAAC,CoBGG,EpBHF,AoBGzC,EpBHC,AoBG8C,EpBHF,AoBG7C,EpBHC,AoBGkD,CpBH/D,AoBGY,CAAZ;AzBsDJ,AI3DmC,ACG/B,AEOP,AC6CG,AENA,ACnCH,AdqCO,AkBtCJ,ACC8B,ACP1B,ACEJ,ApBxBR,AsBqBgB,ACySA,AChTR,ACEI,AX4DA,AYlDP,AX2CG,AYhDI,ACLA,AP6CI,AQUR,C7BvER,EAAA,CE0EQ,AQJA,AENA,AKpCA,AGJA,AL6CA,AcEA,EtBrDI,AWW0B,AJ+C1B,AavDA,ANwCI,CnBaL,AQJA,AENA,AMnC4B,AITe,APiD3C,AMRM,CnBaL,AI3D+B,AIuD/B,AENA,AKpCA,AOda,ATuDb,CTtDgC,AWa/B,ACC4B,AEL7B,AEFI,ARsDD,AavDA,ANwCI,CtBKH,AoB5CE,ACEL,AGsSG,AE9SE,AX4DF,AavDA,ACLE,CtBD4B,ACG7B,AGoDT,AetDW,AGAA,CrBED,AGoDF,CENR,AMnCqC,ACPxB,AIwSF,AFjQI,CnBaf,AQJU,AENA,AbEE,AmBrC0B,AKiS1B,AChTW,ACET,AVqDd,AarDc,C1B0DH,AUVX,AbEa,AgBGF,AcEA,CVjDK,ALsDZ,AOfc,AQUN,CvBxDgC,AIuDjC,AENE,AYlDa,ClBCmB,AMiD/B,AbEN,CGQO,AHRE,AkBtCjB,AOdA,ACEmB,AVqDnB,AarDmB,AP6CR,CJjCK,AENI,AMNA,AEKhB,ACLgB,CtBD0B,AIuD9C,AENe,AGKqB,AYhDjB,AEkDnB,C3BGkB,AKxDd,AWW6B,AGgCX,Cd3CD,AGoDJ,AQzC8B,AKiSvC,AE9Sa,AGAA,ClBsDrB,AENA,AKpCA,ACCiC,AHwCjC,AcEoB,CZ3CC,AQZjB,AEKA,ACLA,ClBsDgB,AENA,AbEZ,AqB1CR,AGsSwB,AIzSA,CzBqDD,AUVvB,AMnCmD,AEL7B,CV8CA,CENC,AKpCE,CVVrB,AK8CoB,AbEI,A4B7CA,CzBqDV,AKxDW,AGoDN,AU9CvB,ClBkD4B,AkBlDD,ClBkD3B,AUVyB,EVUW,AKxDH,AGoDjC,CENA,AiBOoB,CnBDS,CRI7B,AQJA,AEN8B,AO1Cd,CP0ChB,AbEqC,AoB5CP,ACE9B,CV8CgC,AXJM,AoB5CP,CCEK,CHIf,CAAS,AENE,AQDR,CjBiDY,AXJR,A4B7CK,CjBiDI,AXJM,CAAf,AoB5CE,CTgD9B,CHpD6B,AaM7B,AOHwB,CpBHc,ARgDO,AkBtCxB,AENiB,CpB4C9B,AwB4PA,AIzS+B,CVOD,AENtB,AQDQ,CVOH,AUPjB,CpBHyB,AUU7B,AEN0C,CpB4CQ,CQhDN,CAAf,AYIb,EZJ+B,ARgDO,AoB5CP,CZHvC,AR+C+C,CoB5CvC,CAAZ,CpB4C8C,CAAS,OAAT,IAAoB,SAAS,CAAC,IAAV,CAAe,CAAf,GAAiB,CAA/E,IAAoF,SAAS,CAAC,OAAlG,EAA2G;AGS/G,AI5DQ,ACIC,AIKT,AD+CA,AENA,APSJ,ANPY,AkBrCR,ACDI,ACNA,AfqCR,AkBtCa,ACySD,ACjTR,ACGI,AX4DH,ACPD,AYhDI,ACLA,AP0CA,AQaA,ExBER,ADdA,EFeI,AQJA,AENA,AGKA,CG1CyC,AG8BpB,CH9BA,ACLjB,AfqCR,AuBtCQ,ANoCJ,AQcI,C3BGD,AI7D2C,AIyD3C,AENA,AMrCH,AdgCJ,AWUO,CbKC,AKxDK,AIKH,AD+CF,AENA,AbEI,AkBrCF,AKRG,AERqB,ATwD1B,CTtDI,ACGE,AFuDd,AcnDW,AGDG,CjBoDd,AcnDY,AMNE,AGAA,CrBEE,AeGA,AKAH,CjBiDT,AOzCU,AURA,ChBEC,ACyCX,CVUA,AUVU,AU3CK,ACySD,AE9SA,AVqDd,AarDc,C1B0DH,AKxDK,AK8ChB,AKnCa,AKRG,APgDL,CRnDM,AIKH,APoClB,CQKiB,ARLjB,AqB3CqB,AGAA,ACuDF,CjBPf,AW8PkB,ACjTsB,AK0DxB,C3BGD,AGDnB,ANPuB,AkBrCF,AFwCF,CJ9CG,ACyCF,APSpB,AcnDQ,CP0Ca,AO1CE,AIwSG,ACjTqB,ACGtB,AGAA,C1B0DH,AaLA,AYhDd,CLAQ,AERZ,AGQqB,CpBHT,AK8CM,AbEV,AKPZ,AkBtC6B,CfHC,AYItB,AGDI,CfHI,AFuDhB,AcnD4B,AIwSE,CrBpPH,AUVvB,ARLJ,AmBmQ+B,ARzPJ,AYhDnB,CAAsB,CpBHI,AK8CP,APS3B,AwBFQ,CjBPJ,AO1C4B,AUiDA,C3BGV,AaLA,CbKU,AUVF,AGKE,AYhDE,CzBqDZ,AKxDV,AK8CR,AKnCa,AFwCK,CJ9CJ,AMMW,CNNC,AZ2CP,AwB4PG,CrBpPQ,AaLA,CExCjB,Ab8BT,COpCU,AZ2CU,AwB4Pc,AE9SrB,AGAA,CvByDd,AY5C2B,AQbA,AGAA,ACuD1B,C3BGJ,ASnD+B,AI8C/B,AcEsC,E3BGF,AGDxC,AY5CiB,AFwCuB,CJ9CtB,AQDU,AIwSkB,ClBrPR,AY5CC,AEPF,AIwSU,AE9SR,AGAA,C1B0DI,ASnDH,APoCxC,AqB3CwC,AVqDpC,AYhD0B,ACLU,ACuDhC,CZ1CS,AURsB,AEkDS,ClBhD9B,AZ2CmB,AKPX,CFeoB,AHRR,AkBrCK,AEPf,CRCgB,AMM3B,AURa,ChBEZ,ANkDlB,AY5CI,AEPuC,AUiDnC,ClBhDJ,AQDwB,AQDgB,AEkDS,CxBEA,AcnD7C,AQDsB,CzBqDqB,AuB1DjB,AEK1B,ACL0B,CL8SQ,AE9SO,AGAA,C7BkDrB,AKP5B,AqB3CkC,AGAA,C7BkDY,CGQA,AEfJ,CFec,AqBoPK,AE9SR,AGAA,C1B0DjD,EuB1D8B,AGAA,CL8S6B,AMvPvD,C9BLoB,AwB4Pc,CAAjB,AE9SkC,AGAA,C7BkDJ,A0BlDK,AGAA,EL8SS,CE9SR,AGAA,CL8SjD,CE9SS,AGAA,E7BkDO,A0BlDqC,AGAA,C7BkD1C,CAAX,A0BlDS,AGAA,CHAb,AGAA;A1B2DJ,AI5DS,ACG2B,AEO5C,AEDQ,ADgDA,AEPA,ACnCR,AR4CQ,ANPK,AkBrCL,ACAA,Ad8BA,AgBnCA,AEJ4B,AC0SpB,AE9SJ,ACSZ,AX4CQ,AarDI,AP+CJ,AQQI,I3BGJ,AQHA,AEPA,APSA,AY5CA,ACAA,AHwCA,EUrDI,AGAA,ACuDA,C3BGD,AQHA,AEPA,APSA,AUJA,CbKC,AI5DK,ACG2B,AIM9B,ADgDF,AEPA,APSA,AY5CA,ACAA,AELE,AEJsB,APiDxB,CTvDM,ACG2B,AEO7C,AIKA,AIAa,ACAA,AITwB,AIKrC,ALsCa,EfjDO,ACG2B,AH0ChC,AkBvCwB,AGJtB,AGAA,CvByDT,AoBzDU,AGAA,CRQC,ClBkDX,AI5De,AgBMmB,AC0SpB,ARzPd,CbKW,AI5DK,AKSH,ADgDb,AVZO,AsBvC4B,APiDxB,CXVX,AgBnCc,CbP+B,AK+C7C,CL/C8C,AIM9B,CTmDD,Ae7Cf,ACAA,AKiSmB,ARzPJ,AMNf,AQQe,CZ1CC,ACAA,AELE,AS+CF,CtBtD+B,CLyD7B,ASnDE,AYuSE,AE9SlB,AVqDc,AarDd,AP+Cc,CfjDN,AgBMmB,AGJV,AGAA,CtBFI,AWezB,ACAA,AIT4C,AD2C5C,CfjDQ,AOehB,AIA6B,ACAA,AITU,AC0SvB,CdtShB,CPkD+B,AaLA,COjDyB,AOmD5C,CZ1CqB,ACAA,CObrB,AGAA,C1B0Dc,AoBtDa,AGJF,AVqDX,AarDW,ACuDF,C3BGC,AaLA,CbKV,AkBlDJ,AMCtB,AX4C0B,CK7CK,AEJ+B,CGJrB,AGAA,ACuD7B,C3BG0B,ASnDd,AI8Cc,CJ9CF,ASCd,ETDE,ASCY,AEJ6B,APiDzD,CbKA,CSnDgC,AI8CI,CbKA,Ae7Cf,ACAA,AELP,CHKgB,ACAA,CPNd,ASCiB,AL6CM,CbKA,CSnDF,ASCvB,CHKO,AFwCqB,CbKA,ASnD1B,ASCqB,AKRR,AGAA,CXaO,ACAf,AObiB,AGAA,CjBOG,AMMpB,CNNL,AMMhB,ACAsC,AELxB,CTDd,AOMqB,AHwC0B,CbKA,AgB7C/C,AEL0C,AKRb,AGAA,EHAe,AGAA,CHAf,AVqDa,AarDb,C1B0Da,AaLU,CbKA,AuB1DL,AVqDL,AarDK,C1B0D/C,AuBzDQ,AGAA,EboD8C,IAAtD;AbMA,AI7D4B,ACGpB,AEdhB,AEqBQ,ADgDH,AEPG,AC7CR,ARuDQ,ANRC,AkBrCD,ACCA,ACTI,AfsCP,AgBpC+C,AEJpC,AC0SA,AChTR,ACGS,AX4DT,AY1ER,AXmEQ,AYjDI,ACJK,AP+CZ,AQQO,CpBrEZ,AIiBA,AajBA,CjBAgC,AIiBD,AajBQ,ChBwCnC,ANeA,CFiBI,AQ1ER,AEgEQ,AKnCA,AH+CA,ACPA,CLGJ,CSnDQ,ACEwC,AOHxC,AEmDA,C3BGD,AK3D4C,AKiD5C,AU/C2C,AR2D3C,ACPA,CbKC,AI7DwB,AKUtB,ACyCF,APUE,AY7CF,ACCE,AIbuB,AGDpB,AX4DL,ACPA,AarDK,CtBHoB,ACIrB,AUYH,AKZD,AEJC,ACGK,AGAA,CjBOF,CLVuB,AaQvB,ACEyC,AKPrC,AEIJ,ACJI,ChBgDZ,APUU,AcrDD,AQDA,ChBGE,AOOA,AEPwC,AIV1C,CDgTkB,AChTjB,ATwDV,CVKa,AoB1DG,AX4DhB,ACPW,AarDK,CVcF,AOdG,AGAA,C1B0DjB,AI7DqC,AKUtB,AaVF,ClBAyB,AkBAtC,CPgBA,AMgSgC,ARxPjB,CVKG,AY7CF,ACCE,AMjBF,AK0DA,CvB1DuB,AkBAtB,AK0DA,CpBrEzB,AIiBA,AMEY,AIwS+B,AG3T3C,AXmE0B,AYjDd,ClBlBZ,AIiBA,AME4B,AOnB5B,ACkB4B,CVSpB,AOhBoB,ACGR,AGAA,CXaS,AMgSb,AE7SkB,AGAA,CHAd,AGAA,CTKR,AJgDmB,AYjDnB,CtBsDS,AcrDY,AQDA,CtBsDE,AY7CF,AQbK,AGAA,ACuD1B,ClBhDO,ANmDE,Aa5CC,CPPQ,AOOA,AMjBtB,ATwDkB,CIhDd,AJgDwB,AYjDxB,AEmDwB,CxBGG,AmB7DF,ACGrB,AVqDU,AarDV,CjBOG,AQFoB,AKRD,AGOC,CTUL,CPPC,AOOA,AMjB3B,ATwD8B,CYjD1B,AEmDA,CxBGgC,AcrDhC,AKR8B,CbUvB,CQF0B,AJgDrC,CJ9CgC,CNmDD,AY7CV,AFwCe,CJ9CzB,ANmD8B,AY7CX,CZ6CC,Aa5CT,ACTlB,CREgC,AOOA,AHuCpC,CJ9CW,AOOW,ACTqB,CRE3C,ANmD2C,CAA3C,CY7CqB,ACCmB,ACTpC,EFQkC,ACCxB,CDDO,CCCuB,CDDH,CACrC,CCAU,EAAmC,EAAnC,EAAuC,EAAvC,CAAd;AhB6CA,AI9DQ,ACIC,AIQT,ACwCA,APUA,AY7CK,ACCL,AER0C,AGuSlC,AChTJ,ACEgC,AX6DvC,ACPG,AatDoC,ACwDnC,Gf/BL,CZkCI,ASlDA,ACwCA,AMlCA,AJ/BR,ACsEQ,CK/Cc,ANuDlB,AeVI,CZtCK,AGPL,ClBoDG,AIhE2C,AMsD3C,AKnCG,AFwCH,CbKC,AIhEyB,ACMpB,AKgDL,APUE,AoB3D8B,AVsDhC,AatDgC,CtBLhC,ACMM,AIQL,AMKG,ACCH,AOfgC,AGAA,CjBS/B,AOMA,AMjBI,CjBGE,AF0DH,AoB3D8B,AGAA,C1B2DvC,Ce7CY,CLmCZ,APUY,AY7CC,AMgSC,AChTA,ATwDd,CRrDgB,AQqDL,CRrDM,CK8Be,AYjCf,CZqDjB,AW2PkB,ClBnPD,AULF,CJ7Cf,AOMA,CAAiB,AK+RK,AChTD,CPgBb,AFwCU,CJ7CC,AMKG,CVbV,AISR,AMII,CVbkB,AWc1B,CXdQ,AWcc,AK+RI,ClBnPd,AY7Cc,AMgSC,ARxPJ,CJ5Cf,ANiDkB,CAAd,AY7CR,CCCsB,CHuCR,CVKY,AULF,CAA5B,EQwPqB,ARxPe,EVKD,CkBmPI,AChTtB,ATwDjB,CSxD8B,CDgTtB,CZpSJ,ANiD0B,CMjDjB,ANiD2B,CAAV,Aa5CR,CAAS,CMjBK,CnB6DM,CAA1C,CAJiD,AaxC3B,Cb6CtB,CMlDI,AOKiC,AMjBE,CNiBjB,AMjBL,CbYM,CAAnB,AOKoC,AMjBE,CNkBtC,CPNsB,AaZT,EbYb,AaZ0C,CbW3B,EAEf,Eaba,EbaT,Aab6C,EAApC,CAAb,UbaA,CAAS,OAAT,EAAkB,CAAlB,EAAqB,CACjB;ATgDR,AK3D6B,AIWpB,AZwCT,AkBtC8B,ACEzB,ACVD,AfqCP,AgBnCG,AEHI,AC0SI,AChTJ,ACCI,AVuDR,AYlDI,ACLI,APgDZ,EAAA,EnBYI,AaLA,EJ3CS,AMEqB,ACEzB,ACVD,AGDA,AENA,AGMA,CzBuDD,AShDO,AMEqB,ACEzB,AOjByC,AVwD5C,AaxD4C,C1B6D3C,AK3DyB,ARmDzB,AqB5CE,AL+CF,CRtD0B,AIWlB,AMEqB,ACEzB,AOfA,AGAA,CL8SA,AF/PZ,Cd/CoC,AYKxB,AGDA,AD2CZ,CVpCY,AQNC,AGDA,AENC,AGMA,CTWE,AERD,AGuSA,AChTA,AGMA,CzBuDX,AgB5Ca,AK+RD,ARxPZ,CN9CO,AIKA,AIAgC,ASJhC,AX6CI,CEzC6B,AGN1B,CbPwB,AiBFlC,AGMA,CpBJmC,AiBFvB,AGMA,C5B+CD,AgBGA,CK/CG,ACwCtB,Cd/C4C,Ac+C5C,CHhCY,AIXJ,AENA,ATwDc,AYlDd,C5B+Ce,AmBpCG,AIXF,AC0SZ,CxB3PY,AkBtCa,ACE7B,CDF6C,CAA7C,CKTA,APkDmB,CIjDnB,AGDqB,AD2C7B,CtBI6B,AoB9CC,EGDtB,APkDc,AMPtB,CNOgC,CIjDxB,ACEU,AL+CI,CIjDa,ACER,EAAT,AL+CgB,ChBH9B,AoB9CI,CCEuB,CrB4CQ,CgBGnC,CK/Cc,ACwCV,CNOgC,CK/CJ,EAAlB,AL+CyB,EK/CH,CL+CM,AMP9C,EDxCkB,ACwCO,EDxCoB,CL+CM,IAAL,AMP9C,CNOwD,CAApD,AMPoC;AnBcpC,AI/DI,ACEI,AIWS,AD6CrB,AELI,APSA,ANRI,AkBvCgD,ACE3B,ACTxB,ACC0C,AGwSnC,AC/SJ,ACAK,AVuDT,AYlDC,ACLQ,APgDT,AQQA,EnBAJ,ERKI,AUVA,APSA,AULA,AcCA,EvB1DI,AKaa,AMEmC,ACE3B,AERkB,ClBsDxC,AK/D4C,AIa7B,ACwCf,APSA,Aa7CuB,AHwCvB,CbMC,AK/DyB,AKqDzB,APSA,AoB5DK,AVuDL,AavDK,CrBFL,AIagB,AOIQ,AOflB,AGAA,CXa8C,AMkShD,AC/SE,ClBFF,AcSwC,AKPpC,AGAA,CtBFH,AI0Db,AO3C8D,CP2C9D,AUjDsD,AGwSvC,CLhSsB,AKgSrB,AC/SE,ATuDd,CGxCkC,AOflB,AVuDL,AavDK,CHAC,AGAA,C1B6DjB,AUVA,APSA,AmB5DiB,AKwDN,CjBLG,AiBKF,CjBLG,AGIA,CbMC,AGDA,AkBmPR,CAAW,AC/SE,ClBFjB,AI0DR,AELoB,AGIE,CTzDE,AI0DxB,AELI,AMpC4B,CAAe,AOf/B,AGAA,ChBmDO,AMpCf,AKgSI,AE/SkB,AGAA,ChBmD1B,APSsB,AoB5Dd,AGAA,CtBFJ,AiBiTqB,ARxPF,CbMvB,AI/DyB,AMgCO,CAqBT,APSE,EC9DrB,AI0DR,AKDsB,CQwPV,ARxPoB,CAAV,CLCtB,AmBAI,CxBIsB,AwBJO,CdDC,EVKI,AmB5DjB,CAAa,CTuD9B,EAAoC,AcCpC,EnBAK,AmBAiC,CLxDF,ATuDG,EVKvC,CKJJ,AKD8C,ELCtB,AcxDmB,CAAtB,EAAyB,ATuDK,ESvD9B,AKwDgC,CAAC,CLxDJ,ATuDJ,CAAU,CAApD,EcCA,CLxDiB,EAAoC,EAApC,CAAb;AtB8DJ,AK5DI,AISI,AD8CR,ALIA,AW9CR,AjBsCY,AkBxCA,ACE0C,Ad+BlD,AgBvC6C,AEFrC,AC2SI,AC/SJ,ACDyB,AX8DjC,ACNI,AaxD6B,APiD7B,AQQA,EzBXJ,AUgBA,EZAI,AGDA,AW9CR,ADyCQ,AcCA,ClB/CyB,AMEgB,AGL3B,CbLV,AUUiB,ACGyB,Ad+BlD,AgBvCI,AEFI,AEJA,CtB6DD,ASlDK,ANiDL,AYjDH,AbkCJ,AWUO,CbMC,AGDA,AoB7DyB,AVwDzB,AaxDyB,APiDvB,CIjDwB,AGAA,CVeoB,AKiS1C,CbvPD,AXJE,A0BrDuB,AGAA,CrBEtB,AGuDF,AQ1C4C,AIV1C,AEJA,CjBCC,AeGA,AC2SA,AC/SA,AV6Df,CSkPgB,ATlPhB,AObgB,EXQA,ANXhB,CMWiB,AXJT,AKPR,AoB7CQ,ATuDJ,AMPe,AQQJ,CnBAC,AcxDI,AKwDJ,CnBAJ,ALIR,CHCA,AK5DI,AeGA,AC2SI,ChB9SW,AeGA,AC2SA,AF/PA,CXQD,ALIA,AW9C1B,AQdY,AHgDgB,CnBaD,AEhBvB,AUgBA,CQzDQ,ARyDR,CP5DQ,AgB8SI,AF/PO,CXQO,ANX1B,AkBhDgC,ADmDJ,AQQxB,CnBAuB,AYlDnB,ACySqB,CbvPH,ALIE,CKJhB,AmBAe,E3BKvB,AGD2B,AgBZE,CXQD,AauPpB,ATlPZ,CeLI,EfKJ,CJLoC,ANX7B,CMW8B,ALIT,CKJQ,CAAzB,ANXX,AiBGmB,CXQf,ALIoC,AgBZpC,CjBHkC,IUgB7B,CTDL,CDfJ,EAAqD,AUgBrD,EAAwB;AR9DhB,ACIA,AIQK,AD8CZ,AENG,APUA,AW/CR,AjBuCS,AkBtCD,ACDI,ACPJ,AfuCA,AmBkQQ,AC/SP,ACFO,AX+DR,ACNA,AYnDA,ACNQ,APkDR,AQQA,GnBFJ,CEJI,APUA,AY9CA,Ab+BA,AWUA,CG3CwC,CPF/B,AOEa,CPFZ,ACwCP,APUA,AahDH,AdiCG,AqBjD4C,AV2D5C,Aa3D4C,ChBsD3C,APUA,ActDE,AfuCF,AqBjDyB,AV2DzB,AYnDE,ACRuB,APoDvB,AQQA,ClB9CM,AcdR,AGAA,CtBEM,ACIA,AgB6SF,CNjSD,AH+CA,CHnDC,AMIA,Ab+BR,AWUA,AMPU,CE+PC,CjBjTG,ACIA,AgB6SF,CnBnQqC,AUiBtC,AObE,CF1CC,AfyCd,AUcY,CR/DK,ACIA,AKgDjB,APUA,ASCW,CAAJ,CKvDU,AQFA,AN4CA,CE+PT,AF/PU,CflDG,ACIA,AgB6SF,ATlPF,CG/CjB,AH+CkB,AazDE,AEoDF,CZ1CC,AERE,AE0CR,CAAS,CE+Pd,AMvPa,CfKC,AazDE,CVUxB,AMiSyB,ATlPF,CG/CC,AH+CF,CAAL,AObU,CPapB,EG/CqB,AMiSpB,CTlPqB,AeLA,CAAC,EFpDV,CAAQ,AN4Cf,CflDI,ACIA,AO2DiB,AOblC,CflD8B,ACIA,Ac2CM,CFvCnB,AQFG,AN6CpB,CF3C8B,CQFG,CbyDJ,CR/DM,ACIA,AYIlB,ALuDuB,CR/DJ,ACIA,AUYZ,AUVJ,CVUa,AERE,CQFG,AEoDjB,CVlDJ,ALuDjB,AeL4C,CFpDxB,CVUI,AERe,CQFG,CVUH,CXhBT,ACIA,AUYN,AUVJ,CrBNyB,ACIA,AUY7C,AUVA,CrBN8B,ACIA,AYIb,EAA6B,CbRG,ACIA,CYIhC,CAAjB,CbR8B,ACIA,AsBsD2B,EAApC,CvB1DkC,ACIA,AsBsDvD,CvB1DwD,ACIA,GDJC,ACIA,EDJxC,ACIA,EDJ4C,ACIA,EDJ5C,ACIA,CDJb,ACIA;AL2DJ,AI9DI,ACIA,AIOa,ACyCjB,APUA,AWhDR,AjBwCK,AkBrCG,ACAA,ACTA,ACDA,AEAI,AC0SI,AEhTJ,AX8DP,ACNG,AYnDA,ACLI,G7BsCR,AesBA,CFTI,APUA,AevDA,ALkDA,AYnDA,ErBNI,ACIA,AIOa,AcVb,AGAA,CjBUc,ACyCf,APUA,AULA,CHLC,APUA,AY7CE,ACAA,ACTA,AJiDF,CbKC,ASnDe,ASJhB,AODC,CXQb,AIPa,AEAK,AC0SF,AI3SF,CrBNG,ACIA,CDJC,ACIA,AUaA,AQhBA,AGAA,C1B6DD,AqBmPE,AEhTA,AGAA,C1B6DD,AUVV,APUA,AiBvDc,AC0SF,ARxPZ,CHLW,APUA,AY7CE,AETA,CP4Cb,AItCR,AEGsB,ChB6CD,AoBvDI,CpBuDjB,AUVc,AItCtB,AGNwB,CP4CD,APUf,AY7CiB,ACAA,ChB6CD,AUVhB,AQ7CA,AG0SQ,AEhTJ,AEKJ,ACLI,C1B6Da,AGAc,AevDf,AEAK,AC0SF,AEhTA,AEKF,ACLE,CtBDf,ACIA,AYIgB,CbRC,ACIA,AWaA,ChB6CD,AGApB,CevDA,AG0SQ,AEhTJ,AEKJ,ACLI,CRMiB,AODC,CrBNlB,ACIA,AgB6SqB,CjBjTC,ACIA,CL0DD,CyBxDC,CPC1B,CdP8B,ACIA,AYId,AIySR,CNhSK,AETW,ACDI,CHUH,EETT,EAAa,ACD7B,AEAiB,CAAa,EpBuDV,Ae7CY,ACAf,ACTD,CjBsDsB,Ae7CL,ACAF,CCTG,AQFZ,CAAS,CrBNL,ACIA,AYIV,AGDoB,ChBPD,ACIA,CWaC,ACTE,CjBsDtC,AgB7CqC,ACTrB,CAAhB,CjBsD8C,AI9DpB,ACIA,AUaD,AKVc,CpBuDQ,Ae7CL,AKVzB,ChBPwB,ACIA,AUahB,Cf6CzB,AI9D0B,ACIA,AeGgB,EpBuDS,AI9DP,ACIA,AUaE,AKV7B,AKDK,CrBLd,ACIA,AWYuB,CDAlB,ACAiC,AIVA,AKDF,CTWb,ASXT,CVW4B,AUXlD,ETWkD,CDArC,AKVI,CJUA,CDAsC,AKVF,CJUC,CDAzC,AKVI,CAAb,CLUuD,CAA9C,CAAb,ACA2D,CAAC,QAAN,CAAe,CAApD,EAAuD,EAAvD,CAAjB;AhB8CI,AI9DK,ACIA,AIMD,AD+ChB,AELQ,APUA,AWjDyB,ACIzB,ACAA,ACTA,AfwCA,AkBzCI,AC0SI,AC/SR,ACAI,AVwDJ,AaxDI,APgDJ,AQOA,Eb5CyB,EJuCzB,APUA,AY7CA,ACAA,ACTA,AfwCA,AWUA,AcDA,ClBjDyB,CAArB,CAFe,AC8ChB,APUA,ADdA,AWUA,CT1DM,ACIA,AIET,AC8CI,APUA,AY7CA,Ab+BA,AoB9CA,ATwDA,AMRE,CflDI,ACIA,AGqDlB,AOxCa,Cf6CG,AoBvDE,AC0SF,AE/SE,AGAA,CtBFE,ACIA,ASSa,AGLlB,CHKkB,AEIjB,ACTA,CDSC,AKgSE,AF/PA,CTEX,APUA,AiBvDc,AC0SF,AC/SF,ACAI,AGAA,CtBFE,ACIA,AKgDL,APUA,AwBLA,C3BKG,AI9DG,ACIA,AKgDjB,ASFc,AQOF,CzBTZ,AkBzCiB,AELJ,ACAI,AVwDjB,AaxDiB,APgDF,CTED,AW6PN,CrBnPS,AQLzB,AELuB,APUA,AY7Cf,AOfA,CZkDA,AKnCgB,Ab+BA,AWUA,COnDK,AGLA,AGAA,CvB4DH,ActDlB,AUiDA,CXxCA,ACTmB,CjBsDG,AI9DV,ACIA,AUaZ,ACAoB,AGiCE,CflDI,ACIA,AUaL,AYwCA,CvBzDT,ACIA,AH4CU,CCcC,ActDvB,AE0CyB,CHjCzB,ACTwB,AJkDxB,CT1D8B,ACIA,AUaL,ACAA,Ad+BA,CYnCA,CXiDP,CAAU,AWjDH,AGLG,CbRpB,ACIA,AF0DR,Aa7C6B,AGiCd,EhBYgB,ADdT,CFcL,AmBZiB,CnBYC,A2BLd,C3BKJ,AGAjB,AWjDyB,AZmCS,AqB9CjB,AGAA,C1B4Db,AcjDqB,ASXK,AGAA,GXeT,CAAS,AIiCW,CjBFzC,AkBzCiB,AGLkB,AGAA,CTMX,AGDU,AGLE,AGAA,CVeX,ACTQ,AE0CW,CJjCvB,ACAa,EDAE,AKVE,CLUjB,AKVkB,AD2CzB,EJjCyB,ACAd,CDCrB,AQhB0B,AGAA,CVeW,ACTjB,AMNqB,AGAA,APgDO,CHjC3B,AOfK,AGAA,CVe9B,ACT2C,CAAnB,CAAxB,AGDkC,AGLe,AGAA,CNKD,AD2CS,CC3CvB,CGLJ,AGAA,ENKsB,AD2CA,CC3CnC,AGLsC,AGAA,APgDO,CIhDN,AGAA,APgDxD,CC3CuD,EGLE,AGAA,ENKE,AGL1C,AGAA,CNK2C,CGLC,AGAA,EHA5C,AGAA,CHAb,AGAA,INKmD,CAAc,CAAd,GAAkB,EAAxD,EAA4D,EAA5D,EAAgE,CAAhE,CAAb;ApBwDA,AI/DgC,ACIA,AISpC,ADhCR,AEwEQ,APUA,ANRJ,AkBrCS,ACCL,ACVA,AfwCA,AkBzCI,AC0SC,AE/SD,AX4DZ,ACJQ,AYrDA,ACHI,APgDJ,AQOI,CnB7EZ,CX0EI,CW1EJ,CCgCQ,ACwCA,APUA,ADdA,AWUA,AYrDA,EzByDI,Ae7CC,AKVD,AGLA,AGAA,ACuDA,CjBLD,APUA,AY7CG,Ab+BH,AWUA,CT3DiC,ACIA,AKiDhC,APUA,Aa5CE,ACVA,AfwCF,AWUA,AMRE,CnBYC,AI/D8B,ACIA,AUc7B,AH6ChB,AazDY,CzByDI,AoBvDA,AKFH,CrBNkC,ACIA,AIShC,AWLE,AGLA,AGAA,CjBUD,AOME,AOhBA,AGAA,C7BoDd,AkBrCgB,AIiCD,CTEX,APUA,ANRJ,AkBrCiB,CLmCF,APUA,Aa5CE,CNkCD,ASFE,CfnD+B,ACIA,AKiD7C,AO5Ce,AE0CA,AQOA,CvB1D+B,ACIA,AsBsD9B,C3BKZ,AUVW,APUA,Aa5CE,Ad8BjB,CQIgB,AO5CE,ALsD1B,ACJQ,AYrDA,CrBN+C,ACIA,AKiD/C,AU7CI,AKFY,CzByDI,ASlDpB,ANkDkB,AY7CV,Ab+BU,AkBzCE,AGLhB,AGAA,C7BoDR,AkBrC0B,AQfD,AVwDF,AaxDE,C7BoDzB,AkBrCY,AETc,AE0CA,CVtCD,AgBPrB,ChBQI,AWNA,AKFiB,CtByDE,AY7CG,AKVD,AGLrB,AGAA,APgDqB,CjBFD,AqB9CE,AGAA,C7BoD9B,AkBrCQ,AYwCA,ClB5CI,AkB4CoB,C3BKxB,AGAc,ADdS,AkBzCE,APmD7B,CVI4B,ANRhC,A0BpDkC,AGAA,CvB4D9B,Aa5Ca,AGgCE,CHhCU,Cb4CM,CgBZG,CHhCrB,Ad8BW,AuB3CxB,CtByDkC,Ca5CJ,AWuC1B,CzBTgC,AyBSE,CxBKD,Ca5CxB,ACVK,CRKd,AQL4B,AE0CS,CVrC5B,AZyCjB,AmBpCuC,AIXV,CAAS,AGLR,AGAA,CvB4DgB,Aa5C7B,ACVK,AMNiB,AGAA,APgDS,AQOxC,CzBTJ,AyBS6C,CXvCN,ACVF,CDUxB,AIXY,CjBuDY,Aa5CrC,AOhB0B,AGAA,APgDZ,ChBYiC,ActD7B,AGDsB,AOkDpC,CxBKJ,AiBvDyB,AGLgB,AGAA,ACuDS,CVjDR,AGDtC,AGLsB,AGAA,CPgD0B,CVrChD,AQLc,AMN0B,AGAA,CTM5C,AMLQ,AGAA,CjBUkB,CAAtB,CUqCqD,CVrC5B,CACrB,EUoC4C,AQOhD,CRP0D,CAA9D;AnBaI,AIhEI,ACIA,AIWC,ACuCT,APUA,AW1CJ,AjBkCI,AkBtC8B,ACE9B,ACVA,AfwCA,AgB3CH,AEEO,AENJ,ACCS,AXvBjB,AcuBiB,ACuDL,Cf9EZ,EAAA,CFyEQ,APUA,Aa5CA,ACVA,AfwCA,EFcI,ASjDK,AMGqB,AKT1B,AOkDA,CvB5DwC,ACIA,AIYlC,ACuCP,APUA,AY9C4B,AbgC5B,CQIC,APUA,Aa5CA,Ad8BA,AqB9CK,AGAA,C1B4DF,AI/DC,ACIA,AIUI,AZyCP,AkBtC4B,ACE5B,AMjBA,ACCK,AGAA,C1B4DF,AoBvDA,CXMA,AKOZ,AMba,AGLG,AGAA,ETMH,AKPA,CZmDT,APUA,ActDU,AKPA,CZmDC,APUA,ANRX,A0BpDgB,AGAA,ChBkDJ,AalDK,AGAA,ChBkDjB,ARJA,AoB/Ca,CzBqDC,AyBrDd,CtB6DI,AUVW,APUf,Aa5CA,AWuCe,CjBLC,AMlCA,Ad8BA,AoB/CA,AKwDA,CjBLhB,APU+B,ADd/B,AkBzCI,AENa,CzBqDjB,AuB/CoB,EjBuDc,Aa5ClC,ACVA,AKPoB,ACCR,AGAA,CVgBS,ACVA,AMNK,AGAA,CNKtB,AGLQ,AGAA,CvB4DyB,AiBvDZ,COkDrB,CbrCR,AEF6B,ACVzB,AMN8B,AGAA,CZkBtB,AGZkB,CGDG,AEN7B,AKwD2B,CxBKe,CmB7Db,ACCrB,AGAA,CTMsB,AKPA,EnB6DO,AW1CzC,AQnBI,AKwDI,CxBK2C,CAA/C,AW1CiC,AQnBC,INiBb,CAAS,CIXL,CAAS,EJWb,ACVK,CAAS,CDUC,CAAf,CAArB,CIXyB,EAAkB,CHCjB,AGDD,EHCmB,AGDE,CHCpB,AGAlB,CHAR;AjBuDI,AIhEK,ACIA,AIUO,ACwChB,APUA,AW3CJ,AjBmCI,AkBvCI,ACGJ,Ad8BA,AkBzCS,AC0SL,AChTA,ACAgC,AVwDpC,AYrDA,ACHoC,APgDpC,AQQI,IjBLJ,APUA,ANRA,AmBpCA,Ad8BA,CalCuC,CfgDnC,ASlDY,AkB6CZ,ClB7Ca,ACwCd,APUA,AY9CC,AbgCD,CElDM,ACIA,AKkDL,APUA,AW3CR,AEDQ,Ad8BA,AkBzCK,AGN2B,AEG9B,ACH8B,APgDhC,CnBaG,AIhEG,ACIA,AIUS,AOMd,AIXK,AGN2B,AVwDhC,AaxDgC,APgDhC,CnBaG,AsB7DE,ClBHE,ACIA,AeKA,AGN2B,AGAA,CLgT/B,AFhQJ,CnBaA,Ac3CR,AO8Ra,ARxPA,CbKG,AUVZ,AGKU,CT3DM,ACIA,AGsDT,AYjDS,AEND,AHgDJ,CfnDM,ACIA,ASkBjB,AMbiB,CVkBe,APqChC,ADdA,AmBiQa,ARxPA,CHHb,ARNc,AmBiQV,AChTc,ATwDlB,AYrDgB,CzB0DC,AgB5CjB,CAAgB,AK+RA,ARxPA,AMRZ,AQQY,CdAC,AYrDE,AEqDF,CbrCjB,AQnBsB,CRmBtB,AZ4BmB,AuB5CnB,CrBNY,ACIA,ARoDQ,AmBpCpB,AIXY,APkDQ,AMRA,CfnDM,ACIA,ARoDL,AmBpCA,AIXK,ChBTlB,ACIA,AeKI,CpBuDA,Ac1CZ,Cd0C0B,Ac1C1B,Cd0CY,AgB5Ca,AIXK,APkDL,AMRA,AQQrB,C9BHsB,AuB/ClB,ClByCM,CFcgB,Ac1C9B,AZ4B4B,AiBCA,AQQA,CzBT5B,CY5BM,CZ4ByB,AiBC/B,CGhDkB,AKwDd,CLxDwB,AHgDK,CnBaG,CAAC,CAAjC,Ac1CJ,AZ4BoC,CWShB,CbKoB,AgB5CnB,AHuCiB,CGvCR,AMjBI,CzBqDd,CiBlCP,AjBkCb,EGQ6C,CEdd,AoB/CM,ATwDrC,CCtCJ,AEDyB,Ad8BwB,AoB/C3B,CpB+ClB,AWS8C,CGvCR,AMjBE,ATwDO,CGvC1B,CHuCrB,CGvCyC,ChB4CD,AgB3CpC,AHsC+C,CbKG,CAAd,AsB7DM,GtB6DY,GsB7DR,CAAhC,EtB6D8C,AsB7DX,CtB6DY,CAA7D,EAAgE,CAAhE,EAAmE,AsB7DrD,CtB6Dd,CsB7D0D,CtB6DY,EsB7DxD,EtB6D0D,AsB7DT,EAAjD,CAAd,CtB6D4E,CAAC,EAA7E;AACA,AIjEyB,ACIA,AIUrB,ANmDR,ANRH,AkBvCQ,ACGA,ACXL,AfyCA,AgB5CR,AEEyC,AC2SzB,AChTJ,ACDI,AVyDJ,AazDI,APiDJ,AQQH,G9BNL,CMWI,AcvDA,AfyCA,COtC6B,AkB2C7B,C3BSI,Ae/CC,ACGA,AMjBD,CbWI,ANkDL,AY/CG,ACGA,Ad8BH,AqBjDyC,AGAA,CtBFf,ACIA,AF6DzB,ADdA,AkB1C6B,CpBwD1B,AIjEuB,ACIA,AUctB,ACGA,ACXJ,ACHZ,AEE0C,AGL1B,AGAA,C1B6DA,AiBvDH,AJkDG,AMRA,CfpDwB,ACIA,AeKI,AD2C3B,ChBaT,AmB7DU,CPcE,ACGA,AMjBD,CtB6DP,Ae/CS,ACGA,Ad8Bb,AiBCQ,CjBDG,AkB1C6B,ARuDjC,CQvDkC,APmD3B,CT5DwB,ACIA,AiBAlC,AHgDW,CfpDwB,ACIA,AiBAvB,CTwDC,CIlDjB,AfyCgB,CEnDwB,ACIA,AYMxB,CFQR,ACGA,AG+BA,CJlCc,ACGA,AEd9B,AIHY,CPcA,ACGI,AIZ4B,APmDd,CIlDtB,AGDkD,CHC7B,AGDe,AD2CZ,CH/BE,Cd8B1B,Cc9BI,AIZkD,ClBkCL,CASjD,AkB3CQ,AD2CqB,EF1C7B,CE0CgC,CF1CF,AE0CG,CNQhB,CAAkB,CAAlB,AMRb,CNQA,CMRkC,GF1CtC,EAAwC,SAAxC;AjBwDI,AIlEI,ACIA,AIWC,AC0CT,APSA,AW/CJ,ACD6B,ACGK,AErCtC,AEyBkE,AC4SlD,AEjTC,AVyDL,AYtDJ,ACHS,APiDD,CDrEhB,CAA6B,ERyErB,APSA,AW/CJ,ELJa,AMGgB,ACGK,AHwC1B,CT/DwC,ACIA,AIalC,AC0CP,APSA,AYhDuB,ACGK,CZvBL,ACIA,AKuDtB,APSA,AiBzDsD,AGLjD,AGAA,CtBNL,ACIA,AIaQ,AKIhB,ACDgC,ACGK,AOjBvB,AVyDH,AYtDF,ACHK,CZed,AD0CY,CJ9CA,AcXI,AGAA,CXcR,AKT0D,CKFrD,AN8CI,ChBab,AiBzDiE,AC4SrD,AI9SF,CTc6B,AIZ2B,AGLlD,AGAA,CViBwB,AOjBvB,AGAA,ChBqDjB,APNiD,AsB5CpC,CtB6Db,AWjDJ,AWZI,AN8CQ,CNQJ,AMRe,CTIH,AUhDuD,AKFvD,CXYA,AWZC,CPvBzB,AL6E4B,CK7E5B,CFqCyC,AOjBrB,AEGQ,ACHR,CZehB,AEEqD,AOjBvB,AEG1B,ACH0B,CViBtB,AKgSoB,AEjThB,AGAA,CDGe,CAAC,AN8ChB,CTIR,AW4P2B,CAAnB,AI9SR,CZsDI,AMR2B,CM9CH,AN8CI,KAAK,KAAL,CAAW,SAAX,GAAuB,CAAvB,GAA2B,KAAK,QAAjC,IAA6C,KAAK,QAAzE;Ad/CJ,AISY,AC2ChB,AbCJ,AkBzCqC,ACGmB,ACVpD,Af0CA,AkB5CQ,AEHJ,ACFyB,AV0DzB,AYtDA,ACJyB,APkDrB,AQOR,E9BFJ,EaDI,AO/CA,Af0CA,AyBQA,CjBHC,CLpDG,AISY,AMGiB,ACGmB,AHyChD,CJ/Ca,APsCd,AkB7C2C,CVkD1C,ARLA,AqBjDyB,AGAA,CjBWV,AQJf,AGDI,AGNsB,AV0DvB,Aa1DuB,CXcO,ACGmB,ACVnD,AJmDG,AYtDE,CHFD,ACFuB,AGAA,CrBEtB,AKoDF,AKxC+B,ACGmB,CXf/C,AKoDF,AbCb,CAAA,CyBrDiB,AHgDE,CTIX,AYpDU,AGEE,CpBFZ,AKoDS,ARLb,CG/CgB,AKoDF,AiBGF,CLvDK,ATwDb,AYtDe,AN8CX,AQOK,CLvDT,CZoDW,CLpDX,AKoDA,AYpDgB,CzBqDxB,AyBrDyB,AGEE,CfkDL,AbCtB,CaDuB,CO/CnB,AKLwB,CLKF,CP+CF,CAAhB,CAAJ,AbCJ,CoBhDI,CAA2B,CpBgD/B,AyBrDQ,EAA6B,AKuDjC,CLvDkC,AKuDJ,ELvD1B,EAAkC,CLKtC,AQHmB,CAAc,CEqDjC,E9BFJ,A8BE2C,EFrDD,CAAC,QAAN,AEqDiB,CFrDF,AEqDG,CFrDlB,GAAmB,EEqDpD,GFrDyD,CAAC,aAAN,CAAoB,CAApB,EAAuB,CAAxD,EAA2D,GAA3D,CAAf;AzB4DH,AIlEG,ACKH,AIQO,AC4CR,APWA,AWuVJ,AjBjWI,AkB1CI,ACGA,AIXK,AC4SD,AC/SA,ACHA,AV2DJ,AYtDA,ACLI,APmDH,AQOL,IjBHA,APWA,AWuVJ,Aa/VI,ClBjD6B,AMGU,ACIE,CZlBrC,AKWA,AMGiB,ACIA,AH2CjB,AYtDA,ChBGiB,AC+ClB,APWA,AYtDH,ACIA,AOlB4C,AGAA,ChByDxC,APWA,AiB5DK,AGRiB,AGAA,CjBetB,AK4YR,AjBjWS,AuBlDK,AGRN,AV6DG,Aa7DH,CZ2ZR,AD9VY,CT7DA,AgBQI,ChBRH,AkBKK,AGEJ,AEqDF,ClB7CA,AI8CJ,AYtDO,AEqDF,CdCG,ChBHZ,AqBnDO,AG6SM,AC/SI,EZoDjB,APWA,COXc,AbCA,AuBlDK,AEHC,CZoDpB,AUjDoB,AC4SH,ARvPA,CVOD,AkBgPE,CX3PD,AIkWrB,CV3ZQ,AMyDc,AYpDM,ClBLJ,AP0DpB,AwB0PqB,AI7SjB,CXoZM,AOvGF,AI7Sc,CfkDH,CD1Cf,AC0CJ,AW2PwB,AMxPxB,CvB5DI,AKeS,AWPD,AC4Sa,ARvPb,AcDW,CvB5DE,AMyBO,AP2ChC,AiB5D6B,APqDH,AYtDtB,CfkDmB,AUjDf,APqDI,AYtDe,CJ6SC,EjBpTxB,AS6D0B,CYtDC,EJ6SC,CZrS5B,AK4YM,AOvGuB,AC/Sb,CACR,CbSY,AI8CY,AcDF,ClB7C9B,AI8CiC,CAAjC,AcDJ,ClB7C2B,CACnB,AaVS,ATuDuB,AcDD,CNwPX,AC9SV,GD8SyB,AI7ShB,CJ6SnB,ARvPqC,AYtDT,EJ6SU,CAAC,CC9SnC,CD8SJ,AC9SmB,AGCA,CHDf,CD8SuC,AI7SR,CZsDH,AYtDb,CHDI,ATuDuB,CAAd,AYtDM,CEqD9C,CFrD2B,AEqD6B,CdCE,AYtDtD,CHDgC,CAAC,ITuD2B,AcDhE,CdCiE,CAA7D,AcD6D,EdCG,CAAhE,EAAmE,CSvDxC,ATuD3B,CSvD8C,CAAnB,ATuD2C,ESvDrB,CADjC,AKuDwD,CdCA,AcDC,CLrDjE,GTsDoE,CAAC,CStDhE,AKqDgD,CLrD/C,ATsDd,AcDgF,IAAnB,CAAwB,GLrD7E,CAAe,CAAf,GAAmB,GKqDkC,CAAjE,CLrDoC,CAAC,AKgBf,CAuCtB,GLvD+B,CAAW,CAAX,GAAa,CAAhC,GAAoC,EAF5B,EAGR,EAHQ,EAIR,CAJQ,CAAZ;AlBJP,AKeQ,ANqDT,AWuVA,AjBjWA,AkBzCA,ACIA,Ad8BA,AkB5CgC,AC6SpB,AC1SJ,ACPJ,AV0DA,AYtDA,ACJA,AC2DP,IxBMG,AYnDA,ACIA,EPNS,AcZL,AV0DA,AYtDA,ACJA,CjBYM,ANqDP,CAAC,AYnDA,AbkCA,AkB5C4B,AEGxB,CbKI,AZ2CP,AkBzCA,AKV4B,APsD1B,CAAC,CJ9CA,AOMD,AId4B,AEGxB,CNWH,AMXI,ACPF,AGAA,CxBgDD,AqBhDE,AGAA,Cb0DP,COtDmC,CAAC,AC6StB,AI7SJ,CFJV,AEIW,ACJX,CHAY,AGAA,CXchB,AMmSqB,ClBhPrB,AYnDgB,CUVZ,CTcJ,AK+RwB,AC1ShB,ACPJ,AEIgB,ACJhB,CvBiEe,ANVnB,AmBrCmB,AMXI,CPOvB,AKVmC,CLUd,AbkCjB,AkB5C6C,CvBmD3B,AKPA,AkB5Ca,CJcnC,AK+R4B,AC1SpB,CNWgB,AK+RK,AC1SD,AGHxB,CVUqB,AKV4B,EjB6DrD,AiB7DQ,CJcoB,Ad8BxB,AoBzC4B,KpByCC,CAAjC,EAAoC,EalCf,CAAS,AMmSN,CAAqB,CL/RrB,AK+RsB,AC1SlB,CNWK,AMXI,CzBgDM,CAAC,CkBzCvB,AMmS6B,CL/R1B,CDJc,CAAjB,ACIkB,AMXI,CzBgDM,AmBrCzB,AK+R4B,AC1SR,CPOH,ACIzC,AK+R8C,AC1SH,CPQvC,AMkSoB,AC1SI,CD0ShB,CC1SoC,CAApB,EAAuB,CACvC,EzB+CgC,CAAgB,IAAhB,CAAqB,IAArB,CAAD,CAA3C;AGSA,AK7DA,AISgB,AC0ChB,APYA,AWuVA,AjBjWH,AkBzCQ,ACKL,ACdH,Af2CO,AkB7CqD,AC8S7C,AC1SC,ACPZ,AV0DG,AYtDH,ACJA,APiDG,GtBGR,CaCI,APYA,EMtDgB,AMGX,AbkCD,AWUA,CJ/Ca,AC0Cd,APYA,AYnDG,CVZF,AKmDA,APYA,Aa9CE,AIhBmD,CpB4DpD,ASpDc,AMGX,AbkCD,AWUA,CC8VD,AZxWE,AoBzCK,ATmDL,AMTA,CG1CM,CnB0Dd,Aa9CU,AIhBmD,AC8SjD,CrBlPH,AcyVA,AC1YG,AOPI,CtBwDN,AejDG,AKXkD,CjB8DpD,Aa9CE,CFqYD,AZxWR,AoBzCe,AH0CL,CnBcD,AUVb,ARLe,AoBzCK,CtBwDpB,AK7Dc,CF+DC,Aa9CE,AHuCb,CbKY,AGEA,CHFC,AK7DA,ASsZD,AKvWR,CLuWS,AC1YT,AbkCY,AWUA,CRxDpB,AUYsB,CfiDF,AejDZ,AMmSgB,ClBhPb,AmB1DK,AH0CO,ChBgBD,ADjBP,AoBzCc,CPOH,AbkCD,AoBzCT,CpByCD,AmBiQa,CrBlPH,AcyVzB,AC1YI,AF4CA,CSnD6B,AH0CL,ChBgBD,ADjBE,AoBzCjB,CpByCkB,Cc7BjB,AG8BkB,CH9BN,AK8RS,ClBhPZ,ADjBlB,AmBiQ+B,ClBhPH,AgBhB5B,ChBgBkB,ADjBa,CmBiQG,AFhQF,CEgQG,ClBhPL,CAAZ,Aa9CU,ChB4CZ,AgB5Ca,Ad6BO,CFeD,CGEH,AkBgPD,ClBhPxB,AkBgPkC,CnBjQV,CAAU,CAAV,CFenC,AGEyC,AkBgPN,CL9RV,AK8RyB,CrBlPH,AgB5CL,Ad6BO,AmBiQd,CrBlPa,AgB5CvB,Ad6ByB,AmBiQhB,CAAN,CrBlP5B,CgB5C8C,Ad6B1C,CFegD,CgB5CvC,AK8R4C,EL9RP,GAArC,AK8RiD,ClBhP9D,AkBgP4B,CL9R2B,AK8R3C,EL9RC,EAA8C,CAA9C,CAAb;AhB6CI,AIlEJ,AKaQ,AC2CR,APYA,AWuVA,AC3Y8B,ACM9B,Ad6BI,AkB9CI,AC+SC,AC3S2B,AToDhC,AMTI,AQUZ,IjBNI,APYA,Aa9CA,CPV2B,CK+Y3B,AC3Y8B,AbmC1B,AWUA,CJ/CI,AC0CL,APYA,AYpD4B,AKbe,CVqD1C,APYA,Aa9CA,AInBqB,ChBHpB,AU2ZF,AC3Y8B,ACM5B,Ad6BE,AkBhDH,AP0DG,AcCJ,C3BIK,AcyVJ,AZxWI,AoB1C4B,AToD5B,CHLR,AY/CqC,CZ+C7B,CNxDC,AMwDT,AY/CuC,AH2C1B,CfpDH,AU2ZV,CJnWW,AKxC4B,CfkDzB,AUVd,AKxCwC,AbmCpC,AoB1CsC,ClBT7B,ADoEb,AWoVU,AZrWK,AoB1C4B,ClBT3C,AMwDc,AIqWd,ADhWI,AMTI,CnBcS,AUVjB,AMlCA,AHuCiB,AMTE,CfpDH,ADoEA,Aa9CA,AWwCpB,CvB9DqB,AMwDA,CAAjB,ARLoB,EFeE,AIlEF,AMwDA,AKxCa,ACMjC,CZtBA,AWgBiD,ACM5B,AMbkB,AToDhB,CVOD,ADjBP,AoB1CqC,AToD5B,CT7DD,AFmDE,AoB1Cc,AToDhB,CT7DC,AMwDF,ARLP,AWUX,AMTI,ChBgBiB,Aa9CA,CZtBzB,AkBSwD,AToD5B,CXVC,AiBCE,CfpDH,AMwDF,ARLI,AiBCE,CTIL,EAA3B,ARLI,AWU6B,EbKhB,AEfkB,AiBCE,CnBcD,AGEd,ADjBlB,CFea,CAAb,CGEiC,Ca9ChB,AG8BW,CH9BF,AHuCF,AMTe,CNSD,CAAd,EVO5B,Ca9CqB,AHuCyB,EGvCT,CAAhB,CG8BW,CH9BQ,CACpC,AHsCgD,CAAC,AMTE,CNST,AMTf,GNSwB,CMTK,GNSxD,EAAyD,AMTI,KNSC,GMT1D,KNSqD,CAAc,CAAd,GAAkB,MAAM,CAAC,CAAzB,GAA6B,EAAtF;AbMA,AIlEA,ACIJ,AISS,AC2CT,APcA,ANZJ,AkB3CQ,ACOC,ACdb,Af2CY,AkB7CA,AEEQ,ACLZ,AV0DC,AYvDD,ACHA,APiDQ,AQUf,E9BJG,A8BQJ,EjBVQ,APcA,CYxDyC,AURzC,CzB4DI,ASrDK,AMCY,ACQhB,Ad6BD,AkB7CA,CXOM,AC2CP,APcA,AYxDH,ACQM,AShBN,CfkDI,APcA,AoBnEA,AGAA,C1B+DG,AK9DF,AISO,AMjCqB,AC0CzB,ACdhB,Af2Ce,AoB5C4C,CtB2D3C,AIlEE,AWkBV,AbiCQ,AuB7CR,CLAS,AEGG,CbIJ,AC2CR,AUlDU,CfFD,ARsDb,AmBpCgB,CXlBF,ARsDd,AmBpCiB,CShBT,AN8CW,CfpDC,ADsEhB,ADnBI,AuB7CC,CpBFQ,AFkEA,ADnBE,CG/Cf,AkBDc,AGAA,C1B+DV,AIlEe,AeoDX,CdhDQ,CAAC,AkBDA,AGAA,C1B+DG,AGIF,AahDV,Ad6BY,AkB7ChB,ChBNmB,AP0D3B,AmBpC0B,AIhBD,AGHrB,AGAA,CrBCoB,ARsDxB,AmBpCY,ACdhB,CZJQ,CH+Ce,CG/CQ,AWkBG,Ad6BD,AkB7CrB,CfFoB,AH+CT,AkB7CW,CJgBtB,CXlBJ,AFkEa,CHJT,AEfyB,CG/CD,AFkE5B,AiBhE8B,AKA9B,EtBgE8B,ANZlC,AKPQ,AuB7CkB,EvB6CY,CLOtC,C4BpDI,CtBgEmC,AsBhET,ErBNP,AFmDoB,CEnDN,EqBMjC,CvB6CkC,AkB7CR,AKAA,CvB6CkB,AkB7CT,ChBNG,ADsER,ADnBI,AuB7ClC,CrBNuC,ADsEK,CAA5C,ANZJ,A4BpDkC,CvB6CkB,AkB7CtB,CjBgEqB,ADnBE,CkB7CR,CAAf,ClB6CtB,CkB7CwC,ChBNX,ADsEmB,AiB/D5C,ChBPwC,CAAf,CqBMjC,ErBNoD,GDsEL,CCtEd,ADsE4B,CAA7D,ECtE2D,CAAC,GAAC,EAA1C,EAA8C,GAA9C,CAAf;AJmEA,AIlEA,ACIA,AIQa,AC4CjB,APeA,AWqVA,AjBlWA,AmBrC8B,AC9CtC,Af4EY,AkB7CK,AC8SD,AC5SK,AH4CR,AQcb,CV3FA,CAA8B,EPiFtB,APeA,EHLI,AIlEA,AKYa,AOSa,Ad8B1B,COvCc,AC4Cf,APeA,AalD4B,CNmC3B,APeA,AiBjEK,CpB4DF,AStDa,AOSa,Ad8B1B,AkB7CG,CpB4DF,AK9DE,ASwZJ,AZzWE,AmBiQA,AC5SK,CFFD,AEEE,ClBRJ,CAAC,AkBQK,CZgDhB,AMnCsC,CbkDtC,AWqVW,AEvY4B,AK+R3B,ChBhTI,AH+CZ,AkB7Ca,AC8SJ,CXhSmB,AR+BjB,AkB7CG,CVoDlB,AIkWc,CTxZK,AiBIG,CAAC,CtB0DnB,AsB1DkB,CLjC9B,Af4E4B,AoB3CJ,ClBRZ,ACImB,ASwZL,AEvYe,AC9CzC,AKiCkC,CtB0DH,AIlED,AU4ZH,AEvY6B,CIfpC,ClB6CG,AkB7CY,ClB6CF,AkB7Cb,ChBNR,AFmDW,CFea,AIlED,CgBMI,ClB6CF,AoB3Cb,CD4SR,AC5S2B,ClBRJ,AU4ZjB,AOxGgB,AC5SlB,CtB0DW,Ac0VM,AZzWzB,CFe8B,AoB5DE,ClB6CF,AkB7CG,ClB6CjC,AmBiQ8B,ErBlPX,Ac0VT,Cd1VyB,Ac0VJ,Cd1VZ,AK9DJ,CAAc,AgBgTK,CAAC,ErBlPK,Ac0V5C,CV5Z2B,CAAS,ACIE,CAAC,AeER,CAAmB,CC8S1C,EjBpTmB,AiBoTqB,CD9SI,CpB4D7B,AIlEoB,AgBMZ,ChBNJ,CCIM,AeEsB,CpB4DC,AIlEV,ACIE,AeExC,AC8S4C,ChBhTnB,AgBgToB,CjBpT1B,CAAvB,CCIgD,IAAnB,AgBgTe,CrBlP5C,EK9DuD,AgBgTI,ChBhTH,AgBgTpD,EAA0D,ChBhTL,EAA1C,EAA8C,CgBgTzD,EhBhTW,AgBgTuD,ChBhTtE,agBgTkF,YAAZ,GAAwB,GAA1F;ArBjPJ,AK9DA,AIOI,AN4DX,ANbG,AkBzCA,ACGI,Ad+BA,AkB9CsD,AC+SrD,AC7SiC,ACLtC,AV2DA,AYxDA,ACHA,APkDC,GhBTL,EMlC+B,AOUa,ASdxC,CzB6DI,AK9DA,AIKA,AOUiB,AdgCjB,CO/CiB,AOerB,ASdA,ChBDA,AZsDI,AkBzCE,AKZoD,CpB6DnD,AHRF,AKPE,AkB9CoD,AGHtD,AV2DA,Aa3DA,C1BgEG,AEfA,AoB5C8B,AGFtC,CVYS,AKZoD,AEEtB,CjBH7B,CAAC,AiBG8B,ACLhC,AV2DA,Aa3DA,C7BwDC,AkBzCE,AQfF,AV2DA,Aa3DA,CNGuD,AKA7D,CvB8CA,AkB9C8D,AEEtB,AGFvC,CHEwC,ACLhC,AV2DA,Aa3DA,CXeG,AQfhB,AV2DA,Aa3DA,C1BgEI,CHRA,A0BxDY,AV2DA,Aa3DA,CHAC,AV2DA,Aa3DA,C1BgEG,CAAhB,AK9DA,CAAkB,ARsDF,AuBrDyC,AGHzC,AV2DA,Aa3DA,CNGuD,AEElC,ACLzC,AGAA,CNG6D,AEEP,AGFtD,CHEyC,ACLlB,AGAA,CrBEnB,AkBFoB,AEGR,ACHQ,CrBEG,ARsDF,AuBrDsD,APwDtD,CStDiC,ACL1D,AGAA,CXeY,AKZiD,CLYtC,AQfK,AEG5B,ACH4B,CrBEG,AoBCX,CLAgE,IKApF,C5BqDoB,AkBzCU,AKZyD,AKAnE,CVYW,CUZ/B,C5BqDsC,AgBGlB,ChBHhB,AgBGmC,AYxDf,GpBDG,CAAS,ARsDO,CkBzCpB,CAAiB,AF4CxC,CE5CY,ClByCmC,AgBGA,CRzDpB,ARsDqB,AkBzCL,AF4CK,CYxDhD,CpBD2C,AQyD3C,CRzD2B,ARsDgB,CgBGS,CRzDN,EAAnB,AUauB,CVb9C,ARsDoD,AkBzCL,KlByCU,GkBzClB,CAAiB,CAAjB,GAAqB,EAApD,ClByC+B,CkBzCyB,ElByCO,AkBzC/D,EAA4D,CAA5D,CAAZ,ClByCgF,UAAhF,EAA4F;AGSxF,AInEA,ACKA,AISJ,AC4CA,AIkWA,AjBjWI,AkBzCJ,ACIA,Ad8BC,AkB/CO,ACgTP,AC9SW,ACJR,AV2DA,Aa3DA,IjBWJ,AC4CA,AKxCA,ACIA,EhB6CI,AInEA,ACKA,AISF,CAAC,AC4CA,AKxCA,AKdyC,CVsDxC,AKxCA,ACIA,ChB6CG,AgB7CF,AIhBG,AED2C,CtB8D3C,AcyVJ,AQvZwB,ACFlB,AV2DF,Aa3DE,CtBHF,AP2DC,CO3DA,AM0DT,AYlDW,GRoZF,AGpZF,CZHO,AiBAc,ACFZ,AV2DF,Aa3DE,CrBED,AISf,AZ6CI,AyBtDI,CPaR,CfiDI,AcyVS,AC1YE,ACIf,AOnBmB,AV2DF,Aa3DE,CjBWH,AK8YZ,AEtYY,CXjBZ,AIUA,CLfA,ACKgB,CDLA,AWkBpB,AQfuB,AGAA,CZyZL,AC1YE,ACIpB,AHwCsB,CJ/Cd,AOOa,EZtBjB,CAAqB,ACKrB,AUaoB,CD0YD,AEtYE,GFsYC,EV5ZtB,EU4ZwB,CD9VX,CJ/Cb,AI+CgC,CJ/CvB,AI+CI,CAAb,CC8V4B,AC1YZ,AQfD,AGAA,CZyZc,AC1YJ,ACIR,AOnBY,AGAA,CVmBH,GPP1B,AMGgB,CQfkB,AGAA,CjBYhB,AMGa,AQfI,AGAA,CjBYnC,AK6YsB,AC1YN,ACIC,EPPI,AMGa,ACIA,CFsYG,ACzYrC,ACGiB,CPPjB,AK6YJ,CL9YgB,AOQyB,CFsYG,AErYxC,CPPA,Acb6B,AGAA,CHAe,AGAA,CHAf,AGAA,EjBazB,Ccb4C,AGAA,IHAnB,AGAA,GHA0B,AGAA,CHAC,AGAA,GHAC,AGAA,CjBazD,CAAS,AcbM,AGAA,EHA8C,AGAA,GjBa7D,Acbe,AGAA,CHAf,AGAA,CjBagB,CAAhB,EAAmB,EAAnB,CAFY,CAAhB;ATsDI,AK9DH,AKqDD,APcJ,AWoVQ,AjBjWH,AkBzCI,ACIA,AIjBI,AEID,ACNJ,AV2DA,AYxDJ,ACHI,APiDJ,AQaR,ExBOI,EsBlEI,AE2DF,E3BEM,AejDC,ACIA,AOnBD,AV2DA,Aa3DA,CXeE,ACIA,CNoCA,AUrDG,CpB8DF,AGKX,AYtDY,ACIA,AIjBE,APyDH,AYxDH,CzB6DI,AGKZ,AUVY,AYxDH,CLDO,AD+CL,CLwWG,AC1YC,AOTG,ACNJ,AGAA,C1BgEN,AUTO,AIkWA,AC1YC,ACIA,AOnBD,AGAA,C1BgEC,AgB7CC,AMbG,CFJA,CVqDF,AIkWC,AMvZE,AD+CjB,CG3CmB,CKwDP,C3BEK,AGKrB,AUVQ,CHJY,APcpB,AsBlEI,CXsZoB,AC1YZ,AUZQ,AE2DmC,CZ/C9B,ACIb,AMbgB,ATqDJ,CE5CZ,ACIc,AOnBlB,AGAA,ChBuDgB,AIkWC,AEtYb,AIjBI,AGFU,AGAA,ChBuDD,AIkWP,AMvZY,AKC1B,CVYyB,AKbjB,AEIkB,AGHL,CzB6DT,AUTE,AMpCY,AMbP,CtB0DO,AGK9B,AYtDQ,AQfA,AGAA,C1BgEQ,AcyVe,AEtYvB,AOnBuB,AGAA,ChBuDD,AIkWtB,AQnZ0B,AGHL,CtBkE7B,AmB/DmC,ATqD3B,CbK0B,CuBhEC,AGAA,EhBuDA,AYjDE,CAAH,EtB0DM,CAAC,CAAjC,AsB1DgC,CnB+D/B,AmB/DG,CtB0DgC,AUTxC,APcJ,EAAqB,EoBrEU,AEGN,ACHM,C1BgEkB,AuBhET,AEGH,ACHG,GDGf,EFHM,AEGW,ACHX,EHAgB,AEGtB,ACHsB,C1BgEH,AuBhEb,AGAA,C1BgE2B,AyB7DZ,CzB6DF,AuBhEM,AGAA,EHAnB,AGAA,C1BgE+B,AuBhEtD,AGAA,EDGiB,EAA6B,EzB6Dc,CAAC,CAA7D,AyB7DiB,CAArB,CzB6DoE,CAAhE,EAAmE,CAAnE,EAAsE,IAAE,IAAI,CAAC,EAA7E;AACA,AIpEA,AKiBJ,ANwDA,AYvD6B,ACIC,Ad+B9B,AkBhD6B,ACiT7B,AC5SQ,ACNJ,AV2DA,Aa3DA,APiDP,AQaD,GR/BA,CVlBI,ETmDI,AIpEA,AWkByB,ACIC,AOlB1B,AV2DA,Aa3DA,CXc0B,ACIC,CIjBF,AEKrB,CtB0DD,ASnDH,AMC4B,ACIC,Ad+B5B,AkBhDyB,AP0DvB,CbKC,ASnDH,AYqSD,ARvPI,CT/DA,ADyED,AiBpEyB,AEKrB,ClBVF,AkBUG,CnB+DZ,AYvDoC,CfkDhC,AelDiC,CCIE,AIjBH,ACiT3B,CLhS+B,AIjBH,AGDvB,AGAA,CxBiDd,AqBjDe,AGAA,CxBiDD,CmBiQD,CZrSb,CAAgB,APoChB,AqBjDI,AV2DA,Aa3DA,CXc4B,AORxB,ACNY,AGAA,CXc0B,AMoS/B,AC5SQ,CPQS,ACIC,AIjBD,AP0DT,CJ9CvB,AOKiD,AIjBH,CXYzB,AWZW,CLakB,AOR1C,ClBVJ,AiBsTe,AC5SS,ACNxB,AGAA,CtBJsB,AgBKwB,ACiT9B,ARvPQ,EJ9C5B,AWZgC,CEKA,ClBV5B,AKiBwB,CLjBG,AgBKwB,AP0DhC,CAAW,CQuPrB,GDjT6C,ACiT5B,ARvPP,CT/DnB,AKiBJ,AYqSA,ARvPuC,CAAhB,CJ9Cc,AYqSJ,EZrSjC,CaP4B,ATqDgB,CSrDP,MAAM,CAAC,CAAD,ATqDpB,CSrDK,EAAoB,ATqDQ,CSrD5B,EAAwB,CAAC,GAAG,CAAL,CTqD/C,ESrDyD,CACjD;AtB0DR,AIpEH,ACMD,AKoDA,APeH,AWmVO,AjBjWJ,AkB1CI,ACIA,AdiCJ,AkBlDQ,ACkTJ,AC5SS,ACNZ,AV2DG,AYzDJ,ACFC,AC8DL,GxBKA,CDjBI,AuBhDA,CrBjCiC,ACiCjC,AUUsC,ACIG,ChBgDrC,AIlEJ,AYkBqB,AH2CjB,CRzDJ,AUYI,ACEJ,AdkCG,AkBpDyC,CN0ZxC,AZtWA,AkBpDsB,ACoTtB,CrBlPG,AUVF,AbCA,AmBnF4B,AI0B7B,AP6DG,AYzDH,CzB8DI,AK9DR,AWkBA,AMda,ATqDL,AYzDH,CHIS,EZgDL,AIkWD,AOtGA,AC5SQ,CZgDN,AIkWD,AZtWT,AmBgQS,ChBhTL,AHgDO,CFcP,AK9DC,AHgDO,AoB5CO,CZgDN,AYhDO,CZgDpB,AiBQY,CdHR,CHLY,AepDhB,CfoDiB,ARJA,AuBhDD,CZyDI,ChBJpB,AgBII,CHLgB,CW4PhB,AC5SY,AGJhB,CpBAA,ARqDsB,AwB2PD,AC5SQ,AGJR,CHIL,CjBJA,CKoDS,ARJzB,CoB5CiC,AGJR,CJgTrB,AC5SQ,CjBJZ,ASsZI,AOtGuB,ChBhTP,ASsZQ,CAAC,EJlW7B,CIkWgC,CTtZhC,AKoDkC,AIkW9B,AOtGA,ChBhTgB,AKoDe,CIkWA,CTtZnC,AKoDA,AIkWoC,AOtGA,EhBhThB,AKoDmB,CIkWA,Aa5VY,Cb4V/C,COtGA,AIhTiB,CXsZqB,AjBjWC,A4BrDV,C5BqDW,E4BrDvB,EAAiB,CXsZlC,AjBjW6C,C4BrD5B,CXsZ6B,CTtZ9B,AoBAsB,CpBAtB,KoBAC,C5BqDuB,CAAgB,A4BrDV,EXsZ9C,EjBjWwC,A4BrDvB,C5BqD4C,A4BrDjE,CpBAoB,CAAA,ERqDwB,CAAD,CAA3C,SQrDoB,CAAA,EAAA,EAAI,MAAJ,CAAA,EAAe,MAAf,CAAA,EAA0B,UAA1B,CAApB;AL+DC,ASlDD,ACwCI,AbCP,AkB1CQ,AbqCL,AmBgQI,AC7SgC,ATsDhC,AMZP,AQeD,G9BbA,CKCI,EQII,AKzCC,AF8CD,CE9CE,AbqCH,COpCG,APoCF,AmBgQA,CX5PG,AKzCC,AF8CD,CHLC,AYjD4B,ATsD5B,CStD6B,AKyDhC,CzBZL,CarCY,AMqSJ,AC7S+B,CbS3B,AMDC,AMqSJ,CnBhQE,CoB7C+B,CbS3B,AaT4B,EZiDvC,ARJW,AWSX,CXTY,COpCG,CMDX,CAAc,CAAlB,CbqCO,AmBgQP,AC7SmC,CpB6CjB,AmBgQD,AC7S+B,CAAb,GAAiB,CpB6C7B,AmBgQvB,CAAuB,GnBhQL,CAAU,AmBgQ5B,AMvP+C,CzBT7B,EOpCP,AYoSmB,CZpSL,APoCO,AmBgQD,GZpSpB,APoCJ,EOpCuB,AYoSA,CAA9B,CnBhQuC,COpC5B,CAAf,YPoCA;AG/CA,AIYA,ACwCI,APcZ,AWoVY,AC5YqB,ACOzB,Ad+BA,AkBlDI,ACkTH,AC9SW,ACJZ,AV2DI,AY1DJ,ACDA,AC8DJ,IlBhDI,APoCA,AuBjDA,CFDA,AGAA,ChBsDI,AK1CqB,AKZrB,AP2DA,CE/CsB,AbsCvB,AqBlDH,AGAA,CrBEM,AWiBA,Ad+BF,CQIG,APcf,AYxDoC,AOTiC,ATwDtD,AY1DH,ChBaE,ACwCE,AatDR,AV2DQ,AY1DH,ACDL,CjBcO,AOKE,AInBD,AEKI,AKyDP,Cb0VG,AMxZC,CNwZA,AC5YuB,AF+C5B,CE/C6B,ACOrB,AHwCA,CU3DR,AGAA,CrBEU,AKoDV,APcZ,AWoVoB,ASxZP,AGAA,ChBsDU,AIkWX,AZtWJ,CQII,AMnCY,CXjBC,ASsZF,AD7VE,CHLC,ARJF,AuBjDhB,ChBaA,ACwCmB,AerDH,ChBaE,ACwCd,AK1CwB,AKZxB,CfEiB,AUUqB,AKZtB,CLYQ,CUX5B,ChBaA,APoCsB,AqBlDtB,AECqB,ACDrB,CjBcuB,AMFuB,AKZ1C,AP2DQ,CO3Da,AGAT,AV2DU,Aa3DV,CxBkDS,AWSb,CY1Da,ChBaE,AOKf,CAAW,AInBnB,AGAJ,AV2D8B,Aa3D9B,CHAoB,AGAA,CNAW,CO0DoB,GzBR7B,AkBlDlB,AGAJ,AV2DoC,Aa3DpC,CrBEiB,AWiBa,AOnBV,AV2DiB,Aa3DjB,CrBES,AWiBE,AHwC3B,CXTiC,AqBlDrC,AGAA,CrBEiB,AQyDuB,CU3DpB,AGAA,CrBEa,AIYV,CAAS,CJZf,AoBDI,ChBaE,APoCvB,AWS6C,AY1DZ,CpBCI,AWiBd,CPLa,AOKI,CPLjB,AOKX,CPLZ,COK2C,ASlBL,CAAC,CpBCtB,CQyDuB,CRzDK,AkBFzB,AV2DkC,Aa3DlC,CHAA,AV2DoB,Aa3DpB,EVmB8B,CAAC,AHwCO,CY1DzB,CAAe,CAA3B,EpBCJ,AoBDkC,CpBCnD,AQyDgE,CAAC,CGxCtB,AHwCvC,AY1DiB,CTkBuC,CAAjB,AOnBvB,AV2DgD,AY1DZ,ACDpC,CHAA,AV2DhB,Aa3DgB,EVmB4C,AHwCO,CAAnE,CGxCQ,CHwC8D,CGxCN,EAAxD,CHwCgE,AY1DvD,CTkBmD,CAA5D,ASlBwD,CTkBpE,COnBoB,AV2D4D,Aa3D5D,CHAA,AV2D6D,Aa3D7D,CDCC,CFDD,AV2DhB,Aa3DgB,CDCsD,CFDlD,AGAA,CDCH,CAArB,IFDoB,AGAA,CHAA,AGAA,EHAe,AGAA,MHAf,AGAA,CHAA,AGAA,EHA0B,AGAA,UHA1B,AGAA,CHApB,AGAA;A1BiEA,AIpEA,ACMA,AKoDI,AP1FZ,AW4bgB,AjBjWZ,AkB5CQ,ACQJ,Ad+BA,AmBgQH,AC9SgB,ATuDT,AMRR,AQWA,CxBlGJ,CN2FI,AsBJA,ChBvFJ,CauDQ,Ad+BA,CazCsC,AMsQ1C,CXzNQ,AK7CgB,AFkDhB,CElDJ,ACUG,Ad+BA,CFcC,AIpEE,ACMA,AWiBF,Ad+BA,CQIG,AGKA,CHLC,AIkWA,AQpZK,ATuDL,AMRZ,CG/CkB,AH+ClB,CnBaY,AIpEE,AuBkEJ,C9BPV,AyBnDoB,CzBmDpB,AgBIQ,CbKO,AIpEE,AU4ZD,CdxVZ,AK9Dc,AKoDV,AIkWS,AQpZM,CZkDJ,ARJf,AoB9CoB,CZkDhB,AMnCJ,CXjBiB,AWiBF,CNmCG,ARJF,AiBCpB,CTGuB,ASHvB,CTGsB,CLpDG,ARqDzB,AmBpCI,CnBoCJ,AmBpCwB,CNmCG,AYlDP,CAAa,CAAb,AH+CpB,CTGsB,AMnCM,Ad+BxB,ELKJ,AyBnDqC,AH+CrC,CTGiC,AYlDb,CZkDZ,CbCR,CiBiWY,AQpZ6B,CRoZL,CAAC,AQpZrB,EKqDuC,CtBvDlC,ASsZiB,CTtZL,ASsZrB,AKrWL,CHhCiB,CFqYiB,AErYR,CXjBZ,AciDrB,EdjDsC,ARqDtC,AsBJsC,CLqWO,AErYrB,CXjBH,ASsZyB,CErYP,CXjBG,AWiBlB,CFqYiB,CAAS,AErYR,AGgC1C,CLqWmD,AEpY3C,CG+B6C,EdjDhC,ASsZ+B,CAAX,CTtZS,CSsZK,CAAd,CAA7B,EAA+C,ITtZtC,CAAjB,CSsZQ,EAAuD,UAAvD;AdxVR,AIpEc,ACOd,AIWA,ACyCI,AIkWC,AjBjWL,AkB3CA,ACOK,Ad+BL,AkBnDI,AEIqC,ACHzC,AV2DI,Aa3DJ,APmDA,AQWJ,IlBjDI,AMDA,AbsCA,AiBCA,EfxDc,AM2DV,AMnCC,AIpBD,AP4DA,CE/CD,ACOG,Ad+BH,AiBCA,CnBYW,AK7DR,AUUF,AbsCA,AqBlDE,AGAA,APmDF,CVtCA,ACyCG,AMnCC,AHwCD,CJ9CF,ACyCG,AYnDiC,ATwDjC,CThEW,AkBQuB,CtB4DxB,AgB5CP,AIpBD,ADoDV,CfxDqB,AYwBT,AIpBD,AEIiC,EtB4DvB,AmBb4B,CnBajD,AUTI,AYnD2C,ACHjC,AV2DV,Aa3DU,APqDd,CCtDI,AEI4C,CPShD,AKbgB,CLaD,AQZE,AGAA,CjBajB,APqCA,CGhDmB,AIWH,AOMR,CAAa,AIpBjB,AO+DY,CZlDhB,ACOQ,Ad+BW,AqBlDE,AGAA,CrBEC,AUUF,CNCpB,AaV4C,CbUvB,AOMI,AMhBgC,CAAb,CjBDlB,AUUF,ACOpB,EMhByD,CpB+C7D,COrCA,AaV4C,GAAsB,ICHjD,AGAA,CHAY,AGAA,CXYT,CAAS,AQZZ,AGAA,ErBEK,AkBFW,AGAA,CrBEC,AsBsDiB,CZ5C/B,AQZH,AGAA,ErBEK,AUUa,AQZE,AGAA,CXYjB,CVVmB,CUUD,CAClC,CVXkB,CkBFL,AGAA,CrBE2B,CkBFC,AGAA,OHA5B,AGAA,CHAjB,AGAA,CrBEsB,EAAkC,SAAlC,EAA6C,EAA7C,CAAtB;ADPa,AM6DT,AIiWH,AjBjWD,AkB1CI,ACKyB,AdgC7B,AkBnDC,ACpBD,ACuBY,ACFZ,AV2DC,AY3DJ,ACAG,AC8DJ,IzBZI,AmBvEA,CjBeA,AgB5BiC,CVyF7B,AMrCyB,AIjB7B,CJiB8B,AdgC3B,CAAC,AqBlDE,AGAA,ChBuDC,AbAF,AmBrC2B,AMlB6B,CZuDrD,AW5EF,CAAC,ACwBK,EzBoDH,AmBrC2B,CnBqC1B,AmBrC2B,CbiD9B,COZH,ARLJ,AmBvEA,AEqBc,AGAA,ChBuDC,AbAF,AKLA,AyBYF,C9BPX,CwB5Ee,AEqBE,AGAA,C7BuDD,CAAC,CaAb,AMrC4B,AdgCd,AmBvElB,CLuC8C,AOlBzB,AGAA,C7BuDD,AmBrCY,GAAkB,CdgClD,CLKyB,CKLC,CAA1B,EAA6B,CAA7B,KLKoB,A0BvDH,AGAA,C7BuDmB,A0BvDP,AGAA,CCuDsB,EJvDlC,AGAA,EHAiB,AGAA,C7BuDlC,C0BvDiB,AGAA,C7BuD2B,CAAC,A0BvDP,AGAA,E7BuDtC,EAAiD,E0BvDhC,AGAA,EHA6B,AGAA,OHA7B,AGAA,CHAjB,AGAA;A1B+DA,AInEA,ACOA,AIUA,AC2CC,AbAG,AkB3CC,ACKD,AdkCJ,AmBxEA,ACuBa,ACFb,AGAA,APoDA,AQUJ,ItB5DI,AIUA,APuCA,AmBxEA,AFyEA,CHpCsC,CDJjC,CAAC,ACMF,AdiCD,AiBCA,CfzDG,AFwDF,AqBnDE,AGAA,APoDF,CnBUC,AK5DD,AIUA,AMAI,CVVH,AIUA,AZ2CK,AwB5EJ,ACuBO,CDvBN,ACuBO,CPUH,CfkDF,AelDG,AOVI,CtB4DN,AHPI,CKJd,CoBjDmB,CtB4DN,AInEE,AP4DE,AwB5EjB,ACuBoB,AHkDpB,AQUW,C3BAX,EAAgB,AInEE,ACOlB,AgBvBgB,AFyEA,CnBUC,AK5DD,AUUR,AQZW,AGAA,C7BuDG,AkB3CD,CAAb,AMjCR,CrBmFoB,AInEE,AmBKA,AGAA,CrBEtB,AiBAgB,CjBAK,AIUrB,AMAyB,AOVI,AHkDP,CVxCA,AaVN,CPUZ,AQZsB,AGAA,C1B8DD,AmBVA,CGlDQ,CbUjC,AaVgB,CbUW,AZ2CV,CAAgB,CQrDjC,ARqDiB,AyBrDoB,CzBqDjC,AsBHkB,CnBUtB,AK5D+B,AiBAnB,EtB4DsB,ASlDlC,AUwCkC,CnBUC,CSjGF,AkByFkB,C3BQnD,AInEkB,AKmBlB,CLnB+B,CJmEQ,CK5DvC,AkBFsB,AGAA,APoDtB,CfzDkB,AmBKgB,AGAA,CrBEO,CDPL,CmBKd,AGAA,EtBLJ,AmBKqB,AGAA,EtBLE,CmBKnB,AGAA,EHAsB,AGAA,EtBL1B,EAA8B,ACOhD,EDPkB,CAAlB,GmBKsB,AGAA,EHAkC,AGAA,OHAlC,AGAA,EHA2C,AGAA,EHA3C,AGAA,CHAtB,AGAA;A1B+DI,Ac0VJ,AC7Y6B,ACMxB,AdkCR,AmBvEG,ACqByC,ACAzC,AV0DA,AY5DR,ACEQ,APmDA,AQUJ,GzBxCA,CiB8BI,ELoWA,AC7Y6B,ACMxB,CDNyB,ACMxB,AGmCH,CExEG,AEqBA,AV0DF,Aa1DE,APmDF,CLoWD,AC7Y6B,ACMxB,ASlBhB,CzB+DkB,Ac0VN,AC7Y6B,AOVQ,CAAC,AK6DrC,CNlFK,AR+EF,CG1CI,AMhBgC,ACAjC,AGAA,CXU0B,ACMxB,ChB6CE,AenDuB,AM/BzB,AR+EF,CQ/EX,AEqBc,AV0Dd,Aa1Dc,CZuZd,Cd1VkB,CsB7DgC,AHmDlD,CLoVU,AQvYyC,ACAjC,AGAA,CZyZlB,AQzZkD,CNgB1C,AMhBoC,AHmD1B,CnBUK,AenDU,ACMX,AMhBgC,CPUP,ACM3C,CDN6B,GAAkB,AIyC3B,EMrDhC,CVY8D,AOVV,AHmDjB,CJzC4B,AOVQ,CtB6D7C,AsB7D0B,ACA9B,AGAA,C1B6DoB,AuB7DX,AGAA,C1B6DL,CAAd,AsB7D+D,AKoDhB,CJpDrC,AGAA,APmDU,CGnDoB,CCAhB,AGAA,CXUuB,AIyCf,CJzC4B,AOVQ,CPUvC,AQVnB,AGAA,EHAmB,AGAA,CXUmC,AOVM,CAA9D,ACAE,AGAA,CXUkB,AIyChC,CInDqC,AGAA,GXUmC,SQVnC,AGAA;A1B6DjC,AInEJ,ACQA,AKoDA,AbAI,AkB5CA,ACMqB,AIjBzB,ACnBA,ACoB6E,ACCzE,AVyDJ,AYlGR,ACyCY,APmDJ,AQWJ,CFvGJ,CAAoC,ErBkC5B,AM4DA,AW1EA,AFwEA,CdlDA,AUMsC,CCQb,CXdzB,AKoDG,AK3CC,ACKsB,AGoCvB,CTEC,AUvDE,AP2DQ,AMNV,Cf1DA,AYsBwB,AKpCxB,CrBiFkC,AInEjC,ACQL,ARoDQ,AwB1EH,ACoBwE,ACCnE,AGAA,CHAC,AGAA,CbyDO,CG1Cc,CAAC,AMhBgD,ACCnE,AGAA,C1B4D6B,AK3DvC,AKoDJ,AGIqB,CRxDhB,AiBF8E,AT0DnF,ChBJe,AwB1Ef,AFwEA,CnBS8C,AUxDd,AUNhB,CVyDhB,CN9DA,AiBde,AEqBK,AGAA,APmDJ,Cf1DA,AP4DG,AuBvDA,AGEE,AGAA,APmDrB,CtBEoB,AmBtCQ,ASxDpC,CzBqG2D,AgB7CT,ASxDlD,CTwDoC,AKpC5B,CjBcA,AgBKuB,ChBLF,CYsByB,EOfjB,AGAA,CHAC,AGAA,ErBC9B,CL2D8C,CAAgB,AK3DxC,ARoDd,CGOuD,AInE/D,GJmEkE,AK3DlE,AkBDqB,AGAA,CrBCK,ARoDW,C0BrDjB,AGAA,CHAhB,AGAA,E1B4DmE,CK3DvE,CAA0B,AeHP,CAAc,CfGjC,EAA8B,ARoD1B,CGO0C,CAA1C,AHP6C,EuBvDT,CAAC,KfGzC,GeHiC,CAAiB,CAA/B,EAAkC,OAAO,CAAC,QAAR,CAAiB,CAAjB,GAAqB,GAAvD,EAA4D,EAA5D,EAAgE,CAAhE,CAAnB;ApB+DI,ASjDJ,AK6YA,AjBnWQ,AkB5CH,ACKD,AdqCZ,AkBrDQ,AClBA,ACkBY,ACER,AGAA,APmDJ,AQWJ,IRXI,CHvCsC,ChBgDlC,AenDC,ACGe,CDHd,ACGN,AGuCG,CVxCG,AZ0CE,AuBvDF,AClBA,AFuEF,CJ1CI,Ab0ChB,AoBxDqE,CtBiErD,Ac4VJ,ASxZM,AGAA,CJDE,ACCD,AGAA,C7BqDC,CAAC,AkB5CD,Ab0CpB,AyBWe,C3BFK,AenDC,AQTC,AGAA,C1B4DA,Ac4VL,EM1ZM,ADqDf,CAAc,CLqWD,AO5aI,CrBgFE,ASjDD,AWbA,AGEE,AGAA,CHAC,AGAA,CXSb,AM7BY,CZ+BC,AK6YJ,AC/YK,AI0CH,CnBSI,AenDnB,AKXkB,CvBuDd,CwBzEgB,CZ+BC,CK6YJ,Cd5VO,Ac4VN,ASxZO,AGAA,C1B4DA,AuB5DC,AGAA,CPmDhB,CAAc,CAA5B,EAA+B,CLqWlB,CM1ZK,CAAS,AGEN,AGAA,CZwZW,CAAhC,ASxZoB,AGAA,APmDgB,CnBSb,AuB5DnB,AGAA,C1B4DqC,Ac4VN,CO5af,CZ+BC,AY/BY,CZ+BC,AWbA,CAAC,AOoDgB,C3BU5B,AqBhFH,CrBgF2B,ASjD1B,AUwCU,CEvEO,AFuEO,CVxCN,AUwCvC,CEvEoB,CrBgFG,CAA6B,ASjD/B,AY/BqB,CDkBf,CXaiB,AWbA,CAA1B,EpB8DuC,AoB9DV,AClB3B,CrBgFsC,CSjDrC,AY/B4B,EZ+BE,AY/B/B,CAApB,CZ+BqB,CAArB,AWbsD,CAAC,CpB8DhC,CAAV,GAA0D,CAA1D,EoB9DkC,CpB8D4B,AoB9DX,CpB8DpD,AoB9DmC,GAAqB,EpB8Da,AoB9D/D,EAAsD,EAAtD,CpB8DoE,CAA1E,AoB9DgE,CpB8DxE,KoB9Dc,CAAlB;ApB+DI,AInEJ,AKkBA,AC2CA,AIkWI,AjBnWC,AkB7CoB,ACOzB,Ad/DR,AkB8CQ,AClBA,ACkBa,ACET,AVwDJ,AaxDI,APmDJ,AQWJ,CzB9GJ,EAAA,CQsGQ,AMvCA,AKnCA,AFuEA,EnBSI,AepDqB,CL8CtB,AK9CuB,ACOvB,AGoCA,Cf1DC,AKkBE,AC2CF,AIkWA,AEzYA,AIjBE,ADqDF,CJ3CwB,AM5BxB,AR4EC,CbIG,AepDqB,AM5BxB,ACkBQ,CAAC,CZwDd,CIkWQ,AQ1ZQ,ACEL,AVwDF,AaxDE,C1B4DC,Ac4VH,AChZwB,AFgDvB,AMLV,CnBSc,AepDoB,AUX3B,ANsDI,CVxCG,AkBmDJ,CPhEK,AP0DF,CGzCb,AHyCA,CT/De,AKkBE,AOIF,AMjBO,CtB8DH,AoB9DD,AEAK,AT0DP,AMLA,CEvEhB,ACkBsB,AT0DL,CT/DC,AkBKF,CbaK,AMHQ,ACO7B,AMjB0B,CtB8DH,AInEvB,AWe2C,ACOvB,AIjBE,AClBH,AR4EC,CCgWhB,AChZyB,CDgZR,EChZ0B,ACOvB,AOfD,AGAA,APmDvB,CnBS4B,AuB5DJ,AVwDC,AaxDD,C1B4DK,AmBjBoB,CL6W7C,AChZ8C,AOVlC,AHsDhB,CLoW2B,AChZwB,AOVhB,ACER,AGAA,CJFf,ACED,AGAA,CHAP,AGAA,CLpBJ,CR4EA,CO1DkB,CN0Zd,AM1ZuB,AP0DO,CAAC,CJ7ClB,AMH8B,CfoDxB,ASjDO,AK6YM,AChZwB,ACOxC,AHyCpB,CbIyC,AepDZ,ACOA,CHyCU,CJ7CtB,CMH+C,AKV9B,AOmDiB,ClBtChB,AK6Y/B,AEzYgB,AIjBe,CpB8DZ,AepDK,CfoDmB,AgB7CZ,CPJlB,AOIG,EPJoB,AMH4B,ACO9B,ChB6Cf,AgB5CnB,ChB4CgD,CoB9DzB,CAAiB,CXa3B,AWbC,EpB8DuC,ASjDV,AWbA,CpB8DW,CSjDzC,CAAjB,IWbsD,CAAC,CpB8DhC,CAAV,GAA0D,CAA1D,EoB9DkC,CpB8D4B,AoB9DX,CpB8DpD,AoB9DmC,GAAqB,EpB8Da,AoB9D/D,EAAsD,EAAtD,CpB8DoE,CAA1E,AoB9DgE,CpB8DxE,WoB9DwE;ApB+D3E,AInED,ACMH,AIYG,AC2CA,AIkWI,AjBnWH,AkB9CG,ACSA,AIlBA,AClBJ,ACiBsC,ACGrC,AVwDG,AaxDH,AC8DL,IjBRI,CbRJ,AkB1C0C,AQRxB,AGAA,C7B2Dd,AkBnDoB,AQRpB,AGAA,ChB0DG,AKlDH,CXXI,AKkBE,AC2CF,AIkWA,AO5aE,ECiBgC,AT2D5B,CS3D6B,ER2Z/B,AM1ZI,AED6B,CZyDzC,AIkWS,CJlWE,AGEI,EQ5EA,CZ+BC,AI6CE,CT/DH,AkBIgC,CZyD/B,AUxDG,AClBD,ACiB8B,Cbc7B,AWbC,AED2B,ClBJ7B,AkBIuB,AKiEzB,CLjEmC,AT2D5B,CT/DvB,AiBbsB,CZ+BC,AC2CZ,AIkWP,CJlWkB,AIkWD,AM1ZT,CAAc,IVwDf,AIkWP,AM1ZQ,AED6B,CR2Zd,AM1ZI,AED6B,CFChD,AED6B,AT2DvB,CHFY,AUxDnB,AP0DuB,CAAhB,CCgWd,AQ3Z4D,AT2D5D,CO1DiC,AClBnB,CAAS,ACiBc,CZyDzC,AIkWkC,CAAC,CQ3ZkC,CbclD,CAAa,CWbrB,CN0ZuB,AQ3ZqC,CbcpD,AK6Yf,AQ3ZQ,CFCmC,CXaV,CY/BC,CAAC,AMoEY,ClBrChC,EAAuB,CWbtC,IXae,AY/BQ,CAAqB,CZ+BC,AY/B/B,EZ+BC,AY/BgC,CZ+BnD,UY/B8D,CAAC,QAAZ,CAAqB,CAArB,GAAyB,EAA1D,EAA8D,EAA9D,EAAkE,YAAA;AjBcpF,AKkBA,AC2CA,AIkWC,AjBjWD,AkB/CA,ACOK,AdmCb,AkBpDS,AClBG,ACgBsE,ACI1E,AVuDI,AavDJ,APmDA,AQWJ,IjBRI,AK9CA,Ab0CR,AiBCQ,CCvDkB,CJmBb,AInBL,CV0DG,AMvCG,AGoCH,Cf1DC,AKkBE,AC2CF,AatDE,AGAA,APmDF,CHpCI,CMnBkE,AT2DpC,CE/C/B,Ab0Cf,Ca1CgB,ACOG,CAAC,AKnCA,AEoBD,AGAA,CjBWC,AafkE,CT2DnC,CS3DqC,ACIlE,AGAA,CjBWC,AC2Cf,ASHA,CNI8C,CT9D/B,CmBOG,AGAA,CjBWC,AC2CF,AMvCT,AW+CO,CvBrEG,AM6DlB,AK9CA,ACOqB,CDPF,ACOX,AHwC2C,CT9DnD,AiBbuB,CAAC,CLmCC,CDPzB,CAAwB,ACOpB,EKnCQ,CAAkB,CN4BF,CQRd,AVuDgC,AavDhC,CHAS,AVuDuC,AavDvC,CLpBX,AR2EmD,CQ3E5B,CAAvB,CAAD,AR2EuD,CUvDtC,AGAA,CjBWb,AcXc,AGAA,CjBWC,AY/BW,ER2E8B,CJ5CxD,CMHS,CNGW,AMHF,EM5BtB,AEoBY,AGAA,CjBWR,AMHS,AQRc,AGAA,CHAxB,AVuDgC,AavDhC,CjBW0B,AMHF,AM5Ba,AR2E/C,CE/CoB,AQRiB,AGAA,CjBW1B,AMHf,CNGA,CkBoCmD,EJ/CL,AGAA,CLpB1C,AEoB2C,AGAA,QHAN,AGAA,CHAe,AGAA,CHAf,AGAA,GHAmB,AGAA,EHA9C,AGAA,EHAkD,AGAA,EHAlD,AGAA,EHAsD,AGAA,YHAA,AGAA;A1B4DpE,AIlEA,ACKR,AIaQ,AC2CA,AIkWH,AjBjWG,AmBzC6B,AdmCrC,AkBnDQ,AClBC,ACeW,ACKR,AVuDA,AavDA,AC8DR,IjBRI,AUxDA,CNmYJ,AOvZsB,CLoCW,AKpC7B,AR6EI,CHDD,AMxC2B,ChB6CxB,AIlEF,AKkBE,AC2CF,CLxDZ,AWgBwC,AMvB6B,CNuB5B,AMvBkB,ACSzC,AVuDF,AavDE,GJJE,CNkByB,AIhB3B,AEDE,AT0DA,CJ5CC,AC2Cb,AMxCsC,AIhB3B,APyDE,CbIC,CIlED,CKkBG,AC2CF,CVKG,AuB3DE,AGAA,CtBPH,AS8DE,CAAC,AcOJ,CvBrEf,AKkBoB,AcXE,AGAA,C1B2DD,AgB7CY,ChB6CX,AgB7CyB,CNwC/C,AMxCiC,AIhBjC,CAAsB,EJgB6B,ChB6ClC,AK7DzB,CL6DoC,AoB7D5B,CJgBsD,AIhB3B,CJgB4B,AHyC1C,CAAkB,CbIC,CAAC,AoB7DF,AGEI,AGAA,CHAC,AGAA,E1B2DR,AaJf,CbIwB,AaJA,CJ5CrB,AOGmC,CPHrB,AOGkC,CAA/B,CHyCpB,CbI6B,AShD1B,AcXM,AVuDoB,AavDpB,CVc8C,CPHjC,AcX/B,AGAA,CVc4B,ChB6CK,AoB7DV,CpB6DoB,AShD/B,AWboB,APyDW,CbIV,AShDrC,AI4CgD,CGzCwB,EhB6CrB,C2BbA,EPhDxB,EpB6DC,AoB7DiB,APyDhC,COzDc,CpB6D+B,AoB7D1D,EPyD4D,CAA/C,EbIkD,CaJC,CAApD,EbI8C,CAAU,CAAV,CaJY,EbIE,GAA5C,AaJ+C,CbI1D,AaJL,CbIZ,AaJI;AbKJ,AK1GR,AI0DQ,AC2CA,AK9CA,ACKI,AdmCZ,AkBlDQ,AEDY,ACGR,AVuDA,AavDA,APkDJ,AQYJ,CtB7GJ,CAAmC,EL0G3B,AShDA,AC2CA,AK9CA,AKVA,CJasC,CH4ClC,CbID,AULA,AMxCC,ChB6CA,AULA,ASJA,CJ1CA,AKVC,CXaC,AMHD,AbwCb,AkBlDc,APyDE,CJ5CD,CTgDP,CuB3DW,AGAA,APkDF,CNKG,CbID,AaJE,CXPrB,AyBckB,CjBRV,CRNR,EaxCQ,AKVA,APyDkB,CJ5ClB,AMHgB,AKVC,APyDE,CRtG3B,AI0D0B,CTgDC,AK1G3B,EUuDQ,AKVA,AGEqB,AGAA,APkDjB,CnBSkB,AShDtB,AMHqB,AKVC,ADoDA,CVvCC,GWbG,CXaC,CI4Cd,AMLT,CJ1CJ,AF+C+B,CUvD3B,AGAA,CXQ0B,EI0CG,CNKpB,AMLb,CNKqC,CbIrC,AmBToC,EJ1CpC,CKVsB,APyDT,CJ5CU,AMHgB,AKVR,APyDW,CJ5CV,CkBkCmB,EZrCnD,CF+C+C,CE/CF,AF+CG,IE/ChD,AKVsB,ELU6B,AKVR,CXapB,AWbD,CPyDT,CJ5CiC,AWbA,CXavB,AMHvB,AKTI,EXY6C,AMHQ,AF+CG,CJ3CxD,AI2CS,GE/Cb,AF+CgE,CAApD,CE/CmD,GAA/D,CF+CsE,CE/CF,IF+CO,CAA/D,CE/CZ,AF+CI,EE/CwE,MAA5E,EAAoF,MAApF,EAnDiC,CAqDjC;AfkDA,AInEA,AKmBK,AC2CL,AI7DA,AEoBK,AdkCS,AkBjDT,ACnBL,ACiBa,ACIZ,AVuDA,AavDA,APkDG,AQYR,EzBfkB,EFYd,AULA,AI7DA,AOdA,CEkBc,AGAA,CjBcT,AOEA,AIfA,AGDL,AGAA,APqDI,CnBSD,AShDG,AC2CH,AMzCG,AIfA,CpB6DF,AULA,CN9DC,AKmBG,AOEA,AIfA,ACnBJ,AFuEG,CLzDD,AOdD,ACiBQ,AHsDL,CLzDD,AZsDO,AoBnDA,CpBmDA,CEvDL,AYqBG,AMjBI,ClBJN,AM8DV,AMzCa,AWiDL,CjBRG,CAAX,AI7DA,AQGmB,AHsDf,CnBSJ,AInEa,AkBIO,AHsDL,Cf1Df,AM8Dc,CAAC,AI7DA,AZsDD,AkBjDI,CpB6DF,AInEA,AgBMG,ACnBnB,CjBaiB,AKmBG,APoCN,AmBpEE,CZgCK,AC2CL,AI7DhB,AEoBQ,AGqCY,CHrCE,CZrBF,AYqBhB,CZrBJ,AiBbA,ACiBgB,CZ0DhB,AW3EqB,ACiBQ,AHsDd,CnBSf,AInEuB,AFuDT,AoBnDE,AHsDS,Cf1DD,AFuDV,AkBjDN,ADoDO,CCpDa,ChBN5B,AKmBQ,AWbJ,AEF6B,CbeH,AaflB,AHsDiB,Cf1DD,AKmBxB,AUuC0B,GEvE9B,AFuEI,EAA+B,IQNgB,CRMX,IAAL,CAAU,CAAV,GAAc,CAAC,GAA9C;AnBUJ,AInEI,AKkB6B,AC4CjC,AI7DA,AjB6DA,AmB1CyB,AIfM,AEFK,ACKpC,AGAA,APkDI,AQaR,I3BJI,AULA,AI7DA,ELiBiC,AOER,AIfM,ADqD3B,CnBSD,ASjD+B,AC4C/B,AM1CuB,AIfM,CpB8D5B,AULA,AbAE,A0BtDA,AGAA,CjBU8B,AOER,AIfM,ADqD3B,Cf1DG,AUCJ,AEmBuB,AMjBO,AHuD5B,CLzDD,AQE8B,EAAE,ACK5B,AGAA,CtBRG,AM8Dd,AM1CiC,AIfM,CfAhC,AIamC,AC4C/B,AM1CuB,AIfM,CpB8DxC,ASjD2C,AC4C3C,AY3D0C,ACK5B,AGAA,APkDV,CnBSS,AInEI,AUCjB,AQE2C,AHuD5B,CTID,CAAC,CAAD,AI7DE,AjB6DE,A0BtDA,AGAA,CtBRG,Ce0DD,CnBSD,AULA,AI7DnB,AjB6D6C,AmB1ChB,AIfK,CpB8Dd,ASjDgB,AKpBH,AEsBU,AIfM,CXaG,AKfpD,AjB2DA,AmB1C6B,AMjBU,CZ2DvC,AY3DoD,AHuDrC,CGvDwB,AHuDd,CnBSN,AgB/C4B,AGsChC,CnBSF,CsBhE2C,CNiBN,AGsCrB,CnBSD,AgB/CuB,AGsCrB,CIlDhB,AGAA,CHAS,AGAA,CPkDnB,EnBSS,AmBTsB,Cf1DlB,Ae0Db,Cf1D0B,AmBQF,AGAA,C1B2DQ,AgB/CW,AOZlB,AGAA,CVY+B,CAA/B,GZpBO,AYoB4B,ChB+CtB,AInEL,CJmEM,AgB/Cf,COZL,AGAA,CtBRe,AmBQA,AGAA,CHAxB,AGAA,C1B2D4B,AInEzB,AYoBmD,ChB+CpE,AuB3DyC,AGAA,CtBRC,CJmEQ,CInEjC,CAAb,CmBQ0C,AGAA,CHAC,AGAA,C1B2DQ,OuB3Dd,AGAA,C1B2DS,AuB3DM,AGAA,C1B2DQ,AuB3DvB,AGAA,C1B2DzC,EAAmE,AuB3DP,AGAA,EHA9C,AGAA,EHAkD,AGAA,C1B2DQ,CuB3D1D,AGAA,EHAsD,AGAA,K1B2DD,CAAc,CAAjF,KuB3DoE,AGAA;A1B6DpE,AIpEI,AKiBA,AC6CJ,AbAA,AkB9CA,ACGI,AdmCR,AkBlDQ,ACjBJ,ACeY,ACMR,AVsDJ,AatDI,APkDA,AQaR,IjBTI,CD9CiD,AOAX,AIbQ,ChBH1C,AKgBmB,AOAH,AIbE,ADuDlB,CV1CJ,AC8CG,AM9CH,AIbA,CpBiEM,AUNF,AbAE,AkB9CA,AM7BA,AR2EA,CS9DM,AH0DL,CIlDG,AGAA,APkDF,CjBJZ,AoBnDgB,ACKD,AGAA,CXQD,EL8CV,AatDc,AGAA,CXQD,CF8CC,AMJV,CnBUW,AIpEA,Ae0DA,Cf1DC,AP8DA,AKRpB,CatCqB,AbsCT,AWQS,CbMC,AEdtB,AqB9CwB,AGAA,C7BsDD,A0BtDE,AGAA,CtBRjB,AFsDe,AiBIC,AQaJ,CvBvEK,AP8DrB,AKRJ,AmBnEyB,AR2EA,CAAC,CbMC,AEdO,CmBnEN,AFuET,Cf1DX,Ae0DqB,CAAV,CjBJnB,AqB9CiC,AVsDZ,AatDY,CHAC,AVsDF,AatDE,CxB8Cc,AmBnE5C,AFuE6B,GNIG,AMJ5B,CnBUc,AaNe,CbMC,AmBVA,CJ1CrB,CAAc,AbsC/B,AqB9CyB,AVsDO,AatDP,CbsDgB,CbMD,AEduB,AqB9CvC,AGAA,CHAhB,AGAA,APkDmC,CJ1CR,CAAC,CF8CU,CbMD,AmBVP,CAAU,CAAV,CNIG,CAAU,CAAV,AMJW,CJ1CrB,AI0CsB,CnBU/B,AepDuB,CfoDzC,AepDa,AF8CsC,CMJ/C,CJ1CwC,EYkCO,CdYvB,CE9CoB,CAAC,AF8CS,KAAK,GE9CnB,CAAc,AF8CA,CE9Cd,AF8CwB,CAAV,EE9CI,CF8CU,CE9C3D,EAAqD,AF8CtC,CAAX,CE9CJ,AF8Cb,CE9CA;AXdI,AKiBJ,AC4CA,AI3DA,ACaA,ACIA,AdiCJ,AoBnDiB,ACMT,AVsDJ,AatDI,APkDA,AQaR,IlBrDI,AC4CA,AK9CA,ACIA,AH0CA,EMJI,CTID,AGAA,CHAC,AI3DE,ACaF,AbqCR,AWSQ,CE9CC,AI0CE,CfzDG,AKiBJ,AahBO,ACMH,AGAA,APkDF,CVxCD,AOEA,AMlBO,ACMH,AGAA,CZLD,AEiBF,AH0CR,CXTJ,AoBnDoB,ClBDF,AmBOA,AGAA,CZLD,AD2DF,CC3DX,AZmDA,AiBII,CfzDa,AM6DjB,ASJe,EJ1Cf,AOdsB,CPcN,AOdO,ACMH,AGAA,CtBPC,AKiBrB,AC4CiB,AY5DK,ACMD,AGAA,AC+DN,ClBrDG,AOElB,AdkCA,AoBpDgB,AHwDI,CHtCD,AdkCnB,AoBpD0B,AT4DP,CE9CnB,CL8CmB,AK9CE,CNErB,AC4CA,AGAsB,AMJP,CVxCQ,AOEvB,AdkCA,AiBIyB,CHtCD,AdkCxB,AiBIe,CJ1CU,AQRI,AGAA,CHAC,AGAA,CjBUH,AahBX,AHwDa,CHtCD,AdkC5B,AoBpDmC,CAAvB,CpBoDN,AiBIF,CjBJJ,CiBIkC,CjBJzB,AiBIL,CfzDa,AFqDjB,AqB9CqB,AGAA,CtBPS,CFqDlB,AqB9CQ,AVsDpB,AatDoB,CHAhB,AGAA,CXQiB,CXfa,AWeJ,CXfK,AKiBZ,APoCvB,COpCgC,AOER,CAAS,AdkCf,CatCG,EAAe,ACIZ,CDJH,CAArB,ACIsC,AW6Ba,CvBhDrB,AYmBN,CZnBoB,AKiBrB,AOEvB,AdkCA,CErD8B,CKiBY,APoCf,COpCJ,APoCvB,CErDgD,AKiBhD,ELjBiB,EAAmC,AFqDvB,EErDZ,CAAb,CFoDR;AFeI,AIlEI,AKiBJ,AC4CA,AI3DA,AjB0DA,AkB7CA,AKZA,AClBA,ACesC,ACOlC,AVsDJ,AatDI,APkDA,AQaR,IlBrDI,AC4CA,AI3DA,AMCA,AClBA,AR4EA,ET7DI,AeyDA,CTID,AGAA,CbKC,AULA,AK9CE,AF8CF,CC3DA,AjB0DC,AuBzDD,ADsDG,CVxCD,AKfD,AMCA,AEHiC,ACO5B,AGAA,APkDF,CVxCD,AajBgC,CPe7B,ClB6CD,AyB5DgC,ACO5B,AGAA,C7BqDH,CkB7CG,AM9BF,CAAC,AEsBI,AGAA,APkDZ,CnBSS,AIlEE,AM6Df,AI3DA,AjB0Da,AgBCb,CT7DgB,AP4DhB,A8BUY,CZvDK,AOf8B,CREhC,AjB0DC,AuBzDhB,AEHgD,AT6DhC,CbKC,ASjDjB,AZ2CiB,AuBzDD,AEH+B,ClBA3C,AKiBc,AajBuB,ACOnB,AGAA,CtBPD,AiBfrB,ACemD,ACO5B,AGAA,CZLvB,AjB0DoB,CuBzDpB,CXcA,AWdqB,AClBC,CjBelB,AKiBmB,AI4CvB,ETlE4B,APiEH,CGMC,AIhEtB,CJgEuB,ASjDA,AajBc,CAAmB,CAAnB,CtBkExB,EAAjB,AoB/DA,AEHgE,ACO5B,AGAA,CXQvB,AQRwB,AGAA,C1B2DH,AenDP,AKZM,AClBX,ACemB,GAA4B,CPetC,CAAC,CNET,CAAS,AZ2CZ,AuBzDpB,AEHuE,ACOhD,AGAA,C7BqDmB,CuBzDA,AGIpB,AGAA,CHAlB,AGAA,GXQuB,ClB6C3B,AkB7CyC,CAA5B,ClB6CqC,CY3C3B,AZ2C4B,AkB7CP,CKZ5C,CXc4C,AZ2C5C,CY3CuB,AWd8B,CXcrD,AZ2CuD,AkB7CP,CAAC,OKZjD,CLY4C,CAAc,CAAd,GAAkB,EAAjD,EAAqD,EAArD,CAAb;AfoDI,ASjDJ,AC4CA,AI1DA,AjByDI,AkB7CJ,ACIA,AdiCA,AmBnEI,ACcQ,ACQR,AVsDJ,AatDI,APkDH,AQXkD,CAA3D,GlB7BQ,AC4CA,AK9CA,ACIA,AdiCA,AWSA,CMrBiD,CnB0B7C,AqBjFA,AF0EJ,CTEG,AGAA,CHAC,AI1DE,ACYF,AF8CA,CbKG,AenDF,ACID,AdiCA,AoBxDQ,CtBsEJ,AHNE,AmBzCL,AdiCA,AqB7CK,AGAA,CjBUH,AC4CP,AY7DY,CbiBJ,AC4CA,CAAR,CVKI,AHNU,CaCH,AatDI,AGAA,ChBsDf,ARTA,AWSA,CbKe,AHNE,AwB3EF,AR4EF,CHAC,AW5EE,AEsBE,AGAA,ChBsDlB,AI1DiB,ACYjB,AbqCc,CarCE,ACIhB,ChB+CmB,AULF,AM1CD,AOZK,AGAA,C1B2DD,ASjDpB,AC4CA,AI1DoB,AjByDE,AKRtB,COnCmB,AI4CA,CHAC,AK9CpB,AQRwB,AVsDJ,AatDI,CXQH,ACIrB,AOZkB,AGAA,CZJM,AEgBH,ChB+CN,ASjDf,CTiD0B,ASjDF,AC4CF,AatDM,AVsDT,AatDS,CXQH,AM9BrB,AEsBA,AVsDS,AatDT,CLtBwB,EZgCA,AC4CF,AGAE,CHAD,AM1C3B,EN0CA,AM1C8B,ChB+CI,CaLrB,ChBDI,CGMkB,AHNI,AwB3EnC,CxB2Ea,AwB3EqB,AR4EF,ChBDhC,CGMW,AenDM,ACIrB,CFhBoB,ACYU,CDZG,AEgBM,CPFf,CTiDkB,ASjDT,AI4CS,CC1DtB,ACYC,AM9BjB,AR4EuC,CQ5EG,CPkBR,ACYF,ACIpC,CDJqB,CDZD,ACYpB,ACI8C,AH0CJ,CJ5ClB,AI4CxB,CC1D0C,AOlBtC,CZgCqC,AYhCW,AR4EF,CJ5C1B,CAAxB,AOEA,EFhBoB,AEgBiC,CH0CE,CbKnD,Ac/D6C,EAA7B,AEgBpB,CFhBA,CEgB2D,CKlCvD,EAA6D,AR4Ef,CG1ClD,AH0CgE,CAAhE,CG1CiE,CH0CE,GG1CnE,EAAuE,AKlCnE,AR4EoE,IG1CxE,EAA6E,EH0CV,CG1CnE,AH0CiF,CAAjF,CG1CkF,MAAlF,EAA0F,MAA1F,EAAkG,MAAlG,EA7DiC,CA+DjC;AhB8CI,AIjEA,AM4DJ,AI1DA,AjByDI,AkB7CJ,AKbA,AEHa,ACQT,AVuDJ,AavDI,AC+DZ,IjBTQ,AI1DA,AD2DA,AcQJ,E3BJQ,CULD,AGCA,CHDC,AK9CE,AKbA,AP4DF,CbIG,Ac/DH,Cd+DI,AIjEE,AUEL,AjByDG,AyB7DK,CAAC,ClBEF,AWcF,ClB6CC,AyB7DK,ACQL,AGAA,ChBsDX,CN5De,AWcF,AF+Cb,CT7DgB,AP2DS,EGMrB,AHNA,AuB1DY,CpBgEC,AenDA,AOhBK,ClBEF,AkBFG,AKuEX,CvBrES,AUErB,AMDmB,AEHG,CAAN,CFGhB,AEH0B,AKuEkB,CbnEzB,CamE3B,CJ/D8B,AGAA,GtBNN,CAAc,CAAd,AkBFA,ACQW,AGAA,CJRQ,CAAvB,CtBmER,AIjE8B,CUElC,ASI+B,AGAA,C1B2DG,Ac1ED,ASeX,AGAA,CZFtB,ACUa,CXdyB,AWcX,CXdY,AmBMJ,AGAA,E1B2DI,AuB3DjB,AGAA,CXQS,CAAC,CQRQ,AGAA,GtBNN,AmBMvB,AGAA,CtBNqC,CJiEd,AIjEnB,CJiEiC,CAA5C,AenDuB,AQRoB,AGAA,CXQN,CfmDU,AIjEA,AWctC,CXdT,CWcwC,CQRxC,AGAA,E1B2DoD,CenDR,CAAC,MfmDE,CAAc,CAAd,AenDP,CAAc,CAAd,CfmDyB,EenDP,EAAjD,CfmD6D,CenDR,EAArD,CfmDwD,AenDrE,CfmD+E,CAAV,GAAY,IAA7E;AACH,AIjEG,AKgBJ,AC4CA,AK9CA,AboCH,AmBnEO,ACckC,ACSrC,AVuDJ,AavDI,GbCL,CJSI,AC4CA,AK9CA,CQdc,AGAA,CHAd,AGAA,ChB4DG,CAAC,AK9CA,CNEA,AMFC,CXdK,AKgBL,AYjCG,ACc8B,CAAC,ClBG3B,CkBH6B,ElBG1B,AM4Df,GAhEgC,CNIb,AM8DnB,AKhDA,AOjB+C,ClBG3B,AKgBpB,AMFgB,AOjBgC,CbmBhC,AYjCG,ACc4B,CDd3B,ACcqB,CAAU,CPiBnD,CNEA,AMFqB,CNEA,CYjCb,CjBiBO,AiBjBW,CjBiBG,AWcJ,CXdV,CkBH0B,CAAmB,ClBG3B,AkBHQ,CDdrC,CjBiBA,CiBjB8B,ACc8B,EbmBhE,AanByC,EbmBN,CanBkC,CPiBhD,CAAS,EOjByC,CAA3D,CPiBS,CNErB,CMFoC,CNES,AMFxB,CAArB,SNEA,EAAyD,MAAzD,EAAiE,OAAjE;ALfI,AUGJ,AjBuDI,AmBxCJ,AIlBA,ACjBQ,ACakE,AH4D1E,AQYR,KAAK,GbjES,AEeA,AKnCE,AFyEF,CCxDD,AOoEJ,CvBpES,AkBJgE,AH4DlE,CtBEC,A8BUjB,CXlDkB,CZlBG,AgBAJ,ADwDE,CCxDD,AEJoE,CzB8DjE,AmBxCA,AWkDN,CvBpES,AP0DF,AyB9DkE,CFInE,CAAb,ADwDgB,CtBEC,AmBxCA,CZlBG,AP0DhB,AuB1DY,CAAC,CvB0DG,AsBFT,CLrDU,AjBuDA,AwB3EE,AFyEF,CCxDD,ACjBI,AFyExB,CCxDA,CNGwB,AjBuDA,CuB1DD,CAAC,COoEhC,C9BVoC,AuB1D5B,ACjBQ,CPoBR,AjBuD6B,A8BUN,CPpEK,EhBAZ,CAAY,CP0DJ,CO1DM,AP0DK,AmBxCtB,CAAc,EZlBM,CP0DT,CO1DR,AP0DwB,AmBxCT,CAAC,CZlBK,EAArB,EAAyB,AP0DrC,EO1DY,AP0DgC,CAAC,AmBxCtB,CZlBkB,AYkBJ,CZlBzB,AP0DZ,AmBxCS,CZlBT,CP0DiD,AmBxCT,IAAI,CAAC,QAAL,CAAc,CAAd,GAAkB,EAAjD,EAAqD,EAArD,CAAb;AhBgDA,AIjEI,AKeJ,AC8CA,AbHQ,AkB7CR,ACKA,Ad+BJ,AkBjDQ,ACjBC,ACYO,ACWZ,AVuDJ,AavDI,APiDA,AQaJ,EzBnBA,AWYA,AcOA,E3BHI,ASlDA,AMFA,ACKA,AOZA,AGAA,EtBNI,CJiED,CAAC,AHPI,AmBxCJ,AGqCoB,CfvDjB,AKeH,AC8CC,AKhDD,ACKC,Ad+BT,AoB1DgB,ACeR,AGAA,CtBNI,AKeH,AMFA,AboCT,AkBjDc,AEdkB,ACoBvB,AGAA,APiDqB,CtBGf,CAAC,AyB9DD,ATiEf,CHAa,AGAb,AMNiC,CTMnB,CVIV,CHPQ,AuB1DQ,AEdY,CZ2Ef,AbHI,AyBxET,CZ2ER,ASNkC,AQatB,CXlDZ,Ad+BJ,AkBjDuB,AOoEN,CvBpET,AM6DY,AKhDhB,ACKgB,Ad+BpB,AqB3CI,AGAA,CtBNmB,AM6DF,AbHI,AkB7CL,AQPA,AGAA,C7BoDM,AgBG1B,AMNiC,CCvDN,AP6D3B,AMN2C,AQa3C,CjBPwB,AM3CpB,AGqCA,AQakB,CvBpEd,AWaJ,ACKqB,AOZrB,AGAA,CtBNwB,AKexB,AMFqB,AQPA,AGAA,CjBSC,AZ2CL,CAAW,AKThC,CQY6B,AM3CA,CZlBG,AWa5B,CNEA,APkCJ,AWYA,CJ9C+B,AZ2CV,AkB7CU,ClB6CM,CAAhB,A0BpDjB,AVuDJ,AavDI,C7BoDQ,CkB7CR,AQP+B,AGAA,EXOE,CNEjC,EPkCK,AkBjDc,AOoEgB,CjBPf,AKhDpB,ACKqB,AIlBY,AOoEG,CvBpEZ,AM6De,AM3CT,CZlBG,AW/CA,AbgGrC,AqB3CI,AVuDK,AavDL,AC8DmC,CZrDnC,CbkCkC,AqB3CO,AGAA,AC8DD,CXlDnB,AIlBiB,ChBAd,AgBAe,AP6D3C,CHAI,AM3CoC,CZlBG,AYkBlB,AH2CD,CT7DI,AM6DuB,AM3C/C,CN2CgD,CN7DN,CM6D1C,CN7DwB,CAApB,AM6DgD,AU7DnB,CAAe,CAAf,CGMjC,AGAA,CC8DsD,CPpEF,AGMI,AGAA,AC8DD,EAAD,CAAnB,CAAvC,CPpE6D,AGMzD,AGAA,CNN0D,CGMK,AGAA,KHA/D,AGAA,EHAsE,AGAA,KNNlB,AGMpD,AGAA,CNNwE,CAApB,EAAuB,CAAxD,EAA2D,GAA3D,EAAgE,EAAhE,CAAf;ApBkEP,AIjEO,AM6DA,AI3DJ,AjBwDK,AmBxCL,Ad+BA,AkBjDI,AP6DJ,AMNA,AQaP,G3B5DG,CcNI,AZ+CA,AiBMA,EfvDI,AgBAA,ClBiDD,AiBMA,CHrCG,Ad+BF,AWYA,AMNA,CfvDG,CAAC,AM6DE,EM3CA,AIlBA,AP6DF,CO7DG,ENEA,AEgBE,AH2CF,CHAK,AI3DJ,AD2DZ,CXZA,AiBMA,ETMmB,AM3CF,CZlBb,CAAe,EUEnB,AMFI,CV6DoB,AU7DF,ChBAlB,CAAoB,AUEF,EMFlB,CAAuB,ChBAC,GgBAG,IV6DZ,AM3CN,CN2CyB,AI3DhB,AEgBK,CN2CR,CAAf,EM3C2B,CZlBP,AYkBQ,CZlBC,EgBAN,CAAS,ChBAZ,EAAe,CAAf,AYkBG,CAAc,AIlBd,ChBAe,AYkB7B,CIlB8B,ChBAnB,AYkBoB,AIlBjB,ChBAvB,CgBA0C,EJkBE,AIlBrB,CJkBsB,AIlB7C,QJkBwC,CAAc,CAAd,GAAkB,EAAjD,EAAqD,EAArD,CAAb;AZjBI,AM6DA,AI3DA,AEgBJ,Ad+BA,AkBjDI,AClBA,ACaI,ACWR,AVsDA,AatDA,APiDA,IHrCA,Ad+BA,AiBMA,CIjDA,AGAA,ChBuDI,AI3DA,AMFA,ClBiDD,AqB3CH,AGAA,APiDG,CHrCC,Ad+BA,AoBtDI,ATiEM,AMLV,CTMG,AM3CF,CZlBK,AM6DF,AavDR,AGAA,EbsDkB,CT5DL,AiBlBF,ACaC,CpBsDZ,AoBtDa,AH4Db,CjBNW,AqB3CP,AVsDiB,AatDjB,APiDO,CfvDK,AgBAF,AGMT,AVsDL,AatDK,APiDL,CLrDe,AMFA,AClBX,AR6EgB,CCzDJ,AD2DhB,AMNqB,CTMjB,AM3CJ,CZlBoB,AYkBJ,Ad+BA,AiBMO,CCvDnB,CV6DiB,AU7DD,CV6DE,ASNI,CHrC1B,Ad+BW,AoBtDH,AH4DmB,CHrCN,Ad+BA,AoBtDG,CpBsDb,CQYe,ASN1B,CCvDI,CNEA,AEgBqB,Ad+BA,AoBtDjB,CROoB,AQPC,EZkEE,ARZ/B,AqB3CA,AGAA,CJXQ,ClBKQ,AFiDc,AqB3CR,AGAA,CtBNM,AFiDG,EEjDD,AM6DJ,CAAW,AavDrC,AGAA,CZJI,ASIsB,AGAA,CtBNO,AUEK,AZ+CF,EEjDpB,AYkBK,CN2CD,AM3CU,CZlBO,AFiDN,AqB3C/B,AGAA,CxB2CyC,AqB3Cf,AGAA,CtBNV,AM6D8B,ARZhB,CY/C1B,AEgBiB,AOZrB,AGAA,CtBNyC,AUEK,CEgBV,Ad+BS,AqB3Cf,AGAA,CtBNd,AYkBK,CAArB,CZlB6C,AFiD7C,CEjDgB,AUEZ,CVFA,AUEgD,CJ2DhC,GAAsC,CavD1D,AGAA,MZJI,EJ2DA,AI3D6D,SAA7D;AdgER,AIjEQ,AKaP,ACgDO,AbJA,AkB5CJ,ACKA,Ad+BA,AkBjDC,AClBA,AFyED,AQaR,E3BHI,EEhBI,AiBMA,AQaJ,CN5FI,CjBwBI,AM6DA,AbJA,CGQR,AEhBO,AiBMA,CnBUP,AepDU,ACKA,Ad+BF,AiBMA,CfvDG,AM6DA,CN7DC,AM6DA,AiBON,EXlDQ,CWkDL,CzBnBL,AiBMA,CHrCa,Ad+BF,AiBMA,CtBEG,CGQlB,AHRmB,AsBFF,CnBUjB,A2BGJ,CjBPY,AM3Ca,CZlBb,AFiDY,AiBMC,CfvDE,APyDf,AkB5Ce,ClB4CC,CsBFpB,CJ1CsB,AboCX,CEjDP,AFiDiB,AiBMC,CnBU1B,AIjE4B,AFiDb,CiBMa,CJ1CE,CfoD9B,AEhB6B,CEjDG,AeuDD,CAAC,CjBN5B,EAA8B,AiBM9B,CjBNA,Ec/Ba,CAAc,ChB+CtB,GgB/C0B,ChB+CnC,AIjE4B,AYkBQ,CZlBC,AWaX,CfoDF,AepDc,GXbV,AWaF,EXbiB,AWaA,CXbf,AYkBG,CAAc,CZlBC,AWapB,ACKT,EZlBW,AWaoB,ACKA,CZlBxC,AWayC,GCKG,CAAC,GDLL,EAAU,GCKV,CAAc,CAAd,EDLA,CAAtB,ACKwC,EDLE,ACKnD,EAAqD,EAArD,CDLS,ACKtB,EDLuE,EAAjD,CAAtB;AfqDA,AIjEI,AM6DA,AI5DA,AjBuDiB,AmBtCrB,Ad+BA,AoBvDQ,ATkER,AMLA,IHrCA,Ad+BA,AiBMA,EfvDI,AM6DA,CRZD,AiBMA,CnBUC,AHTiB,AmBtCjB,Ad+BA,AoBvDI,AH6DJ,CfvDG,AM6DA,AM3CF,AH0CA,CT5DG,AM6DA,AI5DA,CZgDR,CFgBQ,AHTiB,AKPjB,CQYJ,ARZJ,AoBvDa,ATkEJ,AMLT,CTMY,AbLe,AyB9Db,ATkEJ,AMLC,CnBUA,AEhBA,CFgBX,AEhBA,AiBMa,CNKA,CXXC,AWWd,CG1CA,AGqCiB,CfvDb,AM6Dc,AM3CF,AH0CA,CT5DG,AM6DA,AI5DA,AD2DF,CHCb,AI5DgB,AKsDpB,CjBNmB,CQYG,AM3CtB,AMxBQ,ATkEY,AMLE,CfvDlB,AYkBiB,AMxBI,ClBMD,AeuDA,CLtDhB,AZgDM,CYhDY,AZgDF,Cc/BC,Ad+BX,AoBvDN,ATkEiB,AMLE,CfvDC,AM6DA,AYnEE,AH6DF,CTMC,CAAzB,ARZwB,CiBM5B,CTMgC,AI5D5B,AQP8B,CZmE9B,ARZJ,AiBMiC,CLtDC,AD2DlC,CHCmC,ARZF,AiBME,CTM/B,ARZJ,AWWkC,CAAC,CHCG,ARZF,AiBMG,CNKvC,CG1CqB,CZlBG,AYkBM,AH0CS,AMLvC,CfvDiC,AM6DO,ARZA,CAAC,AiBMG,EHrCvB,Ad+BrB,AoBvD8B,AH6DgB,CfvDtB,AM6DoB,AYnEL,CZmEM,AM3CT,CZlBG,AYkBlB,AGqC4B,CfvDzB,AM6DpB,AM3CJ,AMxB8B,AH6DoB,EfvDR,AkBNE,CAAd,AH6D9B,CfvDwB,AkBNhB,ClBMJ,AeuDmD,EAAE,GAAG,GAA5D;AnBUA,AI/DI,AKYZ,ACgDY,AI5DI,AjBsDY,AkB3CpB,AbqCA,AkBlDA,ACjBA,ACYK,ACUR,AVwDO,AaxDP,APmDG,AQaR,IZxDQ,AbqCA,AiBMA,CCxDA,CV8DI,AGDA,ChBLA,AKND,AkBlDH,ADwDG,CnBSW,Ac/DN,AZgDJ,AmBnEE,AFyEF,CV1CZ,ACgDe,AKjDH,AYwDH,CvBnES,AM4DF,AKjDH,AKbL,AP6DQ,EbIU,EUHd,ARZJ,AWWY,AMLZ,CnBSqB,AEfV,AkBlDP,ADwDO,CnBSX,AI/DgB,AFgDJ,AkBlDP,ACjBS,CrBiFM,AmBRP,CnBUb,CIhEmB,AiBnBF,AMsFzB,CZxDQ,AFgDkB,AMLD,CJ3CD,AbqCC,AWWE,CcQR,CvBnEY,AUAA,AOnBF,AFyErB,CLtDwB,CCWxB,AbqCY,AWWW,AMLD,CV1C9B,AMD6B,AbqCC,AWWE,CXXb,AWWY,AMLC,CNKN,CAAN,CC3DJ,AZgDkB,AiBME,ECxD5B,ClBkDA,AmBnEiB,AR8Ec,AML/B,CCxDsB,ACjBG,CnBmEM,CAAC,EkBlDhC,AP6DoC,CEhDpC,AKb0B,AP6Dd,CAAR,CT3De,AFgDkB,CEhDJ,EAAd,AgBFnB,ClBkDgC,AkBlDN,ACjBU,CjBmBC,AFgDK,AmBnEL,CnBmEN,AkBlD/B,EhBEmB,AgBFW,ClBkDgB,CEhDJ,EAAvB,AFgDnB,CEhDI,AiBnBqB,CAAqB,CAArB,GDiBzB,ACjBkD,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAjB;AjBoBI,AKxDZ,ACoHY,AI5DC,AjBsDJ,AmBtCD,AdgCA,AmBnEA,AR8EI,AMLJ,AQaJ,ClB3HJ,CAAgC,EOwExB,AdgCA,AmBnEA,AFyEA,EftDI,AM4DA,AGDA,CXXD,AiBMA,CjBNC,AiBMA,CTMG,AM5CH,CN4CI,AM5CH,AH2CG,EQ9EA,CAAC,AFyET,CNKY,AMLD,ETMP,ASNS,CftDE,AFgDf,CEhDgB,CesDC,CHtCjB,AH2CkB,CG3CF,AH2CG,CT3Df,AKxDZ,AU8GQ,CftDqB,AKxD7B,AYqCQ,CAAoB,AFyEE,CHtCtB,AH2CuB,CG3CF,AH2CG,AMLA,CNKC,CQ9EzB,CjBmBI,AiBnBqB,AFyEG,CHtC5B,AH2C4B,EG3CD,AGsC3B,CEzE6B,CFyEI,CNKA,CG3CjC,AGsCmC,EHtCF,CGsCM,GHtCvC,AH2CuB,AMLvB,CNKkB,CG3CqB,AH2C3B,AMLgC,EEzEnB,AFyEqB,CEzEZ,CR8EY,CMLI,GHtClD,AGsCA,CNKmD,CGjHlB,AHiHrB,AML2C,CHpCvD,AHyCI,CMLqD,EEzEhC,CFyEmC,CEzEb,CAAtB,CAAzB,AFyEA;AnBUA,AUHC,AKjDD,AbqCA,AkBnDA,AEJI,ACSZ,AVyDS,AazDT,APoDQ,AQaJ,IzBnBI,AiBMA,CCzDA,ElBmDG,AkBnDH,ADyDG,AQaF,CZxDK,AbqCF,AiBMA,CnBSC,AuB7Db,AGAA,CNLQ,AEJQ,CAAC,AK0EJ,CAAC,C3BJG,CAAC,AepDE,AbqCZ,AoBvDY,AH6DZ,CCzDI,AEJA,AH6DO,AQaF,CPtEJ,AOsET,C3BJiB,AepDE,AOlBA,AH6DF,CnBSb,A2BIY,CAAC,C3BJG,AmBTA,CnBSC,AepDE,AI2CF,CQaD,E3BJI,AmBTpB,ECzDA,ADyDsB,ECzDN,ADyDQ,CnBSC,EmBTG,CCzD5B,CAAoB,AMK5B,CXSuB,AQTvB,AJoDQ,CJ3CwB,CfoDxB,EAAkC,AoBlElC,AOsEgC,C3BJG,AoBlEf,AOsEa,E3BJjC,AepD8B,AKd9B,CLc+B,CfoDQ,AoBlEf,EOsE5B,EAA6C,CAAC,EZxDlB,AYwD5B,CZxD4C,CAAzB,AYwD+B,CPtE9C,CLc2C,CKnEV,CLmElB,AKZf,ELY+C,EAAhC,EAAoC,GAApC,CAAf;AfqDI,AI/DA,AUDA,AjBsDJ,AkB1CA,AbqCA,AmBpEA,ACaQ,ACrDhB,AGAA,APkHQ,AQaA,CJ/HR,AGAA,CHAwC,AGAD,ExB4G/B,AmBpEA,AF0EA,EnBSI,CEfD,AiBMA,CJ3CG,AbqCF,AiBMA,AQaE,C9BdD,AwBzED,CrBmFI,AI/DA,AiBpBH,CjBoBI,CFgDT,CYjDW,AjBsDF,AyB5DI,AH6Db,CnBSY,AHVF,AkB1CE,AI2CD,CftDE,AKWN,CLXH,AesDS,CLvDT,AjBsDS,AkB1CE,AOlBE,ClBOD,APqDhB,AyB5DkB,CH6DF,AQaC,C3BJC,AHVF,AwBzEhB,AF0EiB,CnBSE,AHVF,AkB1CE,AM/BH,ACaK,CAAb,ACrDhB,AGAA,AC+H4B,CJ/H5B,AGAA,APkHQ,CtBDoB,AyB5DI,CtBsED,AqBnFvB,ACayB,AH6DH,CnBSE,AqBnFH,CrBmFE,AmBTC,CnBSN,AsBtEU,CtBsEhB,AHVa,CsBCG,GnBSG,AmBT/B,CJ3Ce,AM/Bf,CN+BwB,AOlBhB,AH6DyB,EG7DI,AH6DF,CnBSC,AsBtEE,AK0EF,C3BJxB,A2BIyB,C3BJjC,AsBtEI,AH6D8B,AQaF,CZxDN,AI2CS,AQavC,CZxD+B,AOlBW,EH6D1C,CtBDoB,CAAsB,AsBCE,EAAE,EJ3CtB,CAAgB,AI2CU,CtBDlD,AkB1Ce,ElB0CmC,AkB1CP,AI2C3C,CtBDmD,CkB1CpC,AI2CwC,CtBDvD,CkB1C+C,AI2CU,CtBDF,CkB1CxC,CI2C6C,CJ3CT,EI2CnD,CJ3Ce,CAAf;AfqDI,AI/DI,AM4DR,AI7DC,AjBsDG,AkB1CJ,ACKA,AdgCH,AoBvDe,ATkEZ,AMLA,GjBfJ,CQqBI,ASNA,CL7DA,CdsEI,AcrF6B,CJkF9B,AI3DH,AKqDG,CTMC,AKjDE,ACKA,AH2CA,AMLF,EnBSI,AsBtEI,CzB4DH,COrDK,EJ+DF,AepDA,AFgDA,AMLZ,CTMA,AYnEiB,AH6DN,CG7DO,CPkBH,AFgDA,AMLF,GnBSK,AI/DI,AesDN,CnBSG,AepDA,ACKA,AH2CA,AMLF,EftDS,CAAC,AYgBL,AH2CA,AMLtB,CnBSuB,CAAC,AHVpB,AyB5DQ,AH6DU,CnBSG,AHVA,AyB5DI,ClBOE,AYgBL,AH2C1B,AMLwB,CftDC,CJ+DG,CsBtEhB,AH6De,CftDS,APqDN,AyB5DI,AH6DN,EJ3Cb,CfoDkB,AepDT,AI2CxB,CG7DsC,KlBOb,AWWK,CfoDP,AepDQ,CfoDb,CAAN,AI/DoC,AYgB1B,CAAY,GhB+CY,AHVrB,AmBrCH,CnBqCyB,AyB5Db,CzB4DT,AkB1CD,ACKe,AMvBI,CzB4DvC,AkB1CoC,CAAzB,CfoDoC,AI/DM,APqDN,AmBrC7B,ChB+CV,AI/D8C,AWWf,CfoDvC,AI/DuD,AYgBf,CAAC,AMvBI,CAAC,ClBOU,AkBPT,ClBOM,CAAjD,AWWyC,CXZjC,AWYkC,AOlBE,ClBQ5C,AkBRyC,CNuBL,AMvBV,EzB4D9B,AmBrCkD,AMvBE,CAAC,CzB4DQ,EkB1CtB,AOlBiB,CPkBD,AOlBzB,CPkBS,AOlB/B,CNuBgC,CAAtB,CDLyC,CCKC,CDLjD,ClB0CX,CkB1C+D,EAApD,EAAwD,ACKjD,EAAmD,CDL1D,CAAf,ACKsB,CAAtB;AhBgDC,AUHJ,AI3DG,AjBoDC,AkB1CD,AKdA,ACjBA,ACaS,ATkET,AMLA,AQYA,GjBnFJ,CAhDJ,ASuHQ,CnBGoB,AUIxB,CVII,CmBXG,CJ3CG,AKdA,ACjBA,AR+EF,AMLA,AQYA,KZvDO,AI2CX,CE1EY,AF0ED,CIrDJ,AGAA,CXUO,AKdA,ADyDD,CE1EE,CR+ED,CO9DG,ADyDD,AQYhB,CZvDkB,AI2CD,CNKA,AcOA,EPrEI,ADyDrB,EAAsB,CNKA,CAAC,AMLC,CE1EE,CAAC,CF0EA,CAAC,CNKA,CEhDd,CAAS,AI2CvB,EAAiC,CE1ElB,CAAqB,AF0ED,CCzDlB,ACjBF,AR+EQ,CO9DM,CLcC,AKdA,ADyDQ,CJ3CP,AM/BS,AR+EF,AMLC,CE1EvC,AR+EsB,CAAtB,CMLA,ECzDoC,ADyDQ,CCzDP,CAAD,ADyDU,CJ3CvB,AKdO,CLcU,AKdA,CLc1B,AI2CmC,CAAC,CJ3CP,EI2C3C,CJ3Cc,CI2CyC,CJ3CP,AKdlB,CAAmB,ADyDQ,CJ3C3C,AKdgB,ELcsB,AI2CQ,CCzDP,ELcvC,AI2Cd,EJ3CyD,EKdE,CAAC,CAAD,CAAN,CAAU,QAAV,CAAmB,CAA3C,IAA8C,CAA1D,EAA6D,EAA7D,EAAiE,MAAjE,EAAyE,IAAzE,CAAjB;AhBIQ,AUCR,ACS2D,ACK3D,Ad+BH,AkBjDG,AChBA,ACYK,AH6DL,AQYI,IXnDJ,AGuCA,EJ5C2D,AYwDvD,CL7EA,AHiED,CCzDG,AChBA,AFyEF,CHvCA,CAAC,CDL2D,CXVlD,CWUoD,AOjBvD,GlBOO,AgBHJ,AChBA,CFyEd,AQYe,CAAC,CvBlEK,AgBHJ,AChBA,CLkCjB,CAAgB,EZfS,AgBHJ,AChBA,CMqFjB,CXnDJ,AWmDuB,CXnDF,KWmDjB,MvBlEiB,AiBnBJ,CjBmBgB,AiBnBJ,CLkC7B,AIlBiB,ChBGI,AgBHQ,CAAC,ChBGO,EAAE,AiBnBtB,EAAoB,CjBmBK,AgBHN,CAAC,ChBGhB,AgBHe,AChBnB,CDgBa,ChBGgB,AgBHN,AChBE,EjBmBrB,AiBnBJ,EjBmBiC,AiBnBJ,CjBmBzB,AiBnBJ,CjBmBT,AiBnBR,EDgB8B,CAAmB,CAAnB,GAAuB,MAAM,CAAC,CAAD,CAAN,CAAU,QAAV,CAAmB,CAA3C,IAA8C,CAA1D,EAA6D,EAA7D,EAAiE,MAAjE,EAAyE,IAAzE,CAAjB;AhBIQ,APqDR,AkB5CyD,AM5BzD,ACYQ,ATiER,AMHA,AQWC,IRXD,CJ9Cc,CAAd,CI8CG,CfvDK,AiBnBF,AF0EF,CtBFC,AgBKA,GT1DO,CAAC,APqDJ,AyB5DI,ATiEJ,ChBLC,AgBKA,AMHV,EE1Ec,CxBwED,AyB5DI,ATiEJ,ChBLb,AyB5DkB,ATiElB,CQ7EiB,CxBwED,AgBKA,ChBLC,AyB5DI,ATiEJ,CSjET,ClBOA,AiBnBa,CjBmBG,APqDJ,AyB5DI,CAAC,ATiEJ,GT1Db,AkBPoB,ClBOC,APqDJ,CgBKC,GT1DO,AiBnBhB,CAAQ,CCYjB,EAA6B,ATiErC,CSjEsC,CTiEH,CQ7ElB,ACYT,ATiE4B,EQ7EH,ACYS,ATiE1C,EAAwC,ChBLpB,AwBxEH,CjBmBY,APqDa,COrDJ,AiBnBA,EAArB,CjBmBY,CiBnBa,CjBmBC,APqD3C,AwBxEiB,CjBmBY,AiBnB7B,CxBwEkD,COrDJ,APqDK,EOrDtB,APqD7B,COrDQ,CPqD+C,CACnD;AGUJ,AI/DQ,AM2DZ,AbLK,AkB7CD,ACMA,Ad8BJ,AkBjDI,ACfA,ACYY,ATiER,AMHJ,AQWH,EjBPD,ARdA,EkBjDI,AD2DA,CtB9BJ,CA+BI,AgBEI,CMHD,CnBQG,AI/DE,AWSF,ACMA,AKlCA,AF0EF,CjBVR,AkBjDQ,ClBiDR,AkBjDS,AEHO,ElBOA,AM2DhB,ASJI,CfvDa,AM2DjB,AKlDe,CfsDC,AgBhDA,CMtBK,CPgBH,AM5BA,ACYI,ATiEJ,CbKC,AgBhDA,AH2CA,CAAD,CXblB,AmBhEqB,AR6Eb,CEjDc,AboCtB,AkBjDI,CpBmEmB,AgBhDA,AInBH,CV+DpB,AGDwB,CT1DZ,AM2DZ,AW9EyB,AR6EA,CbKC,AI/DE,CgBJxB,CAAqB,AEHT,CAAiB,CtBsEd,AI/DP,AF6CZ,CE7CiC,AS0DF,EHC/B,ARdA,AoBpDgB,CtBsEkB,AsBtEI,ATiEH,CT1DE,AWSnB,CLkDlB,AKlD2B,ACMR,AInBf,CJmBwB,ChBgDU,AoBnEH,AEHnB,CtBsEuB,AaLC,CAAhB,GbKiB,AetDP,ACMA,Ad8BzB,AmBhEY,CN4Bc,ACMA,AKlCA,CR6EY,CHCtC,AU/DL,AP8DI,CXbR,CFkB8C,AI/Db,AgBJY,ChBIH,AF6ClB,CQcxB,AW9EqB,EX8EG,AKlDG,ACMC,AInBqB,ACfN,CN4BC,ACMA,CDN1B,ACMC,ChBgDmB,AqBlFjB,CrBkFa,AetDa,ACMA,AKlC3C,CjBmB6B,CYed,ChBgDsC,AI/DL,AWSlC,CfsDgB,AI/DD,AYekB,CDNC,CXTG,AYepC,ChBgD0C,AI9D7C,AWQE,CfsDC,AgBhDoC,ChBgDnD,AetDoD,ECMrC,CDND,ACMd,AInByC,CAAY,CLaI,IKbC,CAAC,QAAN,CAAe,CAA3B,EAA8B,GAA9B,EAAmC,UAAnC,EAA+C,IAA/C,EAAqD,EAArD,CAAzC,EA1DiC,CA4DjC;ApBkEA,AI/Da,AM2Db,AI3DA,ACQ2D,ACO3D,Ad8BA,AmB/DA,ACWS,ATiER,AMFD,IE1EA,CRgEoB,CEtCuC,AFmD3D,EbII,AUJA,AI3DE,AEeA,CGyCD,CfxDQ,CAAC,AWQkD,AbqCzD,CAAC,AmB/DA,CjBkBQ,AWQkD,AM1BzD,CX6EC,AI3DE,AEeA,Ed8BA,CE7CQ,AM2DP,AI3DE,AEeA,Ad8BF,AiBWb,CnBOc,AI/DO,AF6CT,AiBWE,CTGd,ARdQ,CY7CR,Cd+DiB,AgBhDE,AGyCnB,EjBXmB,AmB/DnB,AFsCiD,CEtC7B,AF4EpB,EnBKsB,AI/DN,CJ+DO,AI/DO,AF6CP,CE7CP,AF6CQ,AmB/DxB,CnB+DuB,AmB/DE,CnB+DlB,CE7C2B,AF6ClC,CFkB4B,AI/DhB,CiBlBiB,CLiCd,CAAS,IhBgDD,EgBhDO,ChBgDQ,AgBhDP,ChBgDT,CAAtB,EqBjFyB,CAAS,GLiCV,CAAgB,CAAzB,EAA4B,CKjClB,CLiCV,CKjC6B,CLiCG,AKjCtB,ELiCV,AKjCgC,CAC3C,CLgC+C,GAApC,CAAf;AZfqC,AUErC,ACMyD,ACQzD,Ad8BH,AmB/DQ,ACWA,AKwET,EAAA,CzBtBA,EapCkB,CAAd,AMzBK,CAAC,CPmBA,AEcA,CKjCE,CjBiB6B,CAAC,EAAE,CYgB5B,CKjCE,CPmBA,CVF8B,AYgB7B,CZhB8B,AiBjB5B,CPmBA,AOnBb,ELiCe,EFdE,AagEJ,CAAC,EvBlEsB,CAAc,CAAd,GAAkB,GYgB3C,AWkDE,CXlDO,AWkD5B,EbhEqB,CAAY,GEcC,CAAC,EFdd,EAAoB,GAApB,CEcO,CFdkB,AEcF,CAAzB,CFdE,CEc0B,CFdG,CAA7B,CAAjB,GEciD,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAhD,EAAoD,EAApD,EAAwD,GAAxD,CAAf;AhBgDA,AIhEY,AM4DZ,AIzDA,AjBsDA,AmBxCA,AInBA,ACfoB,ACYnB,AHgED,AQQP,IRRO,EE5EoB,CAAC,AF4ElB,CLxDG,AEcA,AInBA,AD6DF,CnBKC,AIjE8C,AM6D9C,AbHA,AwB1EkB,EjBkBX,EJ+DH,AUJA,AM3CE,AInBA,CpBkED,AUJA,EIzDI,AEcA,AInBA,CpBkED,AUJA,ASDb,CnBKA,AUJA,CIzDiB,Cd6DD,AUJA,AbHhB,AmBxCkB,AInBA,ACfgB,AF4ElB,CnBKC,AUJA,AW7EkB,EPoBd,AjBsDF,CaGC,CVIC,CmBLC,CtBFC,CAAC,CaGC,AW7EF,AF4EE,CnBKC,AqBjFkB,CxB0EzB,AwB1EI,EPoBN,AjBsDjB,AmBxCc,AInBA,CNKW,AEcF,AInBA,ACfyB,EX6EhD,CVIA,AoBlEc,CV8DoB,ASDZ,CnBKa,AUJA,AU9DP,CpBkEQ,Ac7DnB,CJyDjB,AM3C8B,AG0CO,CnBKrC,Ac7DiC,AEcF,AInBjB,CV8DyB,CVIC,AoBlEP,CNKhB,CMLH,CNKwB,AKwDtC,CC7DqC,CNKpB,CEcM,CFdmB,AEcF,CFdvB,AEcH,CFdd,CEc2C,GAA7B,EAAkC,CInBX,CJmBvB,EAAsC,GAAtC,CAAd;AhBgDI,AIhES,AM4DT,AIzDJ,AjBsDH,AkBjDG,ACSA,Ad4BH,AkB/CO,AChBA,AR6EJ,AMAA,GtBpCJ,CkBfI,AImDA,CE9E+C,CrBmF3C,AUJA,CW7EA,AF4ED,CLxDG,AEcA,AG0CF,CJnDA,CXRS,AWQR,AKVK,ChBEI,AgBFH,AP6DJ,CHCG,CN5DM,AM4DL,AM3CA,CInBG,EpBkEA,Ac7DA,AEcA,ChB+CC,AIhEK,AM4DhB,ASDJ,CnBKc,AIhEO,AM4DL,CVIZ,AUJa,AIzDA,CCKjB,ACSkB,AInBE,CLUJ,AKVK,AP6DrB,CbKoB,CAAC,AUJA,AIzDA,ECKrB,CXRgB,AWQK,CXRS,CAAd,AM4DU,CVIC,AoBlEE,CAAC,ChBEI,CJgEH,AexD/B,CXRY,AM4DS,AM3CP,CN2CkB,AKpDH,ACSN,GhB+Ca,CAAhB,AoBlEC,CV8DjB,CKpDJ,AKVoB,CNKH,AEca,AInB1B,CpBkEsC,Ac7DX,ACKM,ACSN,ChB+C3B,Kc7Da,ACKjB,EDLuC,ACKM,ACStB,CAAiB,CAA1B,CFdG,CAAjB,AEc2C,CDT3C,EAAoD,ACStC,EAAkC,EAAlC,CDTd,CCSoD,CDhFnB,CAyEjC,MCOc,CAAd;AhBgDC,AIjEqC,AM6DrC,AIxDD,AZyCR,AkB/CY,AChBC,ACcL,AT+DH,AMAG,AQOR,GdtBI,CCxCI,AKuDA,EE7EK,CAAC,AF6EH,CAAC,CjBdZ,AmB/DgB,ACcH,ClBGiC,AgBD5B,AOoER,CvBnEqC,AgBD5B,CNMH,CVLiC,AUKhC,AQRA,CFEK,AEFJ,AH+DV,AQSR,CNtFsB,AF6EH,CjBdnB,CE9CqD,AkBHhC,AH+DA,Cf5DiC,AiBjB7B,ACcjB,EFEoB,AChBhB,ACcY,AH+DA,CC7DK,AEFJ,ERQjB,AKuDA,CLvDoB,AQRA,CH+DC,Cf5DoB,Ae4DzC,Cf5DuD,CAAd,AUKzC,AQRsB,CRQG,AMNI,CAAC,ChBC6B,EUK9B,EQR7B,EAA+B,CFEV,AEFW,EFEZ,AEFpB,CFEI,CEFgC,IRQX,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAC3C;AVNQ,AUMP,AjBqDT,AmBzCI,AdUR,AkB5BY,ACjBiB,ACejB,AH+DJ,CjBjCR,CL+BI,AK/BkB,EcVd,AG2CA,ELvDK,AZsBb,AmB7C6B,CPuBf,AZsBd,AmB7C8B,AF8EnB,CAAC,Cf/D+C,AUQ3C,AEYJ,AKnCoB,CLmCnB,AIlBK,AEFA,ClBGE,CgBDA,CvB2DhB,CAAA,AsBEI,CLvDc,AMNC,AD6DJ,CG/DK,CH+DH,CLvDI,CAAb,AQRe,CNoBnB,AKnCmC,AF8EnB,CH3CA,AKnCoB,CDiBd,CvB2D1B,AuB3D2B,AEFA,AH+DvB,CtBFJ,CmBzCI,AG2CqB,CH3CA,CG2CE,CC7DR,CAAc,ACjBL,CAAqB,AF8EnB,CE9EF,AF8EG,CH3C3B,CIlBe,CJkBc,AIlBK,ACjBe,AF8EjD,CC7De,CAAX,GvB2DR,CmBzCI,CMpBmB,CzB6DvB,AmBzCyC,AMpBJ,MNoBjC,AMpBuC,ENoBM,EnByCjC,CyB7D8B,CAAvB,CNoBnB,CMpB6C,CNoBO,EMpBjC,EzB6DvB,AyB7DsD,CNoBlD,CnB0CA,AyB9DmB,CN7Dc,AM6D7B,CNsBJ,UnBuCJ,EAEI,UAFJ,EAE6B;AGKzB,AIjEa,AM6Db,AIxDoB,AjBwDpB,AkBnDA,AKVI,AClBA,AR+ER,AMAI,AQQR,EdRI,EEnDI,AImDA,CEjF+C,CPyB3B,CAAC,AOtBjB,AF8ED,CnBIC,AHJA,AsBAA,CLxDmB,ACKnB,AY2DH,CvBrEY,AWUR,AKVK,ChBAI,AM6DP,CGAX,CbIa,AIjEO,AP6DP,AuB7DI,AP6DjB,CMAI,CAAW,CtBAC,AuB7DI,ChBAI,AM6DpB,ASAa,Cf7DQ,AgBAH,ED6DF,CnBIZ,AHJa,AuB7DK,CpBiEJ,AoBjEK,AP6D3B,CbIQ,AaJR,AMAI,EC7DwB,AD6DH,Cf7DL,AWUhB,AKVkB,ChBAY,AWUR,AImDC,CnBIC,AIjER,CgBAc,AOqEtC,CPrEuC,AD6DL,AQQJ,C3BJlB,AIjE8B,AP6DtB,AkBnDZ,AImD2B,CtBAC,AkBnDD,CXVf,AgBAoB,CAA5B,AD6DJ,CnBI+B,AaJnC,AcQJ,EAA4D,CdRxD,ChBAgB,AkBnDZ,CfuDoC,AHJA,CkBnDA,MfuDL,CevD/B,ClBmDY,CAAZ,AkBnD6C,AFmDjD,ChBD6B,CGKuB,AHJA,CGIhD,CevDA,CfuDmD,CevDA,IAAnD,EfuD0D,AevDD,CfuDE,GAAR,AevDnD,CfuD+D,cAAZ,EAA4B,UAA5B,EAAwC,YAAxC,EAAsD,IAAtD;AACnD,AIlEsC,AM8DzC,AIzDO,AMJA,AClBC,ACeD,ATgEJ,AMAA,AQQJ,GjBdA,CSMI,CL1D+C,COrB1C,AMuFL,CbhEI,AOvBE,AF+EH,CAAC,CE/EI,CjBiB8B,AgBC5B,AEHF,CtBoED,AIlEgC,AkBF9B,AKwEJ,CRRL,Cf9DyC,CkBF7B,CDfE,CMuFJ,EPrEQ,AClBD,EAAb,AMuFR,C3BJI,AIlEiD,AgBC3B,AEHlB,ClBE8C,AgBC3B,AOqEP,CLxEK,EFGK,GAAG,EhBDY,AgBCnB,ChBDqC,CAAlB,EgBCN,ChBD4B,CgBC1C,GAAoB,CAArC;ApBkEP,AInEe,AUMP,AjBwDL,AmB1CA,AIlBI,ACnBiB,ACgBb,ATgER,AMAA,AQQJ,G3BpBA,CgB/BI,AG2CA,ELzDK,AOvBgB,AMwFnB,CbjEI,AOvBgB,AFgFnB,CtBDC,AyB/DI,AHgEJ,CflE+C,AUS3C,AjBwDH,AmB1CD,AKrCoB,ARgFnB,CG3CA,AWmDC,CvBtEM,EgBCD,AOqEF,CLxEK,ATgEd,CCzDc,AQPC,ATgEJ,EQhFqB,AFgFhC,CLzDiB,AOvBgB,CRgFjC,CCzDI,CjBwDa,CAAC,AgBCA,GShEV,CNqBR,AIlBsB,ACnBE,ACgBE,CzB+DT,AmB1CK,AKrCoB,ARgFnB,ChBDvB,AwB/EwB,ExB+EE,AyB/DlB,CNqBR,AKrC8C,ACgBf,CNqBJ,EIlBhB,CEHwB,ATgEjB,CAAc,EO7DI,CJkBpC,EAAoC,AIlBG,AP6DF,KO7DO,EJkB5C,AMrB+B,CAAS,CNqBK,CH2Cb,CAAgB,EG3ChD,AIlBoC,CEHU,ATgEd,CG3CmB,AMrBJ,ATgEK,CO7DG,AEHT,CAAf,CFGK,CJkBpC,AMrBmD,CAApB,CNqB0B,AIlBG,AEHpD,GFGG,CJkBX,AIlBI,AP6DgD,EG3CW,EH2CX,CcQxD,CdR4D,IG3CxD;AZnBa,AM+DjB,AI1DyB,AjByDjB,AkBpDP,AboCL,AkB5CS,ACpBG,ACiBC,AT+DuD,AMC5D,AQQJ,EjBRA,ERjBJ,AiBiBQ,CCpEc,AChBiC,CP0B1B,AjByDjB,AuBnEJ,AO4EE,CblEoB,AOtBlB,ACcA,AHkED,CAAC,CL1DoB,CVLX,AF8CrB,CE9CsB,CM+DlB,AiBQY,CvBvEQ,AM+DpB,AYhEe,AT+DkD,CMC7D,CAAW,AQQA,EdTsD,AMCpD,CtBDG,CAAC,CgBAmD,AMCpD,AQQA,CvBvEQ,Ae+DP,AQQA,CvBvEQ,AM+D7B,CAAA,CbDoB,AgBAwD,AMCxE,CtBDI,AgBAqE,CMCnD,CAAtB,CtBD0B,AgBA0C,AcSzD,CAAc,CvBvET,AS8DiD,AcStD,CvBvEuB,CAAtB,AP8DR,A8BSwB,C9BVF,AgBCuD,ChBAjD,CaCpC,GAAA,AGDgE,YHChE,EiBQe,CAAsC,IAAtC,CAAf;A3BHA,AIpEyC,AUKjC,AjB0DA,AKjBZ,AkB3CQ,ACpBK,ACiBG,AT8D+E,AMEvF,EnBIJ,EmBJI,CL7D+C,AD2Df,CQ/E3B,AR+Ea,CbMtB,Ac9DQ,AOvBE,AR+EN,AMEG,CnBIP,AoBjEU,AEHE,AHgEJ,CEjFI,CjBiB6B,CAAC,EAAE,CkBA1B,AHgEd,CEjFI,ACiBW,AHgEJ,EnBIf,AmBJiB,CnBIjB,EoBjEsB,AD6DF,CfhEgC,AegE/B,CfhEgC,CgBG5B,CD6DrB,CGhEQ,CAAkB,AHgEJ,CC7DG,CD6DD,EnBI5B,AIpE4C,AkBAhC,ClBAkD,AkBA3B,AHgEJ,CfhEa,AegEZ,CnBIhC,EIpEkE,AkBA3B,AHgEnC,KC7DqB,CAAS,GAAT,CpBiEzB,CoBjEuC,EEHJ,CFGV,AEHmB,EFGA,EAAnB,EAAuB,AEHE,CAAC,OAAO,GAAC,CAAT,CAAf,EAA4B,CAAC,EFGvC,CAArB,AEH+D,OAAJ,GAAc,CAA1C,CAAvB;AtBqER,AIrEY,AUMP,AjB0DD,AkBrDZ,ACSK,Ad0BL,AmB/DwB,ACkBX,AT8DR,AMEG,AQOJ,GdZA,CMKI,EL3DK,AOvBW,CPuBV,AOvBW,AFkFd,AQOF,CRPG,CfrE+C,AUU3C,ACKhB,AM5B2B,CjBaU,AFkDrC,CyB0Ba,CvBvEM,AuBuEL,ERPN,CL3Dc,AK2DH,AQOF,CvB5EoB,AFkDrC,AyB0BI,CvB5EY,AiBbmB,AFkFd,CL3DI,AZwCzB,AmB/DoC,AMyFhB,CAAC,CblET,AK2DY,CAAC,CQOD,ERPhB,EElFmB,AFkFG,CElFe,CAAlB,AFkFK,AQOF,CAAC,CZ7D/B,CM5BiD,AFkFd,CAAC,GAA5B,AQOJ,EAAmC,CAAC,EAApC,EAAwC;A3BFpC,AInEQ,AM6DR,AI1DqB,ACxE7B,AbgHqB,AkB1Cb,ACrBI,AFmFJ,AQOA,CZ3IR,CAAoC,AbgHf,EkB1Cb,AD8DA,CEvF+C,CP2B1B,AO3BI,CP2BH,AO3BtB,AFuFG,CnBIC,AUNA,ASEA,AQOE,CjBTF,AI1DoB,AMFpB,CAAC,CV4DD,ARlBS,CE3CC,AF2CD,AiBoBb,AQOU,E3BHA,AUNN,CiBSS,CvBtEK,CJmEL,CExBA,CFwBb,AInEqB,AM6DZ,CRlBI,AkB1Cb,CAAgB,CLtExB,CXqEiC,AWrEjC,AY2I6B,CAAC,CPrEtB,ClB0Ca,AkB1CQ,ClB0CR,EQkBT,CAAgB,CAAhB,AU5DJ,CV4DI,CU5DwB,IhBDP,AuBsER,CvBtEoB,AM6DX,AiBSc,EvBtED,EM6D/B,AiBSS,CvBtEyB,AuBsEtC,EvBtEqB,AgBCrB,CV4DsB,CN7DoB,CM6DpB,CN7DsB,GAAG,CM6DzB,CN7DD,EAA8B,EAA9B,AM6DC,CAAlB,CN7DmD,CAAlC,CAAb,AM6Dc,KAAA,CAAlB,GAAkB,EAAA,CAAE,GAAF,EAAtB,EAA+B;AN5DvB,AM6DJ,AI3DA,AjB2DA,AmB5CZ,AKpCQ,ACiBI,AT8DZ,AMIQ,AQMA,INzFA,AFmFA,AQMA,CbvE+C,CQD3C,CRKA,AK6DD,CfhEK,AegEJ,AQMA,CXrDZ,AH2CA,AcUa,C9BTG,CaAC,CN7DG,AiBnBJ,CjBmBK,AiBnBJ,CFmFT,CAAW,CTHP,AY/DU,AHkEF,CTHG,AY/DA,CKwEf,CdVR,ChBC0B,CyB/Dd,AHkEa,AQMA,CjBTb,AY/DgB,ClBEZ,AP6Da,AwBhFrB,CjBmBwB,AiBnBJ,CXgFG,AbAnB,A8BSJ,CjBTwB,EN7DhB,AiBnBR,ACiBI,ClBEyB,AiBnBJ,AFmFzB,ETH6B,EN7DI,AiBnBJ,ELoCrC,CN4CgC,CAAW,KAAX,GAAmB,CN7Dd,AM6DN,AWhFE,CjBmBa,AiBnBJ,GjBmBL,AM6DmB,EN7DL,CAAd,EAAiB,AM6DO,EN7DxB,CAArB,AiBnBiB,EAAsB,CAAtB,CXgFrB,AWhFJ;ArBsFA,AIlEQ,AM6DP,AI3DI,AEzEb,AdiHI,AmB7DI,ACiBC,AT7ET,AM+IQ,AQMA,CX7IR,AHRA,CGQyC,CHRzC,CQ4DQ,AFmFA,CTLA,CIzDK,CAAC,AK8DH,CfhEK,AegEJ,AQME,C3BJD,AchEG,EJ2DD,ARnBX,CE1CgB,AiBnBJ,AFmFR,AQMU,C3BJD,AIlEI,AiBnBJ,CrBqFC,CchEN,ACMG,AIwDI,AQME,E3BJA,AExBjB,CFwBI,AExBQ,CAAZ,AiBsBmB,CnBEC,AmBFA,CnBEC,AExBE,CcjH3B,AdiHI,CE1CY,AYvEhB,AKoDQ,AMyFqB,CvBtEG,AF0CM,AmB7DV,AMyFE,C3BJD,AmBFV,CAAW,EfhEd,AF0CZ,AmB7DI,CrBqFuB,AIlEM,AiBnBJ,CnB6DmB,CiBsBjB,EfhEM,AiBnBJ,CrBqFD,CmBFN,CAAU,CjBtBpC,AiBsB0B,AQMT,CAAuB,CzB5BuB,CiBsBvB,CnBEpC,C2BIa,C3BJwB,AmBF1B,AQMX,C3BJsC,EAAtC,AIlE6B,AiBnBJ,CjBmBa,AiBnBJ,AFmFS,CnBED,OIlEb,AiBnBJ,EjBmBuB,AiBnBJ,CjBmBf,AiBnBJ,CAAzB,CjBmBmD,CACvC,Ae+DZ;AnBGI,AIlES,AM6DT,AI5DY,AjB2DZ,AKnBR,AkB1CC,AClBG,AFmFA,AQMA,INzFA,AFmFA,AQMA,EbrEgB,CAAC,AK+Dd,CjBvBP,AiBuBQ,AQMA,CbrEe,AaqEd,C3BJK,AIlEG,CAAC,AM6DL,AbDA,CwB/ED,CjBmBQ,AFyCpB,AmB5Da,CrBqFK,CHND,CaCT,AbDU,AKlBd,CFwBiB,AIlEG,AM6DL,ASGf,CfhEqB,AuBsErB,C9BViB,CAAb,AsBIY,CQMC,C3BJK,AULlB,AbDgB,AKlBpB,CLkBqB,AKlBrB,AmB7DA,CAAoB,CXgFG,AiBSvB,CvBtEgB,AM6DQ,AbDA,AsBIF,CfhEQ,AM6D1B,ARnBJ,CE1CgB,AF0ChB,AmB7DA,CAAyB,AFmFA,EfhES,CJkEjB,AIlEL,AF0CZ,CFwBiC,AqBrFJ,CrBqFZ,AExBX,CFwBF,AHN6B,AKlBjC,CLkBkC,CKlBzB,CAAT,AiBsBsB,EjBtBV,CiBsByB,GjBtBrC,ELkBwB,AKlBN,AmB7DO,CxB+EoB,AwB/EX,AFmFlC,MtBJI,AKlBJ,ELkBqD,AKlB1B,AmB7DF,CxB+E6B,AKlBtD,CmB7D4C,CxB+ExC,AwB/EqB,CAAzB,CxB+E0D,CKlB7B,IADjC;AF0BQ,AInEiC,AM8DpC,AI7DG,AjB4DI,AyB7DR,AHiEA,AQMA,IRNA,AQMA,Cb1E+C,CdsE3C,ActEqB,CAAzB,AKoEG,CGjEG,AHiEF,EfjEiC,AuBuE/B,CvBvEgC,AuBuE/B,C3BJG,AHNI,A8BUR,C3BJK,AInE6B,AuBuExC,CAAU,CXtDH,AH2CA,ChBCW,AyB7DJ,CtBmEV,AInEwC,AeiE5C,CnBEgB,AInE6B,CP6DxB,AyB7DJ,CHiED,EnBEI,CsBnEC,EtBmEE,A2BIvB,CvBvEwC,AuBuElB,CvBvEgC,CAAd,AP6DV,AsBI9B,CnBE2B,AHNI,CGMH,A2BI5B,CvBvE0D,EJmEnC,EAAH,GAAgB,CHNf,AyB7DJ,CzB6DyB,AyB7Db,CzB6DR,CAAb,CGMJ,AsBnEa,EAAiB,EAAjB,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,EAApC,CAAjB;AtBoEC,AIpEW,AM+Df,AI5DG,AZwCA,AkB3CR,AClBQ,ACmBA,AHiEA,AQMA,GjBfJ,CItDI,AZwCA,AmB7DA,AFoFA,AQMA,GRNG,CGjEG,AHiEF,CfnE+C,AF4C/C,AkB3CZ,AClBY,CnB6DC,AmB7DA,AM0FC,CvBvEM,AuBuEL,CbrEC,AaqEF,CbrEG,AaqET,CAAU,EzB7BV,AoB1Cc,GpB0CA,AoB1CG,CDnBjB,AFoFA,CEpFgB,CnB6DhB,CYxCA,AQFqB,AHiEF,CL/DC,COrBpB,AM0FA,CN1FqB,AM0FC,CPxE9B,CNGQ,CAAyB,CaqEzB,CRNA,EL/D6B,COrB7B,EAA+B,GCmBd,CAAY,GAAZ,CDnBjB,CCmBkC,CRET,AOrBgB,CPqBP,AQFjB,EAAqB,KDnBtC,CCmBiB,EAA6B,CRErB,EAAsB,CAAtB,CAAzB,AQFiB,EAAoC,EAApC,CAAjB;AlBAa,AUGb,AjB0DQ,AuBvIhB,AE2EQ,AHiEA,AQMH,CPlJL,CAAiC,EN6EzB,AK+DA,GAAG,CGjEG,AHiEF,EflES,CAAC,CUGN,AjB0DI,CO7DI,AUGP,GjB0DD,AsBKR,CflEoB,AekEP,CflEQ,AP6DH,GyB5DC,CF3E3B,AD4I0B,CL/DlB,AM7ER,CN6E4B,AQFE,ElBDN,CAAc,CAAd,AUGhB,AQF0B,AHiE1B,CL/DyB,CK+DC,CflEQ,AekElC,EflEY,AUGiB,AK+DA,CAA7B,UGjEsB,CAAY,CRET,CAAS,CQFZ,EAAiB,GAAjB,EREG,AQFmB,EREA,CAAnB,CAAzB,MQFsB,EAAkC,KAAlC,EAAyC,EAAzC,CAAtB;AtBmEA,AIpEsC,AM+D9C,AI3DQ,AjB0DY,AKnBf,AmB7DG,AFsFA,AQKP,I3BLO,AchEA,AOtBA,AFsFA,GAAG,CAAC,CTLZ,AWjFY,CjBkBkC,AiBlBjC,CrBsFE,AIpEgC,CJoE/B,AchEA,CVJiC,AUIhC,CjB0DS,CGMlB,AmBAA,CnBAY,AHNQ,CO9DyB,CAAC,CM+DtD,AbD+B,IiB1DvB,AjB0D2B,CiB1DP,AjB0DQ,EO9Da,AiBlBzC,CjBkBuD,AiBlBjC,CjBkBmB,AUIzC,CAAyB,CdgEzB,CIpE2D,AiBlB3D,CrBsF4B,AqBtFD,CPsBE,EjB0DjB,GGMsB,CAAC,CqBtFnC,EA5CiC,CA8CjC,ErBoFA,CchEyB,CAAS,QAAT,EAAmB,CAAnB,CAAzB;AdiEA,AIrEY,AM/EpB,AWgEQ,ACiBA,AHmEH,CTpJL,EAAA,ASyFI,EGRI,EAAA,EtBmEK,AIvE8C,CkBInD,ClBDY,GJoEZ,CAAW,AoBpEJ,AECH,CAAC,GtBmEL,GAAkB,IsBnElB,CtBmEuB,CsBnEP,IAAhB,CAAoB,EtBmEF,CAAc,EsBnEhC,CAAoB,EAApB,CtBmEkB,CAAlB,AsBnEoB,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAI,UAAJ,CAAA,EAAmB,MAAnB,CAAA,EAA8B,MAA9B,CAAA,EAAyC,MAAzC,CAApB;AtBoEH,AIrEgB,AUIb,AjB0DY,AKnBhB,AyB8BJ,EzB9BI,CFiBA,CcxDI,IZuCJ,CYvCQ,AZuCR,CE3CiB,AUIR,CVJS,EAAE,CP8DA,CAAC,EO9DG,AP8DR,CO9DS,AF2CzB,CLmByB,AKnBzB,CYvCI,AaqEY,CbrEI,AaqEH,IbrEb,CVJgB,AUIK,CVJS,AF2ClC,CE3CoB,CuByEK,CzB9BzB,AyB8B0B,CvBzEY,EAAtB,CUIZ,EAA+B,IZuC1B,GAAT,CYvCI,AaqEa,CzB9BqB,AyB8BG,CbrEI,QAAzC,AaqEa,CAAD,CAApB;AvBzE8C,AP+DtB,AKnBhB,AoB1CA,AHkEH,IGlEG,IpB0CM,CAAC,AoB1CH,ClBFkC,AkBEjC,ClBFkC,CP+DvB,AKnBN,CE5C+B,EMgElC,ERpBQ,GoB1Cf,ClBFiD,AF4CvC,AoB1CM,ClBFkC,AP+DxB,AKnBN,CLmBO,AKnB3B,EoB1CA,CAAqB,CzB6DL,CAAgB,EO/DS,CAAkB,CAAlB,CP+DzB,CyB7DhB,ClBF+D,AP8D1C,CACmB,AyB7DT,QAA/B,EAAyC,aAAzC;AtBoER,AItEoB,AUKZ,AjB2Da,AKnBb,AmB5DA,AFsFR,AQIA,IbtEQ,AZwCA,GAAG,CAAC,AmB5DE,CrBqFd,AIzE2D,AUQ/C,AKkEZ,AQIS,CbtEI,CVJO,AP6DA,GGQpB,E2BKA,C9BX2B,AKnBnB,AmB5De,AFsFvB,AQIiB,EAAjB,CN1F0B,CM0FE,GN1FE,EPoBtB,CAAsB,IAAtB,CAA2B,MOpBT,CAAU,CPoB5B,EA3CiC,CA6CjC,EOtBkC,GAAG,EAAnB,EAAuB,GAAvB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAAlB;ArBnER,AImFqB,AUOb,AjByDgB,AKnBhB,AmB5DA,ACiBA,AHjFR,AQ0JI,C3B9JJ,AmBIA,EnBJA,AmBIA,CjB4HQ,AmB5DA,CCiBA,CKyEA,CzB9BG,AoB3CH,CpB2CI,AyB8BR,EvB3EiB,AkBEb,AKyEI,CvB3EU,EAAE,AiBfP,CnB4DT,AmB5DU,CnB4DC,AoB3CP,CpB2CQ,AoB3CP,CzB8DgB,EKnBN,EE7CS,CAAC,AF6CzB,EAAoB,AmB5DpB,CnB4DqB,AmB5DA,GnB4DG,CAAC,AmB5DzB,CjBegB,AiBfU,CjBeQ,CAAtB,APgEI,AKnBhB,AoB3CA,CzB8DqC,CwB/EP,ACiBR,GzB8DmB,CAAC,AyB9D1C,CAA0B,KAA1B,CAA0B,EDjBA,ACiB1B,CDjBmC,CxB+EnB,AyB9Dc,EzB8DyB,QwB/E7B,ACiB1B,EDjBgD,CAAtB,CxB+EV,CwB/EmC,CxB+EkB,AwB9EjE,UxB8EY,EADG,CAIH;AOnEqB,AUQrC,AjB4DgB,AKtBhB,AmB5DK,AM0FL,IzB9BA,AyB8BA,EN1FK,CnB4DF,AmB5DG,CnB4DF,CmB5DI,CjBc6B,CAAC,CuB4E9B,CvB5EgC,AuB4E/B,IAAT,CN1FiB,AM0FH,CN1FI,EjBc8B,CAAC,CuB4EjD,CzB9BA,AyB8BoB,CzB9BC,CAAC,CmB5Dd,CAAmB,CnB4DF,AmB5DrB,CjBcoC,CAAkB,CAAlB,AF8CxC,EAA8B,CE9CgC,AF8C/B,GAAG,CyB8BlC,EzB9BA,CyB8BsC,CzB9BC,CAAvC,EAA0C,CAAC,GAAG,CyB8B9C,EzB9BA;AE9CY,APqEI,AKtBhB,AmB7D8B,AFoFrC,AQOO,ERLR,EjBzBQ,AyB8BA,EN3F8B,CnB6D3B,AmB7D4B,CnB6D3B,CEnD+C,AiBVlB,CjBUJ,EAKlB,AuB4EH,CAAC,E3BNF,CI3EsB,CAArB,AuBiFR,CN3F0C,AM2F5B,CN3F6B,IM2F3C,CzB9BA,AyB8BoB,CzB9BC,CAAC,CmB7DW,CAAmB,CnB6D3B,AmB7DQ,AM2FjC,CzB9B0B,EmB7D8B,AM2F5B,CzB9B5B,EAA+B,CAAC,GAAG,EyB8BnC,CzB9BA,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,GAAvD;AE5CQ,AF6CR,AmB9DI,ACiBP,AK2EG,IzB9BA,AyB8BA,CN7FmD,EnB+DhD,AmB7DC,CnB6DA,EyB8BE,EvB3EQ,CuB2EL,EvB3EQ,EuB2EjB,CvB3EoB,IAAI,EF6CxB,CAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,EE7CT,CAAW,AF6CC,CAAC,CE7CA,EF6CjC,CE7CoC,CF6CE,CE7ClB,AF6CmB,EE7CC,CF6CE,CE7CA,EF6C1C,CE7C6C,CF6CE,CE7C3B,AF6C4B,EE7CC,CF6CE,CE7C/B,AF6CgC,EE7CC,CAAjC,AF6CpB,CE7CQ;AACA,AUKR,AjB6DgB,AKrBhB,AmB9DK,AFsFb,AQMK,GAJD,CzB1BI,AiBwBR,EEtFa,CnB8DF,AmB9DG,CjBiBE,AUKF,AZwCF,CmB9DI,AM4FL,EvB3EQ,CAAC,GiBjBE,CxBmFQ,AsBG9B,CLhEuB,AZwCf,CmB9DiB,EPsBC,AOtBd,EjBiBI,CAAe,APkEM,CiB7DP,EjB6DU,COlExB,CAAoB,GPkES,COlEL,MUKd,CAAU,GAAV,EAAe,CVLL,CAAS,CUKnB,AjB6Dc,CAAsB,COlE1B,AUKU,EVLI,CAAd,CUKY,CVLK,CPkEb,COlEJ,APkEkC,COlEtD,AUK8B,CjB6DN,CAAhB,CiB7D+B,CAA7B,EAAgC,EAAhC,EAAoC,EAApC,CAAlB;AVJQ,AUKR,AZwCA,AmB/DqB,ACiB7B,AHqEA,AQOQ,IbtEA,AZwCA,AyB8BA,EN7FqB,CnB+DlB,AmB/DmB,CjBkBd,AF6CJ,CmB/DoB,ACiBhC,ElBCmB,CAAC,AuB2EJ,CbtEC,AasEA,CbtEC,AZwCV,GyB8BA,CN7FiC,AM6FnB,CN7FoB,GjBkB1B,CAAe,AuB2EvB,CbtEA,AasEoB,CbtEC,EVLb,AiBlBgB,CjBkBI,AiBlBe,CPuB3C,AOvBwB,CPuBE,EVLM,AiBlBe,EPuBjB,CQNtC,IK4EQ,GAAsC,GvB3EV,CAAS,CUKX,CAAS,AasEnC,EvB3E4B,EAAe,CAAf,EAAkB,EAAlB,CAApB,CUKkB,EAAsB,CAAtB,EAAyB,CAC/C;AVJI,AUIH,AjB4DW,AKpBhB,AmBhEI,ACjEZ,AHuJA,AQQQ,CL/JR,CAAyC,EpBiIjC,AyB8BA,CNhGmD,CP0B9C,CAAC,AZwCH,AmB/DC,CjBmBI,AF4CJ,CYxCI,CK8DhB,EjBtBQ,AyB8BQ,CAAC,G9BVW,AsBE5B,CflEyB,AuB0EjB,CvB1EkB,AUID,AK8DzB,AQQsB,CvB1EG,AUIC,CVJV,EkBrFhB,ClBqF+B,APgEI,AyBrJnC,AK+JQ,CAAoB,EvB1EZ,CUIA,AjB4DuB,CiB5DJ,AjB4DX,CiB5DZ,AasEJ,C9BVkC,E8BUN,SAA5B;AvBzEQ,AUGsB,AjB6DV,AKpBvB,AmBhEQ,AFqFc,AQSnB,ERTmB,CjB/BvB,CyBwCI,EbvE8B,AOvBzB,CPuB0B,AOvBzB,CjBoBE,CUGyB,AOvBzB,CM8FF,CRTa,CAAA,CQSV,CvB1EK,CAAC,AiBpBD,GPuB4B,AOvBzB,AM8FjB,CbvE2C,COvBvC,IFqFe,CfjEX,CAAkB,AeiEP,CL9Dc,CAAmB,CAAnB,CVHzB,CAAuB,CUGyB,AK8DrC,CAAA,EfjEgB,aAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAvB;AUGJ,AjB8DgB,AwBrFC,AM+FxB,KbzEsD,COtB9B,CPwBjB,AOxBkB,EAAE,MCkBjB,KDlB4B,CAAC,QAAZ,CAAqB;AjBqBrC,AUGH,AjB8De,AKtBvB,AmBhEO,AFsFR,KEzFuD,CP2B9C,AO3BqB,CP2BpB,AO3BN,CjBwBQ,CUGA,EK8DZ,EfjEgB,CAAC,APiEO,IiB9DH,CAAC,IK8DtB,CfjEY,APiEsB,AsBAtB,CfjEgB,APiEO,AsBAnC,EL9DY,AK8DW,CL9DQ,AK8D/B,CfjEY,AUGJ,AjB8DgB,COjES,APiEO,AsBAN,GfjEtB,CeiEZ,CfjEsC,CeiEU,GfjEpC,CPiEsC,COjEN,APiEO,GsBAnD,CfjEY,CeiEoD,EtBAd,CAAV,CAAoB,IAApB,CAAyB,IAAI,CAAC,QAA9B,CAAhB;AOhEf,AUEyB,AjB+Db,AwBrFjB,AM8FJ,EAAA,EN9FI,EPsB8B,CV9B1B,AU8B2B,EAAE,AOtB7B,CAAC,CFqFL,CQSM,CvB1EK,AP6DK,IsBIhB,CAAA,CtBAuB,AwBrFvB,GAAiB,AFqFjB,CAAA,IAAA,EAAM,CAAN,CErFA,CFqFS,CAAT,EAAY,IAAZ,EAAkB,QAAlB,EAA4B,CAA5B,EAA+B,CAA/B,KAAiC;AfhEzB,AUCJ,AjBgEgB,AKvBxB,AmB7DI,AFoFH,AQSJ,EzBhCG,GY3CuD,CAAzB,CAA1B,CVCQ,AF0CZ,AmB7DU,CnB6DV,ImB7De,CxBoFS,EwBpFN,CjBmBG,CAAC,AF0CtB,CE1CqB,AF0CrB,CE1CY,AiBnBU,GjBmBK,CPiEO,CAAC,COjEvB,CF0CZ,ELuBwB,CAAgB,AKvBxC,ELuB0C,CAAC,CwBpFzB,CAAU,GxBoFY,AwBpFtB,CxBoF+B,CKvBxC,AmB7DwB,GxBoFO,AwBpFtB,CxBoFoC,AKvBtD,CmB7DsC,CnB6Dd,ELuBkC,CAAC,AwBpFzC,EAA0B,GAA1B,EAA+B,CxBoFT,CAAhB,AwBpFN,CAAd,CAxDiC,CAyDjC;AjBmBQ,AUER,AjB+DiB,AKvBjB,AmB3DA,IPmBA,IVFQ,CUEJ,CAAC,CZwCE,CAAC,EE1CM,CAAC,CF0CH,CAAC,CAAD,CYxCZ,AZwCQ,GYxCS,CZwCE,EE1CX,CAAkB,CF0CH,CAAC,CAAD,CE1Cf,AF0CD,CE1CwB,AUE/B,AZwCA,IE1CmC,aAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,EAAjB,CAAvB;AACH,AUGL,AjB8Da,AKvBhB,AmB3DG,AFmFJ,AQQJ,ERRI,CjB1BA,IyBkCG,CbvEO,AauEN,KAAD,CRRH,AQQJ,CRRI,GL/DoB,GAAG,GK+DvB,CL/D2B,AK+D3B,QAAA,GAAA,QL/DuB,CAAe,CK+D7B,EL/Dc,CK+DvB,CL/D2C,CK+DL,EL/Df,EAAyB,IAAzB,EAA+B,GAA/B,EAAoC,EAApC,CAAnB,CAvDiC,CAwDjC;AAEA,AjB4DS,AsBCT,QAAM,CtBrBE,AsBqBD,GAAG,GtBDK,EsBCA,IAAL,CAAU,CAAV,GAAc,GAAxB,CADkC,CAElC;AflEI,APiEQ,AKzBf,AmB1DG,MjBkBI,EiBlBA,GjBkBI,CAAC,UAAL,CAAgB,AiBlBD,GAAG,CjBkBlB,CAAqB,AiBlBzB,GjBkBI,EAA0B,GAA1B,EAA+B,MAA/B;AACH,AUID,AjB6DY,AKzBpB,AmB1DQ,AFoFA,IEpFA,AFoFA,GAAG,CL9DC,AK8DA,CjB1BZ,AmB1DY,CxBmFQ,AwBnFP,KnB0Db,EiB0BQ,CEpFA,ExBmFsB,CAAC,AwBnFP,GAAhB,CPsBqB,AjB6DT,CAAgB,EiB7DJ,EAAxB,CjB6DY;AiB5DZ,AjB6DS,AK7CjB,AmBtCQ,AFoFA,CjB9CR,CAAqB,EYhBb,AOtBA,AFoFA,EjB9CR,CAAA,AiB8CW,CAAC,CL9DA,AOtBA,CPsBC,AOtBA,IFoFL,CAAW,CAAX,EAAc,CAAd,CEpFA,GAAkB,CPsBlB,COtBA,EPsBsB,GAAtB;AVHA,AUIA,AjB6DK,AsBCL,IL9DA,AK8DA,GtBhC0B,AsBgCvB,CflEG,APkEF,AsBAA,CL9DA,CAAC,IK8DL,CAAW,CAAX,EflEgB,AekEF,GflEK,EekEA,EflEI,CUIvB,CK8Dc,CAAU,CL9DA,AK8DV,EL9Dd,CK8D4B,CAAC,GAA7B,OflEmB,CAAc,EAAd,EAAkB,GAAlB,EAAuB,EAAvB,CAAnB;AACA,AiBnBA,AFqFA,IflEA,IekEM,CErFD,IAAI,CjBmBC,AiBnBA,CjBmBC,AekEE,EErFA,CAAb,AFqFgB,EErFA,CAAC,EFqFI,CErFD,CjBmBpB,CAAsB,CekEN,CErFM,AFqFI,CAAV,CflEhB,CAA2B,CiBnBP,AFqFU,GflEC,AiBnBJ,CAA3B,AFqFA,EErF8B,CAAC,EAA/B,EAAmC,KjBmBR,CAAS,SAAS,CAAC,CAAD,CAAlB,EAAuB,CAAvB,EAA0B,EAA1B,CAA3B;AACA,AUGA,AOtBI,AFqFJ,IflEA,AekEA,GAAG,CAAC,CL/DC,COtBK,GPsBD,AOtBI,CPsBH,AK+DV,CflEW,AekEA,CflEC,AiBnBI,AFqFJ,CL/DC,CAAb,EVHA,AUGgB,AOtBI,CjBmBH,AUGA,EK+DjB,CL/DoB,CK+DC,CAArB,EL/DsB,GVHtB,CUGoB,GAAO,CAA3B,EAA8B,AOtBd,CPsBe,AOtBD,EPsB9B,EAAmC,COtBD,CAAC,QAAL,GAAgB,KAAI,CAAC,UAAL,GAAgB,CAA9C,EAAiD,GAAjD,EAAsD,EAAtD,CAAZ;APuBA,AjB6DA,AK3BZ,AmBxDY,AFqFJ,IjB7BR,AiB6BQ,EtBFI,AwBnFA,CFqFD,CAAC,EL/DM,CZkClB,EYlCqB,CK+Db,CtBFa,AsBEF,CL/DK,AjB6DF,AsBEF,IL/DQ,CjB6DhB,AwBnFe,CxBmFC,AwBnFA,CFqFpB,EAAqB,CtBFjB,AwBnFA,CAAqB,ExBmFE,CwBnFvB,AFqFsB,IAAL,CAAU,CAAV,EL/DL,AjB6DoB,CiB7DN,AjB6DO,AsBEF,CAAC,GAApC,CL/DkC,CAAC,EjB6DR,CAAmB,UAAnB,CiB7DG,AjB6D1B,GiB7DgD,KAAI,CAAC,gBAAL,GAAsB,CAA1D,EAA6D,GAA7D,EAAkE,EAAlE,CAAZ;AVFJ,AUGI,AjB6DH,AK5BT,AiB8BQ,IAAA,CflEA,CUGI,CVHJ,AekEG,CAAC,EflEJ,IekEA,CflEI,AekEO,CflEN,MekEL,CL/DqB,CAAC,AK+DF,CAApB,CflEA,EAAgB,AUGZ,CAAuB,GVH3B,AUGI,CVHgB,KAApB,CAAoB,EAApB,EAAoB,aAAA,CAAA,aAAA,CAAA,CAAC,UAAD,CAAA,EAAgB,WAAhB,CAAA,EAAgC,WAAhC,CAApB;APiEH,AK7BL,AmBvDY,AFsFJ,GtBzCJ,CsByCI,EEtFI,CFsFD,CAAC,EjB/BZ,CmBvDgB,CAAC,EFsFT,CAAW,CjB/BnB,EAAA,IiB+BQ,EAAoB,IEtFhB,CAAsB,AFsFD,IAAL,CAAU,CAAV,CEtFhB,CAA8B,CFsFA,CAAC,CEtF/B,EAH+B,AFyFnC,CEtFwC;AjBqBxC,AUEI,AZgCU,AiBgCd,EjBhCc,EiBgCd,ELhEI,CKgED,CflEG,AekEF,GLhEI,AZgCM,CYhCL,AZgCK,EiBgCd,EflEc,GAAG,AFkCH,EAAA,EElCO,IFkCP,CYhCV,AZgCU,CYhCY,OAAtB,CAA8B,EVFjB,CAAY,AUEzB,EVFa,AUDkB,CAGK,CVFP,EAAhB,EAAoB,WAApB,CAAjB;AACA,AP+DR,QO/Dc,CP+Dd,OO/DsB,GAAG,CP+DzB,GO/D6B,gBAAJ,CAAY,EAAZ,EAAgB,EAAhB,EAAoB,WAApB,CAAjB;AACA,AP5GR,AK6II,AmBvDQ,AFwFJ,CtB9KR,EAAA,GwBsFY,EjBsBE,GFiCV,AmBvDY,CAAC,AFwFD,KAAK,CjBjCjB,CAAY,CAAZ,CEjCuB,CFiCA,AmBvDf,AFwFI,CjBjCZ,AmBvDwB,AFwFD,CflEG,CFiCQ,EmBvD1B,CjBsBsB,AiBtBD,CnBuD7B,EAAgD,AmBvDxC,CFwFJ,MjBjCJ,EAA+D,IEjCrC,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,WAAtB,EAAmC,KAAnC,EAA0C,EAA1C,CAAtB;AUCI,AZgCR,AmBtDK,AFwFG,KE7J6B,CP2F7B,AOpBJ,EnBoDJ,GYhCY,AKkEC,CLlEA,AKkEL,CjBlCR,GACI,MYjCI,AZiCJ,CYjCoB,AZiCpB,IYjCI,AZiCJ,CYjCyB,AZiCzB,GYjCI,CZiCJ,EAAM,CAAN,EAAS,CAAT,EAAY,IAAZ,EAAkB,OAAlB,EAA2B,CAA3B,KAA6B,IADjC;AE/BI,AUAC,AjB4DR,AsBKmB,IfjEZ,CUnEiC,CAqEjC,GVFI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,QAArB,EAA+B,QAA/B,EAAyC,aAAzC;AFiCA,AiBiCQ,IjBjCR,IiBiCQ,CjBjCJ,CAAC,CiBiCM,CAAC,GtBJL,CK7BP,GAAc,EiBiCN,CjBjCR;AE/BA,AiBtBA,AFuFQ,KfjER,EAAA,CiBtBM,AFuFE,EfjER,CeiEW,CAAC,EEvFA,CjBsBR,CAAC,CiBtBU,CFuFP,CAAW,CAAC,GAAG,GAAf,EAAoB,CAAC,CAAD,EfjE5B,CeiEiC,CfjEX,EeiEd,EfjER,CAA0B,KAA1B,CAA0B,EAA1B,EAA8B,WAA9B;AUCA,AZ+BH,AmBtDmB,AFwFR,MExFQ,EPuBV,AKiEE,GExFa,AFwFV,CAAC,CExFW,CPuBX,GAAG,CKiEP,CAAW,CAAC,GAAG,GAAf,EAAoB,CAApB;ALjEQ,AOvBD,AFyFP,KEzFR,CPuBgB,EKkER,GLlEa,AKkEV,CAAC,CLlEW,EKkEf,CAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,GAAG,GAAlB,EAAuB,CAAvB,EAA0B,IAAI,CAAC,EAA/B;AflEX,AUAkB,AZgCnB,AmBtDI,AFyFQ,EjBnCZ,GYhCI,GOtBM,AFyFE,CjBnCZ,CAAA,CiBmCe,CAAC,MAAJ,CjBnCZ,AmBtDqB,AFyFE,CjBnCvB,AiBmCwB,CAAD,CEzFC,EFyFI,GAAhB,CjBnCZ,CiBmCiC,CAAC,CjBnClC,AiBmCiC,GAAK,GAA1B,IjBnCH,GAAT,EAAsC;AY/BlC,AZgCA,AmBvDqB,AF0Fb,ME1Fa,EPuBf,AZgCA,AiBmCE,CjBnCD,EmBvDmB,AF0Ff,CjBnCD,AiBmCE,CE1FgB,InBuDb,EYhCE,EZgCP,AiBmCF,CLnEY,AZgCA,CAApB,CADkC,CAElC;AEjCR,AUA6B,AOvBD,AF2FZ,KE3FR,CPuBqB,EKoEb,CfpEhB,EUAkC,AKoEf,CAAC,CLpEgB,KKoEpB,OfpEhB;AA9GA,AU8G4B,AZkCpB,AmBxDA,AF2FQ,CfnLhB,CAA+B,EFgJvB,CYlCA,EZkCG,CAAC,AmBxDE,AF2FE,GAAG,CE3FD,AF2FE,GE3FC,CF2FL,CjBnCR,KEhJR,CAAA;AU+GQ,AZkCA,AmBzDc,AF4FN,IjBnCR,EmBzDc,CnByDX,CYlCG,AZkCF,GmBzDe,CPuBT,COvBW,CnByDrB,CYlCa,AZkCF,CAAC,GAAG,GAAf,EAAoB,CAAC,GAAG,CAAC,IAAzB;AYlCc,AZmCd,AmB1Da,InB0Db,CmB1DA,CPuBc,CZmCX,CAAC,GYnCe,EAAE,EVCd,SFkCP,CAAqB,CAAC,GAAG,GAAzB,EAA8B,CAAC,GAAG,GAAlC,EAAuC,CAAvC,EAA0C,CAAC,GAAG,GAA9C;AYnCa,AZoCb,AmB1DA,AF4FI,IjBlCJ,CYpCA,EZoCG,CAAC,AmB1DE,GF4FG,CAAL,KE5FW,GAAG,InB0DlB,CAAqB,CAAC,GAAG,CAAC,GAA1B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,IAAvD;AYnCA,AZoCA,AmB3DmB,AF4FP,IjBjCZ,EmB3DmB,CnB2DhB,CYpCG,AZoCF,GmB3DoB,EAAE,IPuBX,GAAG,IZoClB,CAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,CAAC,IAAjC,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,GAAG,CAAC,IAArD;AYpCmB,AZqCnB,AmB5DkB,AF6FV,IjBjCR,CmB5DA,CPuBmB,AOlGc,CnBuI9B,AmB1DH,CnB0DI,AiBiCI,GLtEgB,AKsEb,CAAC,CLtEc,IZqC1B,IiBiCQ;ALtEU,AZsClB,AiBiCQ,IjBjCR,CYtCA,EZsCG,CAAC,AiBiCI,GAAG,CAAC,EjBjCZ,IiBiCQ,CAAW,CAAC,GAAG,GAAf,EAAoB,CAAC,GAAG,CAAC,GAAzB;ALtER,AZsCA,AmB3DA,AF4FQ,IjBjCR,GAAG,CYtCG,AZsCF,AiBiCI,CE5FH,EF4FM,CLvED,AZsCV,AiBiCY,CE5FH,CAAC,CPqBG,AZ4BqB,CAWlC,CmB5Da,CAAb,EAAgB,CAAC,GAAG,IAApB,AF4FQ,CAAqB,CE5FH,AF4FI,CE5FH,EAA3B,AF4FiC,EE5FF,CF4FvB,EAA8B,CAAC,GAAG,GAAlC,EAAuC,CAAvC,EAA0C,CAAC,GAAG,GAA9C;ALvEM,AOpBV,AF4FI,MLxEM,EKwEN,EE5FE,CPoBS,AOpBR,AF4FA,CAAC,CLxES,COpBP,CAAV,aF4FI,CAAqB,CAAC,GAAG,CAAC,GAA1B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,GAAvD;ALxEK,AZwCb,AmB3DI,AF4FI,IjBjCR,CYxCA,EZwCG,CAAC,AiBiCI,EE5FE,CF4FC,CAAC,CE5FC,GAAG,CnB2DhB,WiBiCQ,CAAqB,CAAC,CE5FC,CAAC,CAAC,AF4FA,CAAzB,EE5F4B,AF4FA,CAAC,GE5FN,AF4FS,CE5FpC,AF4FqC,CE9FV,CAG3B,CF2FI,EAAsC,CAAC,GAAG,GAA1C,EAA+C,CAAC,GAAG,CAAC,GAApD;ALxER,AZwCA,AiBiCQ,IjBjCR,GAAG,CYxCG,AZwCF,AiBiCI,GAAG,CAAC,EjBjCZ,CAAW,CAAC,CYxCG,EZwCA,CYxCG,AZwCF,CiBiCR,EjBjCR,EAAqB,CAAC,GAAG,CAAC,GAA1B;AYxCmB,AZyCnB,AmB3DI,AF4FI,IjBjCR,EYzCmB,CZyChB,CAAC,AiBiCI,EE5FE,CPkBc,AK0Eb,CE5FC,AF4FA,CL1Ec,EOlBX,GAAG,AF4FV,CE5FW,KnB2DnB,CAAqB,CAAC,CmB3DP,CAAa,CnB2DH,AmB3DV,CnB2Df,EAA4B,AmB3DI,CnB2DH,CmB3Dd,EnB2DiB,CAAC,AmB3DI,CAAC,EnB2DtC,EAAsC,AmB3DI,CnB2DH,GAAG,AmB3DI,GnB2D9C,AmB3DiD,CAAX,CnB2DS,AmB3D3C,CnB2D4C,GAAG,CAAC,GAApD;AYzCkB,AZ0ClB,AmB3DI,AF4FI,IjBjCR,CY1CA,CA3EiC,AO0D7B,CPkBJ,AZyCG,CAAC,AiBiCI,GE5FC,AF4FE,CE5FD,AF4FE,EjBjCZ,EiBiCQ,ME5FJ,CAAiB,IAAjB,CAAsB,IAAI,aAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,CACnC;APmBR,AZwCH,AmB3DY,AF4FD,GjBjDZ,KmB3Ca,CAAC,EAAE,KAAK,CAAC,QAAN,CAAe,CAAf,GAAmB,KAAK,CAAC,YAAN,CAAmB,CAAnB,EAAsB,CAA7C;AAAgD,QAAA,CAAC,EAAE,MAAM,CAAC,GAAC;APoBnE,AZuCH,AmB3DW,AF6FJ,OE9FuC,CPqBvC,COnBI,EF4FC,CAAL,ELzEM,GAAG,EAAb;AACA,AOpBS,AF4FG,QLxER,AOpBK,CAAC,EAAE,GPoBF,EOpBO,CPoBJ,AOpBK,EPoBlB,COpBmB,CAAX;AnB2DZ,AmB3D0B,AF6Fd,EjBlCZ,MmB3D0B,CnB2D1B,AmB3D2B,CnB2D3B,CmB3D6B,MAAM,CAAC,CnB2DpC,CAAA,CmB3DqC,OnB2DrC,GAAA,UAAS,IAAT,EAAwB;AYtCpB,AZuCA,AmB5DQ,AF8FA,OEhGmC,CFgGnC,CLzEH,AOpBG,EnB2DD,AiBkCI,CjBlCH,AiBkCI,CLzEH,CAAC,EZuCE,CYvCC,AZuCA,CYvCb,AZuCY,CAAJ,CYvCQ,CAAC,AKyET,GLzEY,AZuCA,IYvCpB,AZuCwB,CAAC,CYvCC,AZuCF,CYvCG,AZuCpB,CAAP,CYvCA,EAA+B;AAC3B,AZuCP,AmB5DY,AF8FD,GjBpCZ,KmB1Da,AF8FD,CE9FE,CPqBA,COrBE,AF8FD,CAAC,GLzEG,COrBE,CAAC,CPqBA,AKyEV,CAAW,CE9FA,AF8FC,CE9FZ,CPqBc,CKyEC,GAAf,EAAoB,CAAC,GAAG,CAAC,IAAzB,ELzEU,CAAa,MAAM,CAAC,GAAC,EAArB,EAAyB,EAAzB,CAAd;AOrBkB,AF+Fd,QE/Fc,AF+Fd,CE/Fe,EAAE,AF+Fd,CAAC,gBAAJ,CAAqB,CAAC,GAAG,GAAzB,EAA8B,CAAC,GAAG,GAAlC,EAAuC,CAAvC,EAA0C,CAAC,GAAG,GAA9C;ALzEJ,AZsCP,AmB5DW,AFgGA,ML1EJ,COzBuC,CFmGnC,CE/FA,EPqBA,AK0EG,CL1EF,AK0EG,UL1ER,CAAgB,IAAhB,CAAqB,AK0EjB,CAAqB,CAAC,GL1E1B,AK0E6B,CAAC,GAA1B,EAA+B,CAAC,GAAG,GAAnC,EAAwC,CAAC,GAAG,CAAC,GAA7C,EAAkD,CAAC,GAAG,CAAC,IAAvD;AjBnChB,AmB5DiB,AFgGD,QEhGC,AFgGD,CjBpChB,AmB5DkB,EAAE,AFgGD,CAAC,EEhGG,CAAC,CnB4DxB,OmB5DoB,CAAa,CAAjB,GFgGA,CAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,CAAC,IAAjC,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,GAAG,CAAC,IAArD;AL1EJ,AZaZ,AmBnCoC,AFiGpB,CjB9DhB,CAAsB,IYbV,AZaZ,CAAA,CmBnCoC,AFiGpB,CEjGqB,EAAE,AFiGpB,CL3ED,AK2EE,CL3ED,IAAP,CAAY,GK2ER,EL3EJ,EAH2B,CAGP;AACvB,AOvBO,AFkGA,OEtGmC,CAAjB,AFsGlB,EEjGD,CFiGI,CAAC,MAAJ;AEjGA,AFkGA,QElGA,AFkGA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BsB,AOvBA,IPuBtB,CAA2B,COvB3B,GPuB+B,aAAJ,CAAS,GAAT,EAAc,CAAd,EAAiB,CACxC;AAAC,AZmCT,IAAA,GAAG,CYnCM,AZmCL,CYnCM,EAAE,GZmCZ,GANkC,CAOlC,GYpCsB,CAAC,QAAX,CAAoB,CAApB,GAAwB,UAAU,CAAC,YAAX,CAAwB,CAAxB,EAA2B,CAAnD,GAAuD,EAAvD,GAA4D,CAAC,GAAC,CAAlE;AAAqE,AOvBzE,MAAA,EPuByE,CAAC,EAAE,AOvBxE,CAAC,CPuByE,GAAG,CAAC,GAAC,EOvBnF,CAAgB,IAAhB,CAAqB,MAArB;APuBI,AZqCR,AmB3DC,InB2DD,CmBlKiC,CAyGjC,CPmBgD,AZsC7C,CAAC,CYpCI,QZoCR;AYpCS,AZqCT,AiBsCR,IjBtCQ,AiBsCR,GjBtCW,CYrCM,AZqCL,CYrCM,EAAE,EK2EpB,CjBtCQ,CAAW,CYrCM,AZqCjB,CYrCkB,CZqCJ,CAAC,CYrCI,CAAX,CZqCU,GAAlB;AYrCsB,AZsCtB,AiBqCR,IjBrCQ,GAAG,CYtCmB,AZsClB,CYtCmB,EAAE,EAAE,CZsC3B,CAAW,CYtCmB,AZsClB,CYtCmB,EZsChB,CYtCiB,AZsChB,IAAhB,EAAsB,CAAC,GAAG,CAAC,IAA3B;AYtCQ,AZuCR,AmB3DA,AF+FR,IjBpCQ,GYzCgD,AZyC7C,CAAC,CYtCI,AOrBH,CF+Fb,GE/FiB,CnB2DT,AmB3DU,CnB2DC,CAAC,AiBoCpB,CE/FqB,CAAb,AF+FR,CjBpCuB,CmB3DC,CAAC,EnB2DjB,CmB3DoB,CnB2DC,CAAC,EmB3DA,CnB2DG,CAAC,EmB3DN,EnB2DpB,CmB3D6B,CAA7B,EAAgC,CAAC,EAAjC,EAAqC;APqB5B,AZuCT,AmB3DI,AF8FY,EAAA,EjBnChB,GAAG,CYvCM,AZuCL,CYvCM,COpBA,CPoBE,AK0EI,CAAA,IL1EC,AOpBD,CPoBE,AZuClB,EmB3DmB,CPoBA,CAAX,AK0EQ,EAAA,MAAA,CAAA,IE9FkB,CAAC,CAAD,CAA9B;APoBkB,AZwCtB,AmB3DI,InB2DJ,GAAG,CYxCmB,AZwClB,CYxCmB,EAAE,GZwCzB;AYxCQ,AZyCR,AiBkCJ,IjBlCI,GY5CgD,AZ4C7C,CAAC,CYxCI,EK0EZ,CjBlCI,QiBkCJ,CAAY,CAAZ,EAAuB,CAAvB,EAAkC,IAAlC,EAAgD,QAAhD,EAAgE;AL1EnD,AZ0CT,AiBgCJ,IjBhCI,GAAG,CY1CM,AZ0CL,AiBgCR,CL1Ec,EAAE,EK0EhB,CL1EmB,CAAC,CK2EhB,CjBjCA,KiBiCA,CL3EY,AK2EZ,CL3EyB,CAAjB,EK2ER,CAAA,IAAA,EAAM,CAAN,EAAS,CAAT,EAAY,IAAZ,EAAkB,QAAlB,EAA4B,CAA5B,EAA+B,CAA/B,KAAiC,IADrC;AL1EgC,AZ2C5B,IAAA,GAAG,CY3CyB,AZ2CxB,CY3CyB,EAAE,AZ2C/B,CAAQ,CAAR,EAAW,CAAC,GAAG,GAAf,EAAoB,CAAC,GAAG,GAAxB,EAA6B,CAA7B,EAAgC,IAAE,IAAI,CAAC,EAAvC;AY3CQ,AZ4CR,AmB5DI,AF4FJ,IjBhCA,AiBgCA,GLhFgD,AZgD7C,CYhD4B,AZgD3B,CiBgCA,CL3EG,AOjBG,AF4FL,IjBhCL,CiBgCA,CE5FgB,EF4FH,CE5FM,IAAI,mBAAJ,CAAe,MAAM,CAAC,QAAP,CAAgB,CAA/B,EAAkC,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAtD,EAA0D,EAA1D,CAAf,CANiC,CAOjC;APgBI,AZ4CR,AiBgCI,IjBhCJ,EiBgCI,CjBhCD,CY5CK,AZ4CJ,EiBgCI,EjBhCR,AiBgCU,CL5EG,AK4EF,EL5EI,GK4EL,CADG;AL3EN,AZ6CV,AmB5DO,AF4FA,GjBpDR,GmBxCQ,AF4FA,CLlF2B,CAA3B,IOVM,CAAC,EF4FE,EAAE,ME5FX,CAAkB,IAAlB,CAAuB,IAAI,aAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CACzC;APeP,AOfQ,AFyFI,KLnLoB,AKmLjC,CLzEA,EOhBS,CAAC,EAAE,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB,EAAxB;AnB6DZ,AmB7DwC,EnB6DxC,GAAA,CAAA,EmB7DwC,CAAC,EAAE,InB6D3C,CAAA,CmB7DiD,CAAC,InB6DlD,GAAA,CmB7D2C,CAAgB,QnB6DpD,GAAP,EAAsC,MAAtC,EAAqD;AACjD,AmB9DQ,AF6FX,IjB/BG,GmB/DiD,CnB+D7C,CAAC,AmB7DG,SnB6DR,CAAe,MAAf,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,MAAtC;AY7CA,AZ8CH,AmB9DY,GnB4Db,KmB5Da,CPgBJ,AOhBK,EAAE,EPgBH,CAAC,GAAG,AOhBK,CPgBlB,AOhBmB,EPgBH,CAAC,GAAG,EOhBR,CAAgB,CPgB5B,AOhBY,EPgBc,CAAC,AOhBK,EPgBhC,AOhBQ,EPgBuB;AAC3B,AOjBgC,AF+FxC,EAAA,IL9EQ,EOjBgC,CAAC,EAAE,AF+F3C,CAAA,IL9EkB,CAAC,AOjB8B,CAAC,GF+FlD,CAAA,IE/F2C,CPiBnC,AOjBmD,CPiB7B,AOjBa,EF+F3C,CE/F+D,CPiBvD,CAA2B,AOjBQ,AF+F3C,GE/FoE,CPiB7B,GOjB+B,GF+F7D,GAAT,EAAsC,EL9EH,CAAS,MAAM,CAAC,CAAD,CAAf,EAAoB,CAApB,CAA3B;AACH,AZ4CJ,AmB9DW,AFgGR,KL3LiC,CA+GjC,COtBiD,CFkG3C,CE/FE,AF+FD,GAAG,KAAK,IAAL,CAAU,CAAV,GAAc,IAAxB,CADkC,CAElC;AEhGS,QAAA,CAAC,EAAE,MAAM,IAAE,CAAZ;AnB8DZ,AmB9D2B,AFiGvB,EjBnCJ,EiBmCI,CjBnCJ,CAAA,CiBmCO,CEjGoB,AFiGnB,CEjGoB,EAAE,InB8D9B,CAAA,CmB9DoC,AFiGhC,CEjGiC,MnB8DrC,EmB9D8B,CnB8D9B,AmB9D8C,CAAhB,GAAoB,EAApB,GAAyB,CnB8D9C,GmB9DgD,CnB8DzD,EAAwB;AY1CpB,AZ2CA,AmB/DQ,AFkGR,IAAA,GErGiD,AFqG9C,CL9EC,AOvBuB,AFqGvB,EEjGG,CnB8DA,CAAC,CAAC,CiBmCT,CAAW,CAAX,CjBnCa,CAAC,AiBmCA,CjBnCD,AmBlEc,CnBkEpB,AmBlEH,CnBkEJ,CmB1EqC,CAajC,AFgGe,IAAL,CAAU,CL9EC,AK8EX,GL9Ec,AK8EA,CAAC,CL9E7B,EK8EA;AjBlCH,AiBmCG,GjBrCJ,CiBqCI,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAc,KAAK,IAAL,CAAU,CAAV,GAAc,CAAC,GAA7B;AL9EA,AOlBI,AFiGJ,IAAA,GAAG,CAAC,CL/EC,COlBG,CAAC,EPkBA,CAAC,AOlBE,AFiGZ,GL/Ea,CAAb,AOlBc,EPkBE,CAAC,COlBb,EPkBgB,AOlBA,IPkBpB,EAA0B,CAAC,EAA3B,EAA+B;AAC3B,AZ0CP,AmB5DW,QAAA,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAuB,IAAI,aAAJ,CAAS,eAAe,CAAC,CAAC,GAAC,CAAH,CAAxB,EAA+B,CAA/B,EAAkC,CACrD;APkBR,AZ0CZ,AmB5DqB,AFiGb,QAAI,CjBrCZ,CY1CkB,AOlBG,CPkBF,AOlBG,CnB4DtB,CmB5DwB,AFiGP,CL/EK,IK+EV,CEjGkB,AFiGP,CEjGQ,IPkBC,CAAC,GOlBT,AFiGZ,CEjG4B,CAAhB,GPkBF,AOlBsB,AFiGP,CL/EK,AOlBtB,AFiGZ,CL/Ec,CK+EkB,EL/EM,UAAU,CAAC,aAAX,CAAyB,CAAzB,EAA4B,CAA9D,CAF2B,CAEsC;AACjE,AZQZ,AmB3B+C,AFkGnC,CjBvEZ,CAAkB,IAAlB,CAAA,GmB3B+C,CAAC,EAAE,MAAM,CAAC,QAAP,CAAgB,CAAhB,GAAoB;AAAlD,AFmGR,MAAA,GEpG6D,AFoG1D,CAAC,CElGI,QFkGR;AL/EA,AOnBS,AFmGT,MAAA,GAAG,CLhFG,AOnBG,AFmGL,CEnGM,EAAE,GPmBA,AKgFZ,CAAW,CAAX,CLhFe,AOnBG,CAAC,AFmGL,CAAC,ELhFI,CKgFD,GAAlB,CEnGY,CAAgB,CAAhB,GAAoB,EAAxB,OPmBO,CAAe,iBAAiB,CAAC,CAAC,GAAC,IAAH,CAAjB,CAA0B,QAA1B,CAAmC,CAAlD,EAAqD,CAAC,GAAG,EAAzD,EAA6D,EAA7D,CAAf,CAJ2B,CAK3B;AOpBoC,AFoGpC,MAAA,GAAG,CEpGiC,AFoGhC,CEpGiC,EAAE,GFoGvC,CAAW,CAAC,CEpGiC,CAAC,CFoG/B,CAAC,IAAhB,EEpGuC,AFoGjB,CEpGiC,AFoGhC,CEpGgB,EFoGb,CEpGiC,AFoGhC,IAA3B;AL/EA,AOrBQ,AFqGR,MLhFA,AKgFA,GEvG6D,AFuG1D,CAAC,CEpGI,CPoBF,CAAC,GKgFP,CAAW,CAAC,GAAG,ELhFf,CAAkB,CKgFlB,EAAqB,CLhFrB,AKgFsB,CLhFC,EKgFE,CAAC,CLhFC,GKgF3B,ULhFuB,CAAS,UAAT,EAAqB,IAArB,EAA2B,CAC9C;AAAC,AOrBI,AFqGT,MAAA,ELhFK,CAAC,AKgFH,CErGM,AFqGL,CLhFI,AOrBE,EAAE,IPqBE,CAAC,COrBG,AFqGlB,CErGmB,MPqBX,CAAgB,CAAhB,AOrBI,CAAgB,CAAhB,CPqBgB,EAAxB,AOrB4B,EAAxB;APqBwB,AOrBI,AFsGpC,MAAA,ELjFgC,CAAC,AKiF9B,CEtGiC,AFsGhC,CLjF+B,AOrBE,EAAE,GFsGvC,CLjFyC,CAAC,COrBG,CAAC,MPqBX,CAAgB,COrBZ,CAAgB;APqBnD,AOrBI,AFuGR,MAAA,CLnFkD,EAE9C,AOzByD,AF0G1D,CE1GwB,AF0GvB,EEtGG,EFsGP,EE1G2B,CAAvB;APyBC,AOpBJ,AFuGD,MAAA,CE7GA,CP0BK,CAAC,AKmFH,CAAC,CLnFI,EOpBD,IPoBO,CAAC,CKmFf,OLnFQ,CAAgB,CAAhB,GAAoB,EAAxB;AAA4B,AOnB5B,AFuGJ,MAAA,ELpFgC,AOnB5B,CPmB6B,AKoF9B,CAAC,CLpF+B,EKoFnC,CEvGU,AFuGF,CEvGG,AFuGX,ELpFyC,AKoF9B,CLpF+B,AKoF9B,GAAG,GAAf,CEvGI,CPmB+B,AOnBb,AFuGF,CLpF+B,AKoF9B,CLpFc,EOnB/B,AFuGoB,CLpF+B,AOnB5B,EFuG3B,EEvGI,AFuGyB,CAA7B,EAAgC,IAAE,IAAI,CAAC,EAAvC;ALpFI,AOlBH,AFuGD,MAAA,CLvFkD,EAG9C,AKoFD,CAAC,MAAJ;ALpFK,AKqFL,MAAA,ELrFK,CAAC,AKqFH,CAAC,CLrFI,GKqFR,OLrFkB,CAAC,QAAX,CAAoB,CAApB,GAAwB,UAAU,CAAC,IAAX,CAAgB,CAAhB,GAAkB,CAA9C;AAAiD,AOlBrD,AFwGH,QLtFwD,CAAC,COlBlD,CPkBoD,AOlBnD,IAAI,EPkBqD,CAAC,COlB/D,EAAe,KPkByC,CAAgB,CAAhB,GAAoB;AAAxE,AOjBA,AFwGX,GAvBD,ILnE0D,EAI9C;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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["// Exploration.ts\n//\n// This might be something a little more interesting\n\nimport Component, {StateObject} from './Component';\n\nclass Exploration {\n    public canvas: HTMLCanvasElement;\n    public context: CanvasRenderingContext2D;\n    public components: Array<Component>;\n    // The idea is that all components update their state recursively starting here\n    public outputComponents: Array<Component>;\n\n    public animated: boolean = false; // assume not unless proven otherwise\n\n    public paused: boolean = false;\n    public updateTime: number = 1000;\n    public lastUpdated: number = Date.now();\n    public animationFrame: any;\n\n    // Can possibly have an afterRender property\n    public afterRender: (() => void) | null | undefined;\n\n    constructor(canvas: HTMLCanvasElement, width: number = 400, height: number = 400) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d')!;\n        this.components = [];\n        this.outputComponents = [];\n\n        // sizing\n        canvas.width = width;\n        canvas.height = height;\n\n        // TS-safe way of putting a random debug name\n        let id = Math.floor(Math.random() * 1e6);\n        Object.defineProperty(window, \"exploration\" + id, {\n            value: this,\n        });\n        console.log(id, this);\n    }\n\n    // todo: addComponent() maybe?\n\n    render(isDark: boolean) {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        for (let i = 0; i < this.components.length; i++) {\n            this.context.save();\n            // render wires first\n            const comp = this.components[i];\n            for (let j = 0; j < comp.inputWires.length; j++) {\n                const position = {\n                    x: comp.position.x + comp.inputSockets[j].x,\n                    y: comp.position.y + comp.inputSockets[j].y,\n                };\n                comp.inputWires[j]?.render(this.context, position, isDark);\n            }\n            this.components[i].render(this.context, isDark);\n            this.context.restore();\n        }\n\n        if (typeof this.afterRender === \"function\") {\n            this.afterRender();\n        }\n    }\n\n    onClick(canvasX: number, canvasY: number) {\n        let needsUpdate: boolean = false;\n        for (let i = 0; i < this.components.length; i++) {\n            const component = this.components[i];\n            const offsetX = canvasX - component.position.x;\n            const offsetY = canvasY - component.position.y;\n            if (Math.abs(offsetX) < component.size.x/2 && Math.abs(offsetY) < component.size.y/2 && component.onClick) {\n                needsUpdate ||= component.onClick(offsetX, offsetY);\n            }\n        }\n\n        if (needsUpdate && !this.animated) {\n            // Non-animated ones re-update the whole tree\n            this.update();\n        }\n    }\n\n    pause() {\n        this.paused = true;\n        cancelAnimationFrame(this.animationFrame);\n    }\n\n    resume() {\n        this.paused = false;\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    updateLoop() {\n        // Not paused or turned off, and been long enough since last update\n        if (!this.paused && this.updateTime > 0 && Date.now() - this.lastUpdated > this.updateTime) {\n            this.update();\n        }\n        this.animationFrame = requestAnimationFrame(this.updateLoop.bind(this));\n    }\n\n    update() {\n        // call beforeUpdate if needed\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            if (typeof comp.beforeUpdate === \"function\") {\n                comp.beforeUpdate();\n            }\n        }\n\n        // Recursively loop backwards through the tree\n        // stores a hash of component indices because we have to check the same component multiple times\n        // We hash anything that is listed as an output component\n\n        const visitedNodes: {[i: number]: boolean} = {};\n        const savedState = [];\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            const comp = this.outputComponents[i];\n            let old: boolean[] = [];\n            for (let j = 0; j < comp.state.bits.length; j++) {\n                old.push(comp.state.bits[j]);\n            }\n            savedState.push({bits: old});\n        }\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            this.updateComponent(this.outputComponents[i], visitedNodes, savedState);\n        }\n\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            //console.log(\"After Update: \", this.outputComponents[i].position, savedState[i].bits, this.outputComponents[i].state.bits)\n        }\n\n        //console.warn(\"UPDATE FINISHED\");\n\n        this.lastUpdated = Date.now();\n    }\n\n    updateComponent(component: Component,\n        visitedNodes: {[i: number]: boolean},\n        savedState: StateObject[]) {\n        let index = this.components.indexOf(component); // if this gets too slow I can add IDs\n        if (!visitedNodes[index]) {\n            visitedNodes[index] = true; // prevents infinite loops, although cyclic explorations are invalid anyway\n            // has not been visited, so we need to evaluate it\n            //console.log(\"visiting \" + String(index), component);\n            let parentBits = [];\n            for (let i = 0; i < component.inputWires.length; i++) {\n                const wire = component.inputWires[i];\n                if (wire) {\n                    const to = wire.toComponent;\n                    if (!to) {\n                        parentBits.push(false); // null = 0\n                    } else {\n                        this.updateComponent(wire.toComponent, visitedNodes, savedState);\n\n\n                        // all we need is this one bit\n                        // (note: null or missing wires give a 0)\n                        // did we save it?\n                        const ocIndex = this.outputComponents.indexOf(to);\n                        if (ocIndex >= 0) {\n                            //console.log(\"Using saved state\", ocIndex, savedState[ocIndex].bits);\n                            // Use the stored state instead of updating immediately\n                            parentBits.push(savedState[ocIndex].bits[wire.toOutput]);\n                        } else {\n                            parentBits.push(to.state.bits[wire.toOutput]);\n                        }\n                    }\n                } else {\n                    // no wire = 0\n                    parentBits.push(false);\n                }\n            }\n            // Update the component's state.\n            component.state.bits = component.evaluate(parentBits);\n        }\n    }\n};\n\nexport default Exploration;\n","// InputBit.ts\n// Can be clicked to change state\n\nimport Component from './Component';\n\nclass InputBit implements Component {\n    state: {bits: boolean[], active: boolean};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: [];\n    inputWires: [];\n    outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    constructor(x: number, y: number, value: boolean = false, size: number = 20) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            active: value,\n            bits: [value],\n        };\n\n        this.inputSockets = []; // it is input, it needs no input from elsewhere\n        this.inputWires = [];\n        this.outputSockets = [\n            {x: 0, y: 0}\n        ];\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        if (this.state.active !== this.state.bits[0]) {\n            // panic\n            throw new Error(\"[InputBit.render] State does not match bit array\");\n        }\n        if (isDark) {\n            ctx.fillStyle = (this.state.active ? \"#00cc00\" : \"#990000\");\n        } else {\n            ctx.fillStyle = (this.state.active ? \"#33ff33\" : \"#990000\");\n        }\n        ctx.strokeStyle = \"2px solid black\";\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.size.x / 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n    };\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        console.log(\"[InputBit] clicked\");\n        this.state.active = !this.state.active;\n        this.state.bits[0] = this.state.active;\n        // bits will be updated when everything is\n        return true;\n    };\n\n    evaluate(_: boolean[]): boolean[] {\n        return [this.state.active];\n    }\n}\n\nexport default InputBit;\n","// OutputBit.ts\n// Need a good way to distinguish from InputBits\n\nimport Component from './Component';\nimport Wire from './Wire';\n\nclass OutputBit implements Component {\n    state: { bits: boolean[] };\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: Wire[];\n    beforeUpdate: undefined;\n\n    constructor(x: number, y: number, size: number = 20) {\n        this.position = { x: x, y: y };\n        this.size = { x: size, y: size };\n        this.state = { bits: [false] };\n\n        this.inputSockets = [{x: 0, y: 0}];\n        // this might be convenient\n        this.outputSockets = [{x: 0, y: 0}];\n        this.inputWires = [];\n    }\n    render(ctx: CanvasRenderingContext2D): void {\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(left, top, this.size.x, this.size.y);\n        ctx.fillStyle = (this.state.bits[0] ? \"#33ff33\" : \"#990000\");\n        ctx.fillRect(\n            left + this.size.x * 0.1,\n            top + this.size.y * 0.1,\n            this.size.x * 0.8,\n            this.size.y * 0.8\n        );\n    };\n    onClick: undefined;\n    evaluate(bits: boolean[]): boolean[] {\n        //console.log(bits);\n        //console.log(\"evaluating\", this.position);\n        return bits;\n    };\n}\n\nexport default OutputBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass Adder implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        // carry input\n        this.inputSockets.push({\n            x: this.size.x * 3/8,\n            y: 0,\n        });\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            /*ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x, this.position.y + socket.y - 15);*/\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = \"#333333\";\n            ctx.strokeStyle = (this.state.bits[i] ? '#33ff33' : '#990000');\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += ((wire1 && wire1.toComponent.state.bits[wire1.toOutput]) ? 1 : 0) * (1 << i);\n            num2 += ((wire2 && wire2.toComponent.state.bits[wire2.toOutput]) ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(String(num1) + \" + \" + String(num2), this.position.x, this.position.y);\n\n        const carryWire = this.inputWires[2*this.numBits];\n        if (carryWire && carryWire.get()) {\n            ctx.font = Math.round(textSize*0.5) + \"px monospace\";\n            ctx.fillText(\"(+1 carry in)\", this.position.x, this.position.y + this.size.y*0.25);\n        }\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        // add plus the carry\n        const answer = num1 + num2 + (bits[2*this.numBits] ? 1 : 0);\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) > 0;\n        }\n        if (this.position.x === 430 && this.numBits === 4) console.log(\"Adder gives \", answerBits, \"with input\", bits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        let inputs = [];\n        for (let i = 0; i <= 2*this.numBits; i++) {\n            const wire = this.inputWires[i];\n            inputs.push(wire ? wire.get() : false);\n        }\n        console.log(\"num inputs: \", inputs.length);\n        this.state.bits = this.evaluate(inputs);\n    }\n}\n\nexport default Adder;\n","// Wire.ts\n\nimport Component from \"./Component\"\n\ntype WireOptions = {color?: string};\n\n// not sure a wire really is a component but it uses them\nclass Wire {\n    // I use \"from\" and \"to\" because \"input\" and \"output\" are ambiguous\n    toComponent: Component;\n    toOutput: number;\n\n    color: string | undefined;\n\n    // in case you want the wire to bend\n    waypoints: Array<{x: number, y: number, node?: boolean}> = [];\n\n    constructor(\n        to: Component,\n        toOutput: number,\n        waypoints: {x: number, y: number, node?: boolean}[] = [],\n        options: WireOptions = {}\n    ) {\n        this.toComponent = to;\n        this.toOutput = toOutput;\n        this.waypoints = waypoints;\n\n        this.color = options.color;\n    }\n\n    get(): boolean {\n        // empty wire is zero\n        if (!this.toComponent) return false;\n        // coerce undefined to false\n        return this.toComponent.state.bits[this.toOutput] || false;\n    }\n\n    addWaypoint(x: number, y: number) {\n        this.waypoints.push({x: x, y: y});\n    }\n\n    render(ctx: CanvasRenderingContext2D, from: {x: number, y: number}, isDark: boolean) {\n        if (!this.toComponent) return;\n        ctx.save();\n        ctx.strokeStyle = this.color ?? (isDark ? \"#909396\" : \"#333\");\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        for (let i = 0; i < this.waypoints.length; i++) {\n            ctx.lineTo(this.waypoints[i].x, this.waypoints[i].y);\n        }\n        const endOffset = this.toComponent.outputSockets[this.toOutput];\n        ctx.lineTo(endOffset.x + this.toComponent.position.x, endOffset.y + this.toComponent.position.y);\n        ctx.stroke();\n\n        ctx.lineWidth = 6;\n        for (let i = 0; i < this.waypoints.length; i++) {\n            if (this.waypoints[i].node) {\n                ctx.beginPath();\n                ctx.arc(this.waypoints[i].x, this.waypoints[i].y, 1, 0, 2*Math.PI);\n                ctx.stroke();\n            }\n        }\n        ctx.restore();\n    }\n}\n\nexport default Wire;\n","// Gates.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nabstract class Gate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number, rotation: number, bits: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.2*sine),\n                },\n                {\n                    x: size * (0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.2*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.4*sine,\n                y: size * 0.4*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    beforeUpdate: undefined;\n\n    onClick(_offsetX: number, _offsetY: number): boolean {\n        return false;\n    };\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#ccc\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        this.drawGate(ctx);\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.6) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    }\n\n    abstract evaluate(bits: boolean[]): boolean[];\n}\n\nclass AndGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"&\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.moveTo(this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.lineTo(this.size.x * 0.4, 0);\n        ctx.arc(0, 0, this.size.x * 0.4, 0, Math.PI);\n        ctx.lineTo(-this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] && bits[1]];\n    };\n}\n\nclass OrGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"O\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] || bits[1]];\n    };\n}\n\nclass XorGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n        this.symbol = \"X\";\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        // do the or's path...\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n        ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n        // and the extra thing\n        ctx.beginPath();\n        ctx.moveTo(s * -0.4, s * -0.5);\n        ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n        ctx.stroke();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] !== bits[1]];\n    };\n}\n\nclass Not extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 1);\n    }\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, s * -0.5);\n        ctx.lineTo(0, 0);\n        ctx.stroke();\n        // triangle for the not\n        ctx.beginPath();\n        ctx.moveTo(0, s * 0.2);\n        ctx.lineTo(s * -0.25, s * -0.35);\n        ctx.lineTo(s * 0.25, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        Gate.prototype.render.call(this, ctx, isDark);\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [!bits[0]];\n    };\n}\n\nexport {AndGate, OrGate, XorGate, Not};\n","// Display.ts\n//\n// Given a set of bits, displays its value as a signed or unsigned integer.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\ntype DisplaySigned = (boolean | \"signmag\" | \"1comp\" | \"2comp\");\n\nclass Display implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public signed: DisplaySigned;\n    public components: Component[];\n    beforeUpdate: undefined;\n\n    // I think this only works on components with exactly 1 output\n    constructor(x: number, y: number, components: Component[], signed: DisplaySigned = false, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size * 2,\n            y: size\n        };\n        this.signed = signed;\n        this.components = components;\n\n        this.state = {\n            // unused\n            bits: [],\n        };\n        // unused, it doesn't use wires because they make visual clutter\n        this.inputSockets = [];\n        this.outputSockets = [];\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    getValue() {\n        let totalValue: number = 0;\n        for (let i = 0; i < this.components.length; i++) {\n            const comp = this.components[i];\n            const value = (comp.state.bits[0] ? 1 : 0) << i;\n            // use 2's complement if signed on the last bit\n            if (i == this.components.length - 1) {\n                if (this.signed === \"signmag\") {\n                    // MSB flips sign if on\n                    totalValue *= (value == 0) ? 1 : -1;\n                } else if (this.signed === \"1comp\") {\n                    // 1's complement is equivalent to MSB value -2^n+1\n                    totalValue -= (value ? value - 1 : 0);\n                } else if (this.signed === true || this.signed === \"2comp\") {\n                    // 2's complement is equivalent to MSB value -2^n\n                    totalValue -= value;\n                } else {\n                    // unsigned\n                    totalValue += value;\n                }\n            } else {\n                // all other bits are normal\n                totalValue += value;\n            }\n        }\n        let displayText = String(totalValue);\n        // negative zero\n        if (displayText === \"0\" && this.components[this.components.length - 1].state.bits[0]) {\n            displayText = \"-0\";\n        }\n        return displayText;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = isDark ? \"#333\" : \"#cccccc\";\n        ctx.strokeStyle = isDark ? \"#999\" : \"#000\";\n        ctx.beginPath();\n        ctx.moveTo(left,               top);\n        ctx.lineTo(left + this.size.x, top);\n        ctx.lineTo(left + this.size.x, top + this.size.y);\n        ctx.lineTo(left,               top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // get the state\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.font = Math.round(this.size.y*4/5) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#909396\" : \"#000\";\n\n\n        ctx.fillText(this.getValue(), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(_: boolean[]): boolean[] {\n        return [];\n    }\n}\n\nexport default Display;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 640, 400);\n\n        const adder = new Adder(520, 200, 4);\n        this.components.push(adder);\n\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: bit.position.x + 12.5, y: 120 - i*20},\n                {x: bit.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit);\n\n            const bit2 = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bit2, 0, [\n                {x: bit2.position.x - 12.5, y: 120 - i*20},\n                {x: bit2.position.x, y: 120 - i*20},\n            ]));\n            this.components.push(bit2);\n        }\n\n        for (let i = 0; i < 5; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 300);\n            output.inputWires.push(new Wire(adder, i, []));\n            this.components.push(output);\n            this.outputComponents.push(output);\n        }\n\n        // colors are nice\n        const blue = {color: \"rgba(96,96,160,1)\"};\n\n        const fakeCarry = new InputBit(370, 200, false, 20);\n        this.components.push(fakeCarry);\n\n        let rightInputA = [];\n        let rightInputB = [];\n        let rightOutput = [];\n        let carryOuts = [];\n        for (let i = 0; i < 4; i++) {\n            const bitA = new InputBit(290 - i*70, 30);\n            rightInputA.push(bitA);\n\n            const bitB = new InputBit(bitA.position.x + 40, 90);\n            rightInputB.push(bitB);\n\n            // full adder\n            const x1 = (bitA.position.x + bitB.position.x)/2;\n            const y1 = bitB.position.y + 60;\n            const and = new AndGate(x1 - 18, y1, 24, 0);\n            and.inputWires.push(new Wire(bitA, 0, []));\n            and.inputWires.push(new Wire(bitB, 0, []));\n            const xor = new XorGate(x1 + 18, y1, 24, 0);\n            xor.inputWires.push(new Wire(bitA, 0, []));\n            xor.inputWires.push(new Wire(bitB, 0, []));\n\n            const outBit = new OutputBit(x1, 300, 20);\n            rightOutput.push(outBit);\n\n            if (i >= 0) {\n                const previous = (i == 0) ? fakeCarry : carryOuts[i-1];\n                // need a second phase of the adder\n                const and2 = new AndGate(x1, y1 + 50, 24, 0);\n                and2.inputWires.push(new Wire(xor, 0, []));\n                and2.inputWires.push(new Wire(previous, 0, [\n                    {x: and2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const xor2 = new XorGate(x1 + 20, y1 + 80, 24, 0);\n                xor2.inputWires.push(new Wire(xor, 0, []));\n                xor2.inputWires.push(new Wire(previous, 0, [\n                    {x: xor2.position.x + 5, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: and2.position.y - 15},\n                    {x: and2.position.x + 38, y: previous.position.y + 15},\n                    {x: previous.position.x, y: previous.position.y + 15},\n                ], blue));\n\n                const or2 = new OrGate(x1 - 15, y1 + 80, 24, 0);\n                or2.inputWires.push(new Wire(and, 0, []));\n                or2.inputWires.push(new Wire(and2, 0, []));\n\n                carryOuts[i] = or2;\n                outBit.inputWires.push(new Wire(xor2, 0, []));\n                this.components.push(or2, and2, xor2);\n            } else {\n                carryOuts[i] = and;\n                outBit.inputWires.push(new Wire(xor, 0, []));\n            }\n\n            this.components.push(and, xor, outBit);\n        }\n\n        const finalCarry = new OutputBit(30, 250, 20);\n        finalCarry.inputWires.push(new Wire(carryOuts[3], 0, []));\n        rightOutput.push(finalCarry);\n\n        this.components.push(finalCarry, ...rightInputA, ...rightInputB);\n\n        const displayA = new Display(35, 30, rightInputA);\n        const displayB = new Display(35, 90, rightInputB);\n        const displayResult = new Display(200, 350, rightOutput, false, 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...rightOutput);\n    }\n}\n\nexport default AdderExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass AdderFailExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 170, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 105 - i*15;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: 105 - i*15},\n                {x: bitA.position.x, y: 105 - i*15},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: 105 - i*15},\n                {x: bitB.position.x, y: 105 - i*15},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"signmag\");\n        const displayB = new Display(365, 30, inputB, \"signmag\");\n        const displayResult = new Display(200, 350, outputBits, \"signmag\", 40);\n\n        this.components.push(displayA, displayB, displayResult);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default AdderFailExploration;\n","// Text.ts\n//\n// Simple text display\n\nimport Component from './Component';\n\ninterface TextOptions {\n    color?: string | (() => string);\n}\n\nclass Text implements Component {\n    state = {bits: []};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets = [];\n    outputSockets = [];\n    inputWires = [];\n    onClick = undefined;\n    evaluate = () => [];\n    beforeUpdate = undefined;\n\n    text: string | (() => string);\n    options: TextOptions;\n\n    constructor(x: number, y: number, size: number, text: string | (() => string), options: TextOptions = {}) {\n        this.position = {x: x, y: y};\n        this.size = {x: 0, y: size};\n        this.text = text;\n        this.options = options;\n    }\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n        const message = (typeof this.text === \"function\" ? this.text() : this.text);\n        ctx.font = `${this.size.y}px monospace`;\n        // if function, call it; if string, use it; if undefined, default to #333\n        ctx.fillStyle = (\n            typeof this.options.color === \"function\" ? this.options.color() :\n            typeof this.options.color === \"string\" ? this.options.color :\n            (isDark ? \"#909396\" : \"#333\"));\n        // positioning\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(message, this.position.x, this.position.y);\n        ctx.restore();\n    }\n}\n\nexport default Text;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass BinaryExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30, String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, false, 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default BinaryExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass ChoiceGate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: (Wire | null)[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size*2,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n        const offset = size * 0.5;\n        this.inputSockets = [\n            {x: -this.size.x * 1/3, y: 0},\n            {x: -offset, y: -this.size.y/2},\n            {x: +offset, y: -this.size.y/2}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.size.x*1.0, 0);\n        ctx.lineTo(this.size.x*0.67, this.size.y);\n        ctx.lineTo(this.size.x*0.33, this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // red input\n        const sx = this.size.x;\n        ctx.fillStyle = \"rgb(0, 204, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.25, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n        ctx.fillStyle = \"rgb(153, 0, 0, 0.75)\";\n        ctx.beginPath();\n        ctx.arc(sx*0.75, 1, sx*0.15, 0, Math.PI);\n        ctx.fill();\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] ? bits[1] : bits[2]];\n    }\n}\n\nexport default ChoiceGate;\n","// ChoiceExploration\n//\n// Exploration that shows how a multiplexer works.\n// I called it a \"choice gate\" because \"multiplexer\" and \"multiplier\" look too similar.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport ChoiceGate from './ChoiceGate';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass ChoiceExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputChoice = new InputBit(50, 90, false, 30);\n        const inputElse = new InputBit(100, 90, false, 30);\n        const inputIf = new InputBit(150, 90, false, 30);\n        this.components.push(inputChoice, inputIf, inputElse);\n\n        const inverter = new Not(115, 150, 30, 0);\n        this.components.push(inverter);\n        inverter.inputWires.push(new Wire(inputChoice, 0, [\n            {x: 115, y: 125},\n            {x: 50, y: 125},\n        ]));\n\n        // recursive components are a bit weird\n        const andIf = new AndGate(125, 200, 50, 0);\n        const andElse = new AndGate(75, 200, 50, 0);\n        const or = new OrGate(100, 250, 50, 0);\n\n        andIf.inputWires = [\n            new Wire(inverter, 0, []),\n            new Wire(inputIf, 0, [\n                {x: 135, y: 170},\n                {x: 150, y: 170},\n            ]),\n        ];\n        andElse.inputWires = [\n            new Wire(inputChoice, 0, [\n                {x: 65, y: 170},\n                {x: 50, y: 170},\n            ]),\n            new Wire(inputElse, 0, [\n                {x: 85, y: 170},\n                {x: 100, y: 170},\n            ]),\n        ];\n        or.inputWires = [\n            new Wire(andElse, 0, []),\n            new Wire(andIf, 0, []),\n        ];\n        this.components.push(andIf, andElse, or);\n\n\n        const output = new OutputBit(100, 300);\n        output.inputWires.push(new Wire(or, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputChoice2 = new InputBit(240, 120, false, 30);\n        const inputIf2 = new InputBit(280, 120, false, 30);\n        const inputElse2 = new InputBit(320, 120, false, 30);\n        const choice = new ChoiceGate(300, 200, 40);\n        const output2 = new OutputBit(300, 250);\n        choice.inputWires.push(new Wire(inputChoice2, 0, [\n            {x: inputChoice2.position.x, y: choice.position.y},\n        ]));\n        choice.inputWires.push(new Wire(inputIf2, 0));\n        choice.inputWires.push(new Wire(inputElse2, 0));\n        output2.inputWires.push(new Wire(choice, 0));\n\n        this.components.push(inputChoice2, inputIf2, inputElse2, choice, output2);\n        this.outputComponents.push(output2);\n    }\n\n}\n\nexport default ChoiceExploration;\n","// Clock.ts\n//\n// These clocks can have an arbitrary period.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass ChoiceGate implements Component {\n    public state: {bits: boolean[], clock: number};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    //\n    constructor(x: number, y: number, bits: number, width: number = 100, height: number = 50) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n        // because .fill() isn't supported?!\n        const bitArray: boolean[] = Array(bits).map(_ => false);\n        this.state = {\n            bits: bitArray,\n            clock: -1,\n        };\n        this.numBits = bits;\n        // \"power supply\" or more accurately a way to reset the clock\n        this.inputSockets = [\n            {x: 0, y: -this.size.y/2 - 1},\n        ];\n\n        this.outputSockets = [];\n        const spacing = width / bits;\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: (i - bits/2 + 1/2) * spacing,\n                y: this.size.y/2,\n            });\n        }\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.beginPath();\n        let r = Math.min(this.size.y * 0.2, this.size.x * 0.1);\n        const w = this.size.x, h = this.size.y;\n        ctx.moveTo(w*0.5, 0);\n        ctx.arcTo(w*1.0, 0, w*1.0, h*0.5, r);\n        ctx.arcTo(w*1.0, h*1.0, w*0.5, h*1.0, r);\n        ctx.arcTo(0, h*1.0, 0, h*0.5, r);\n        ctx.arcTo(0, 0, w*0.5, 0, r);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // power\n        ctx.translate(w/2, 0); // move origin to top-middle\n        ctx.beginPath();\n        ctx.moveTo(2, -5);\n        ctx.lineTo(2, -1);\n        ctx.lineTo(-2, -1);\n        ctx.lineTo(-2, -5);\n        ctx.stroke();\n\n        // clock\n        ctx.fillStyle = \"#e0e0e4\";\n        r = Math.min(w/3, h/3);\n        ctx.translate(0, h/2); // move origin to center\n        ctx.beginPath();\n        ctx.arc(0, 0, r, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.stroke();\n\n        // ticks\n        ctx.save();\n        const angle = 2*Math.PI / this.numBits;\n        for (let i = 0; i < this.numBits; i++) {\n            ctx.beginPath();\n            ctx.moveTo(0, -r);\n            ctx.lineTo(0, -r * 0.8 + 1);\n            ctx.stroke();\n\n            ctx.rotate(angle);\n        }\n        ctx.restore();\n\n        // hand\n        ctx.save();\n        ctx.rotate(this.state.clock * angle);\n        ctx.lineWidth *= 3;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(0, r*0.25);\n        ctx.lineTo(0, -r * 0.8);\n        ctx.stroke();\n        ctx.lineWidth *= 5/3;\n        ctx.beginPath();\n        ctx.arc(0, 0, 1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.restore();\n\n        // outputs\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            const socket = this.outputSockets[i];\n            ctx.fillStyle = (i == this.state.clock) ? \"#33ff33\" : \"#990000\";\n            ctx.beginPath();\n            ctx.arc(socket.x, socket.y, 5, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // Evaluation: the clock's state is set on\n    evaluate(bits: boolean[]): boolean[] {\n        let result = [];\n        for (let i = 0; i < this.numBits; i++) {\n            result.push(i == this.state.clock);\n        }\n        return result;\n    }\n\n    beforeUpdate() {\n        if (this.inputWires[0]?.get()) {\n            this.state.clock = (this.state.clock + 1) % this.numBits;\n        } else {\n            this.state.clock = -1;\n        }\n    }\n}\n\nexport default ChoiceGate;\n","// RegisterExploration\n//\n// Exploration that shows how a register bit works.\n// Most of these (not multipliers and dividers) have the expanded version on the left and a compact version on the right.\n\nimport Component from './Component';\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\n// pass the components and output components arrays\nfunction makeClock(x: number, y: number, bits: number, components: Component[], outputComponents: Component[]) {\n    const clock = new Clock(x, y, bits, 100, 60);\n    const powerButton = new InputBit(x, y - 100, true, 40);\n    clock.inputWires.push(new Wire(powerButton, 0));\n    components.push(clock, powerButton);\n    for (let i = 0; i < bits; i++) {\n        const output = new OutputBit(x + clock.outputSockets[i].x, y + 100);\n        output.inputWires.push(new Wire(clock, i));\n        components.push(output);\n        outputComponents.push(output);\n    }\n}\n\nclass ClockExploration extends Exploration {\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        makeClock(120, 200, 2, this.components, this.outputComponents);\n        makeClock(280, 200, 6, this.components, this.outputComponents);\n    }\n\n}\n\nexport default ClockExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass RegisterBit implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    beforeUpdate: undefined;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        // [0] is the off switch and [1] is the on switch\n        const offset = size * 0.44;\n        this.inputSockets = [\n            {x: -offset, y: -offset},\n            {x:  offset, y: -offset}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick: undefined;\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = this.state.bits[0] ? \"#33ff33\" : \"#990000\";\n        ctx.beginPath();\n        ctx.moveTo(this.size.x*0.5, 0);\n        ctx.lineTo(this.size.x*1.0, this.size.y*0.5);\n        ctx.lineTo(this.size.x*0.5, this.size.y);\n        ctx.lineTo(this.size.x*0.0, this.size.y*0.5);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // red input\n        ctx.fillStyle = \"#ccffff\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.25, this.size.y * 0.25, this.size.x * 0.25, 135*Math.PI/180, 315*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();\n        /*ctx.fillStyle = \"#33ff33\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.75, this.size.y * 0.25, this.size.x * 0.25, -135*Math.PI/180, 45*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();*/\n        if (this.inputWires[0] && this.inputWires[0].get()) {\n            ctx.beginPath();\n            ctx.moveTo(this.size.x * 0.75, this.size.y * 0.25);\n            ctx.lineTo(this.size.x * 1.0, 0);\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return bits[0] ? [bits[1]] : this.state.bits;\n    }\n}\n\nexport default RegisterBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass Subtractor implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50, height: number = width/2) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: height,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits + 1);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x*0.46, top);\n        ctx.lineTo(left + this.size.x*0.5,  top + this.size.x*0.05);\n        ctx.lineTo(left + this.size.x*0.54, top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x*0.95, this.position.y + socket.y + 10);\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = \"#333333\";\n            ctx.strokeStyle = (this.state.bits[i] ? '#33ff33' : '#990000');\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += (wire1.toComponent.state.bits[wire1.toOutput] ? 1 : 0) * (1 << i);\n            num2 += (wire2.toComponent.state.bits[wire2.toOutput] ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(String(num1) + \" - \" + String(num2), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        const answer = num1 - num2;\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) != 0;\n        }\n        //console.log(answerBits);\n        return answerBits;\n    }\n\n    beforeUpdate() {\n        // The simulation was having some bugs without this\n        this.state.bits = this.evaluate(this.inputWires.map(wire => (wire ? wire.get() : false)));\n    }\n}\n\nexport default Subtractor;\n","// DividerExploration.ts\n\n/*\n\nsteps:\n1. Start with dividend (numerator) in RIGHT half of remainder register\n2. Shift the remainder left\n3. Send the LEFT half in for subtraction\n4. If the result is negative, write it, else keep the remainder as is\n5. Put the opposite of the sign bit on the new 1 position\n6. Go back to step 2, although when the larger clock strikes, record the results (I expect it to be 2*6+3 or 3*6+5 cycles).\n\nnext steps:\n- carry from the subtractor needs to enter the choice gates\n- on purple, we get the subtraction results, and if the sign bit is off, we insert it into the register\n- also on purple, that sign bit needs to shift the LEFT\n\nI think I need to totally reconfigure the remainder part\n\nRemainder register:\n- If power button is off, set to zero (6-12) or numerator (0-5)\n- If power button is on:\n    - on purple we may receive a subtraction, but this only applies to bits 6-12\n    - on green we need to shift left, setting a carry bit. (This will require an additional register.)\n\n\n\n*/\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Subtractor from './Subtractor';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\n\nclass DividerExploration extends Exploration {\n    countdown: Clock;\n    remainderRight: number;\n    remainderSpacing: number;\n    startButton: InputBit;\n    numBits: number;\n\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 800;\n        canvas.height = 600;\n\n        // A lot of the same stuff happens compared to Multiplier...\n\n        const BITS = 6;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(695, 40, false, 50);\n        this.startButton = startButton;\n\n        // probably more user friendly\n        const thisExploration = this;\n        startButton.onClick = function() {\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.active) {\n                thisExploration.resume();\n            }\n            return true;\n        };\n\n        //const startNot = new Not(startButton.position.x - 50, 40, 30, 90);\n        //startNot.inputWires.push(new Wire(startButton, 0));\n        //this.components.push(startNot);\n\n        const clockX = 690;\n\n        const clockAnd = new AndGate(clockX, 100, 25, 0);\n        const clockNot = new Not(clockX, 150, 25, 0);\n        const clockBit = new OutputBit(clockX, 200);\n\n        clockAnd.inputWires.push(new Wire(clockNot, 0, [\n            {x: clockX - 5, y: 75},\n            {x: clockX - 20, y: 75},\n            {x: clockX - 20, y: 175},\n            {x: clockX, y: 175}\n        ]));\n        clockAnd.inputWires.push(new Wire(startButton, 0));\n        clockBit.inputWires.push(new Wire(clockNot, 0));\n        clockNot.inputWires.push(new Wire(clockAnd, 0));\n        this.components.push(clockAnd, clockNot, clockBit);\n        this.outputComponents.push(clockBit);\n\n        // ironic that I called the above a \"clock\"\n        // when the clock strikes 2*BITS + 4 it will end the operation\n        // but I add one more to avoid confusion\n        const countdown = new Clock(750, 230, 2*BITS + 4, 80, 50);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: countdown.position.x, y: 40},\n        ]));\n        this.countdown = countdown;\n\n        const subtractor = new Subtractor(210, 180, BITS, 260, 80);\n        //this.outputComponents.push(subtractor);\n\n        // Also not really a register.\n        let remainderRegister = [];\n        this.remainderRight = 680;\n        this.remainderSpacing = 52;\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(this.remainderRight - this.remainderSpacing*i, 460, 20);\n            remainderRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.25)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n        const blue = {color: \"rgba(32, 64, 128, 0.8)\"};\n        const blueFaded = {color: \"rgba(32, 64, 128, 0.4)\"};\n        //const yellow = {color: \"rgba(160, 160, 0)\"};\n\n        // Input Numbers (N/D). D = divisor, N = dividend\n        let inputN = [];\n        let inputD = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(340 - i*25, 40);\n            this.components.push(input);\n            inputN.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(340 - i*25, 110);\n            this.components.push(input);\n            inputD.push(input);\n        }\n\n        // Wires from the registers to the subtractor.\n        for (let i = 0; i < BITS; i++) {\n            const d = 3;\n            const bit = remainderRegister[i + BITS];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            const y2 = subtractor.position.y - 70;\n            subtractor.inputWires.push(new Wire(bit, 0, [\n                {x: subtractor.position.x + subtractor.inputSockets[i].x - 30 + d*i, y: y2 + d*i},\n                {x: 10 + d*i, y: y2 + d*i},\n                {x: 10 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\"}));\n        }\n        // The other subtractor registers (to the divisor)\n        for (let i = 0; i < BITS; i++) {\n            subtractor.inputWires.push(new Wire(inputD[i], 0));\n        }\n\n        // Choice Gates coming out of the subtractor (writes if subtracted).\n        let subtractorChoiceGates = [];\n        for (let i = 0; i < BITS; i++) {\n            //const x = subtractor.position.x + subtractor.outputSockets[i].x;\n            const y = subtractor.position.y + subtractor.outputSockets[0].y; // put them all on the same line\n            // space them a bit\n            const choice = new ChoiceGate(remainderRegister[i+BITS].position.x, y + 50, 10);\n            // choice depends on whether or not the carry bit is positive or negative\n            choice.inputWires.push(new Wire(subtractor, BITS, [\n                {x: choice.position.x - 15, y: choice.position.y},\n                {x: choice.position.x - 15, y: choice.position.y - 20},\n                {x: subtractor.position.x - subtractor.size.x/2, y: choice.position.y - 20},\n                {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y},\n            ], {color: \"#888\"}));\n            // if negative, we just re-use the remainder register\n            const regBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(regBit, 0, [\n                {x: choice.position.x + 5, y: choice.position.y - 10},\n                {x: choice.position.x + 20, y: choice.position.y - 10},\n                {x: choice.position.x + 20, y: regBit.position.y},\n            ], purple));\n            // otherwise we use the subtraction\n            choice.inputWires.push(new Wire(subtractor, i, [\n                {x: choice.position.x + 5, y: choice.position.y - 30},\n            ]));\n            subtractorChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Remainder Register\n        // includes many wires\n        // also includes register for holding the quotient input\n        const fullRow = [];\n        for (let i = 0; i <= 2*BITS; i++) {\n            const regBit = remainderRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            // This is the middle (full) row\n            const choice = new ChoiceGate(regBit.position.x + (i < BITS ? 5 : -1), regBit.position.y - 100, 14);\n            // Selection Wire (from clock's NOT)\n            choice.inputWires.push(new Wire(clockAnd, 0, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 40},\n                {x: 580 - 2*i, y: choice.position.y - 50 - 1*i},\n            ], purpleFaded));\n            // Purple action\n            if (i >= BITS && i < 2*BITS) {\n                // Upper Half of the Register: Conditionally connect to the subtractor.\n                choice.inputWires.push(new Wire(subtractorChoiceGates[i - BITS], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: choice.position.x - 7, y: choice.position.y - 25},\n                    {x: regBit.position.x - 19, y: choice.position.y - 25},\n                    {x: regBit.position.x - 19, y: regBit.position.y},\n                ], purple));\n            }\n            // Shifting\n            if (i > 0) {\n                choice.inputWires.push(new Wire(remainderRegister[i-1], 0, [\n                    {x: choice.position.x + 7, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: choice.position.y - 25},\n                    {x: regBit.position.x + 26, y: regBit.position.y + 0},\n                ], teal));\n            } else {\n                const holdWrite = new OutputBit(choice.position.x + 30, choice.position.y - 25, 20);\n                const notY = subtractorChoiceGates[0].position.y - 20;\n                const not = new Not(500, notY, 30, -90);\n                not.inputWires.push(new Wire(subtractor, BITS, [\n                    {x: subtractor.position.x - subtractor.size.x/2, y: notY},\n                    {x: subtractor.position.x - subtractor.size.x/2, y: subtractor.position.y}\n                ], {color: \"#888\"}));\n                // set on green\n                //holdWrite.inputWires.push(new Wire(clockNot, 0, [], teal));\n                // value is negated result of subtraction\n                holdWrite.inputWires.push(new Wire(not, 0, [], teal));\n                // maybe?\n                //choice.inputWires[1] = new Wire(holdWrite, 0, [], purple);\n                choice.inputWires.push(new Wire(holdWrite, 0, [], teal));\n                this.components.push(not, holdWrite);\n                this.outputComponents.push(holdWrite);\n            }\n\n            this.components.push(choice);\n            fullRow.push(choice);\n        }\n\n        // Computing the Quotient\n\n        // The second input register that is actually a register.\n        /*let divisorRegister: RegisterBit[] = [];\n        let divisorRegisterChoice = [];\n        for (let i = 0; i < BITS; i++) {\n            const reg = new RegisterBit(inputD[i].position.x - 4, 150, 20);\n            subtractor.inputWires.push(new Wire(reg, 0));\n            divisorRegister.push(reg);\n            this.components.push(reg);\n            this.outputComponents.push(reg);\n        }\n        // Wiring Divisor (denominator) to the Registers\n        for (let i = 0; i < BITS; i++) {\n            const reg = divisorRegister[i];\n            const or = new OrGate(reg.position.x - 9, reg.position.y - 25, 20, 0);\n            const choice = new ChoiceGate(reg.position.x + 9, reg.position.y - 55, 12);\n            reg.inputWires.push(new Wire(or, 0), new Wire(choice, 0));\n\n            const wirePath = [\n                {x: reg.position.x - 13, y: choice.position.y},\n                {x: reg.position.x - 13, y: startNot.position.y},\n            ];\n            or.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n            or.inputWires.push(new Wire(clockNot, 0, [\n                {x: or.position.x + 10, y: or.position.y - 18 - i/2},\n                {x: clockNot.position.x - 40, y: or.position.y - 18 - i},\n            ], tealFaded));\n\n            // choice gate is [0] ? [1] : [2]\n            // the selection comes first\n            choice.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n\n            // If the clock is off, the registers need to use the input bits\n            choice.inputWires.push(new Wire(inputD[i], 0));\n            // Else, move up\n            choice.inputWires.push(new Wire(divisorRegister[i+1] || null, 0, [\n                {x: reg.position.x + 15, y: choice.position.y - 15},\n                {x: reg.position.x - 22, y: choice.position.y - 15},\n                {x: reg.position.x - 22, y: reg.position.y + 10},\n            ]));\n\n            this.components.push(or, choice);\n        }*/\n\n        // Wiring Dividend to seed the remainder register\n        // (blue wires)\n        let dividendChoice: ChoiceGate[] = [];\n        for (let i = 0; i < BITS; i++) {\n            const regBit = remainderRegister[i];\n            const inBit = inputN[i];\n\n            // This is the one close to the lowest 6 registers\n            const choice = new ChoiceGate(regBit.position.x + 3, regBit.position.y - 50, 12);\n            // Wire coming from the start button\n            choice.inputWires.push(new Wire(startButton, 0, [\n                {x: choice.position.x - 15, y: choice.position.y},\n                {x: choice.position.x - 15, y: choice.position.y + 15},\n                {x: 770, y: choice.position.y + 15},\n                {x: 770, y: countdown.position.y + 40},\n                {x: clockX - 30, y: countdown.position.y + 40},\n                {x: clockX - 30, y: startButton.position.y + (startButton.position.x - clockX + 30)},\n            ], blue));\n\n            // If power is on, make it come from the teal/purple stuff\n            choice.inputWires.push(new Wire(fullRow[i], 0));\n\n            // Otherwise, set it to the input\n            const d = 3;\n            const y1 = countdown.position.y + 50;\n            const y2 = inBit.position.y + 30;\n            choice.inputWires.push(new Wire(inBit, 0, [\n                {x: choice.position.x + 6, y: choice.position.y - 10 - d*i},\n                {x: 760 - d*i, y: choice.position.y - 10 - d*i},\n                {x: 760 - d*i, y: y1 + d*i},\n                {x: clockX - 40 - d*i, y: y1 + d*i},\n                {x: clockX - 40 - d*i, y: y2 + d*i},\n                {x: inBit.position.x, y: y2 + d*i},\n            ], blueFaded));\n\n            this.components.push(choice);\n            dividendChoice.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Clearing the \"remainder\" (heh heh) of the register\n        // (blue wires)\n        for (let i = 0; i <= BITS; i++) {\n            const regBit = remainderRegister[i + BITS];\n            const and = new AndGate(regBit.position.x, regBit.position.y - 50, 24, 0);\n            // similar to above, use the full row if the power is on\n            and.inputWires.push(new Wire(fullRow[i+BITS], 0));\n            and.inputWires.push(new Wire(startButton, 0, [\n                {x: and.position.x + 5, y: and.position.y - 20},\n                {x: and.position.x + 13, y: and.position.y - 20},\n                {x: and.position.x + 13, y: and.position.y + 15},\n                {x: 770, y: and.position.y + 15},\n                {x: 770, y: countdown.position.y + 40},\n                {x: clockX - 30, y: countdown.position.y + 40},\n                {x: clockX - 30, y: startButton.position.y + (startButton.position.x - clockX + 30)},\n            ], blue));\n\n            this.components.push(and);\n            regBit.inputWires.push(new Wire(and, 0));\n        }\n\n        // Control Wire from the final register bit to the subtractor's output\n        /*const regLSB = divisorRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = subtractorChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 282, y: choice.position.y - 20},\n                {x: 282, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"rgb(127, 127, 127)\"}));\n            choice.inputWires.unshift(null);\n\n            // Else wire\n            const outBit = remainderRegister[i + BITS];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 5, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: choice.position.y - 10},\n                {x: outBit.position.x + 19, y: outBit.position.y - 19},\n            ], purpleFaded));\n        }*/\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i < 2*BITS; i++) {\n            const offset = (i < BITS ? 5 : -10);\n            const from = remainderRegister[i + (i >= BITS ? 1 : 0)];\n            const bit = new RegisterBit(from.position.x + offset, 580, 25);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 14th clock cycle\n            bit.inputWires.push(new Wire(countdown, 14, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: 790, y: bit.position.y - 30},\n                {x: 790, y: countdown.position.y + 40},\n                {x: countdown.position.x + countdown.outputSockets[14].x, y: countdown.position.y + 40},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const diagonal = 15;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayN = new Display(inputN[0].position.x + 50, inputN[0].position.y, inputN, false, 30);\n        const displayD = new Display(inputD[0].position.x + 50, inputD[0].position.y, inputD, false, 30);\n        const displayQ = new Display(557, 540, finalAnswer.slice(0, BITS), false, 30);\n        const displayR = new Display(200, 540, finalAnswer.slice(BITS, 2*BITS), false, 30);\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(subtractor, countdown, startButton, displayN, displayD, displayQ, displayR);\n    }\n\n    drawRemainderGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.remainderRight - left*this.remainderSpacing) - 15;\n        const x2 = (this.remainderRight - right*this.remainderSpacing) + 15;\n        const y = 480;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.33)\";\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n    }\n\n    afterRender = () => {\n        // display the quotient\n        const ctx = this.context;\n        ctx.save();\n\n        // get the clock cycle\n        const cycle = this.countdown.state.clock;\n        if (cycle >= 0 && cycle < 2*this.numBits+3) {\n            const n = (cycle+1) >> 1;\n            this.drawRemainderGuide(n + 5, n + 0, \"#33c\", \"Remainder\");\n\n            if (n > 1) {\n                this.drawRemainderGuide(n-2, Math.max(n-7, 0), \"#990\", \"Quotient\");\n            }\n        }\n\n        ctx.restore();\n\n        // not sure where to put this\n        if (cycle == 2 * this.numBits + 3) {\n            this.startButton.state.active = false;\n            this.startButton.state.bits = [false];\n        }\n    }\n}\n\nexport default DividerExploration;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate } from './Gates';\n\nclass FullAdderExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const inputA = new InputBit(80, 50, false, 30);\n        const inputB = new InputBit(200, 50, false, 30);\n        const inputC = new InputBit(300, 200, false, 30);\n        const output1 = new OutputBit(200, 340, 30);\n        const output2 = new OutputBit(100, 340, 30);\n\n        const and1 = new AndGate(inputA.position.x + 10, 140, 50, 0);\n        and1.inputWires.push(new Wire(inputA, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 40},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 140, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 40},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const xor2 = new XorGate(200, 280, 50, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 10, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 230, 50, 0);\n        and2.inputWires.push(new Wire(xor1, 0, [\n            {x: and2.position.x - 10, y: 180},\n            {x: xor1.position.x, y: 180, node: true},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 10, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 50, 0);\n        or2.inputWires.push(new Wire(and1, 0, [\n            {x: or2.position.x - 10, y: and1.position.y + 30},\n            {x: and1.position.x, y: and1.position.y + 30},\n        ]));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 10, y: (and2.position.y + or2.position.y + 12)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 12)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 27, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3);\n\n        // Number Display\n        const displayResult = new Display(320, 340, [output1, output2], false, 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\", { color: '#333' });\n        const text2 = new Text(output2.position.x, 375, 30, \"2\", { color: '#333' });\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3);\n    }\n}\n\nexport default FullAdderExploration1;\n","// FullAdderGates.ts\n//\n// Still just one bit each. That is, three total (A,B,carry).\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\nimport { AndGate, OrGate, XorGate, Not } from './Gates';\n\nclass FullSubtractorExploration1 extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const inputA = new InputBit(80, 50, false, 30);\n        const inputB = new InputBit(200, 50, false, 30);\n        const inputC = new InputBit(300, 200, false, 30);\n        const output1 = new OutputBit(200, 340, 30);\n        const output2 = new OutputBit(100, 340, 30);\n\n        const notA1 = new Not(inputA.position.x, inputA.position.y + 40, 30, 0);\n        notA1.inputWires.push(new Wire(inputA, 0));\n\n        const and1 = new AndGate(inputA.position.x + 10, 140, 50, 0);\n        and1.inputWires.push(new Wire(notA1, 0));\n        and1.inputWires.push(new Wire(inputB, 0, [\n            {x: and1.position.x + 10, y: and1.position.y - 40},\n        ]));\n\n        const xor1 = new XorGate(inputB.position.x - 10, 140, 50, 0);\n        xor1.inputWires.push(new Wire(inputA, 0, [\n            {x: xor1.position.x - 10, y: and1.position.y - 40},\n        ]));\n        xor1.inputWires.push(new Wire(inputB, 0));\n\n        const notX1 = new Not(xor1.position.x - 30, 180, 30, 90);\n        notX1.inputWires.push(new Wire(xor1, 0, [\n            {x: xor1.position.x, y: notX1.position.y, node: true},\n        ]));\n\n        const notX1Aid = new OutputBit(notX1.position.x - 25, notX1.position.y, 12);\n        notX1Aid.inputWires.push(new Wire(notX1, 0));\n\n        const xor2 = new XorGate(200, 280, 50, 0);\n        xor2.inputWires.push(new Wire(xor1, 0));\n        xor2.inputWires.push(new Wire(inputC, 0, [\n            {x: xor2.position.x + 10, y: inputC.position.y, node: true},\n        ]));\n\n        output1.inputWires.push(new Wire(xor2, 0));\n\n        const and2 = new AndGate(output2.position.x + 30, 230, 50, 0);\n        and2.inputWires.push(new Wire(notX1, 0, [\n            {x: and2.position.x - 10, y: notX1.position.y},\n        ]));\n        and2.inputWires.push(new Wire(inputC, 0, [\n            {x: and2.position.x + 10, y: inputC.position.y},\n        ]));\n\n        // or gate for the \"2\" output\n        const or2 = new OrGate(output2.position.x, output2.position.y - 44, 50, 0);\n        or2.inputWires.push(new Wire(and1, 0, [\n            {x: or2.position.x - 10, y: and1.position.y + 30},\n            {x: and1.position.x, y: and1.position.y + 30},\n        ]));\n        or2.inputWires.push(new Wire(and2, 0, [\n            // add 12 because of the output bit\n            {x: or2.position.x + 10, y: (and2.position.y + or2.position.y + 12)/2},\n            {x: and2.position.x, y: (and2.position.y + or2.position.y + 12)/2}\n        ]));\n        output2.inputWires.push(new Wire(or2, 0));\n\n        this.components.push(output1, output2, notA1, notX1, and1, xor1, and2, xor2, or2, inputA, inputB, inputC);\n\n        // for ease of visualization\n        const aid1 = new OutputBit(xor1.position.x, xor1.position.y + 27, 12);\n        aid1.inputWires.push(new Wire(xor1, 0));\n        const aid2 = new OutputBit(and1.position.x, and1.position.y + 27, 12);\n        aid2.inputWires.push(new Wire(and1, 0));\n        const aid3 = new OutputBit(and2.position.x, and2.position.y + 27, 12);\n        aid3.inputWires.push(new Wire(and2, 0));\n        this.components.push(aid1, aid2, aid3, notX1Aid);\n\n        // Number Display\n        const displayResult = new Display(320, 340, [output1, output2], \"2comp\", 42);\n        this.components.push(displayResult);\n\n        const labelA = new Text(inputA.position.x, 20, 30, \"A\");\n        const labelB = new Text(inputB.position.x, 20, 30, \"B\");\n        const labelC = new Text(inputC.position.x, inputC.position.y - 40, 30, \"C\");\n        const text1 = new Text(output1.position.x, 375, 30, \"1\");\n        const text2 = new Text(output2.position.x, 375, 30, \"Borrow\");\n        this.components.push(labelA, labelB, labelC, text1, text2);\n\n        // Updating\n        this.outputComponents.push(output1, output2, aid1, aid2, aid3, notX1Aid);\n    }\n}\n\nexport default FullSubtractorExploration1;\n","// GateExploration\n//\n// Basic exploration of AND, OR, XOR, and NOT gates\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass GateExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const types = [AndGate, OrGate, XorGate];\n        for (let i = 0; i < 3; i++) {\n            const bit1 = new InputBit(i*120 + 60, 40, false, 30);\n            const bit2 = new InputBit(i*120 + 120, 40, false, 30);\n            const gate = new types[i](i*120 + 90, 120, 60, 0);\n            gate.inputWires.push(new Wire(bit1, 0, [\n                {x: gate.position.x - 12, y: gate.position.y - 40},\n                {x: bit1.position.x, y: gate.position.y - 40},\n            ]));\n            gate.inputWires.push(new Wire(bit2, 0, [\n                {x: gate.position.x + 12, y: gate.position.y - 40},\n                {x: bit2.position.x, y: gate.position.y - 40},\n            ]));\n            const out = new OutputBit(i*120 + 90, 200, 30);\n            out.inputWires.push(new Wire(gate, 0));\n            this.components.push(gate, bit1, bit2, out);\n            this.outputComponents.push(out);\n        }\n\n        const notInput = new InputBit(420, 40, false, 30);\n        const notGate = new Not(420, 120, 60, 0);\n        notGate.inputWires.push(new Wire(notInput, 0));\n        const notOutput = new OutputBit(420, 200, 30);\n        notOutput.inputWires.push(new Wire(notGate, 0));\n        this.components.push(notGate, notInput, notOutput);\n        this.outputComponents.push(notOutput);\n    }\n\n}\n\nexport default GateExploration;\n","// HalfAdderCheat.ts\n//\n// The finished product with no accompanying circuit.\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass HalfAdderCheat extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 300, 300);\n\n        const inputA = new InputBit(100, 40, false, 30);\n        const inputB = new InputBit(200, 40, false, 30);\n        const output1 = new OutputBit(150, 240, 30);\n        const output2 = new OutputBit(75, 240, 30);\n        const adder = new Adder(150, 150, 1, 200, 100);\n        this.components.push(adder, inputA, inputB, output1, output2);\n        adder.inputWires.push(new Wire(inputA, 0));\n        adder.inputWires.push(new Wire(inputB, 0));\n        output1.inputWires.push(new Wire(adder, 0));\n        output2.inputWires.push(new Wire(adder, 1));\n\n        const displayResult = new Display(240, 250, [output1, output2], false, 40);\n        this.components.push(displayResult);\n        this.outputComponents.push(output1, output2);\n\n        const text1 = new Text(150, 275, 24, \"1\", { color: '#333' });\n        const text2 = new Text(75, 275, 24, \"2\", { color: '#333' });\n        this.components.push(text1, text2);\n    }\n}\n\nexport default HalfAdderCheat;\n","// NotSwitch.ts\n//\n// Switch between NOT gate and simple wire\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\n// NOTE: Make this abstract\n\nabstract class UserGate implements Component {\n    public state: {\n        bits: boolean[],\n        whichGate: number,\n    };\n    public numGates: number;\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n    public symbol: string = \"\";\n\n    constructor(x: number, y: number, size: number, rotation: number, bits: number, numGates: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        };\n        this.numGates = numGates;\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.15*sine),\n                },\n                {\n                    x: size * (0.15*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.15*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * -0.5*sine,\n                y: size * 0.5*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n    onClick(offsetX: number, offsetY: number): boolean {\n        // rotate them\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // the sizes are both the same\n        const realX = (offsetX * cosine + offsetY * sine) / this.size.x;\n        const realY = (offsetY * cosine - offsetY * sine) / this.size.y;\n        if (-0.3 < realY && realY < 0.3) {\n            if (-0.5 < realX && realX < -0.3) {\n                this.state.whichGate = (this.state.whichGate - 1 + this.numGates) % this.numGates;\n                return true;\n            }\n            if (0.3 < realX && realX < 0.5) {\n                this.state.whichGate = (this.state.whichGate + 1) % this.numGates;\n                return true;\n            }\n        }\n        return false;\n    };\n    beforeUpdate: undefined;\n\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D, isDark: boolean) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = isDark ? \"#222\" : \"#ddd\";\n        ctx.strokeStyle = isDark ? \"#aaa\" : \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        // this is new\n        const sx = this.size.x, sy = this.size.y;\n        ctx.beginPath();\n        ctx.moveTo(0,        sy * -0.5);\n        ctx.lineTo(sx *  0.4, sy * -0.5);\n        ctx.arcTo (sx *  0.5, sy * -0.5, sx *  0.5, sy * -0.4, sy * 0.1);\n        ctx.lineTo(sx *  0.5, sy *  0.4);\n        ctx.arcTo (sx *  0.5, sy *  0.5, sx *  0.4, sy *  0.5, sy * 0.1);\n        ctx.lineTo(sx * -0.4, sy *  0.5);\n        ctx.arcTo (sx * -0.5, sy *  0.5, sx * -0.5, sy *  0.4, sy * 0.1);\n        ctx.lineTo(sx * -0.5, sy * -0.4);\n        ctx.arcTo (sx * -0.5, sy * -0.5, sx * -0.4, sy * -0.5, sy * 0.1);\n        ctx.closePath();\n\n        ctx.stroke();\n        ctx.fill();\n\n        this.drawGate(ctx);\n\n        // arrow buttons\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.beginPath();\n        ctx.moveTo(sx * 0.5, 0);\n        ctx.lineTo(sx * 0.3, sy * -0.3);\n        ctx.lineTo(sx * 0.3, sy * +0.3);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.moveTo(sx * -0.5, 0);\n        ctx.lineTo(sx * -0.3, sy * -0.3);\n        ctx.lineTo(sx * -0.3, sy * +0.3);\n        ctx.fill();\n\n        ctx.rotate(-this.rotation);\n        ctx.font = Math.round(this.size.y * 0.6) + \"px monospace\";\n        ctx.fillStyle = isDark ? \"#939699\" : \"#333\";\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(this.symbol, 0, 0);\n\n        ctx.restore();\n    };\n\n    abstract evaluate(bits: boolean[]): boolean[];\n};\n\n// binary, as in operator, as in takes two inputs (and/or/xor)\nclass BinarySwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 2, 3);\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.6;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, this.size.y * +0.5);\n        const xOffset = this.size.x * 0.15;\n        ctx.moveTo(-xOffset, 0);\n        ctx.lineTo(-xOffset, this.size.y * -0.5);\n        ctx.moveTo(xOffset, 0);\n        ctx.lineTo(xOffset, this.size.y * -0.5);\n        ctx.stroke();\n\n        switch (this.state.whichGate) {\n            case 0: // and\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, -s * 0.4);\n                ctx.lineTo(s * 0.4, 0);\n                ctx.arc(0, 0, s * 0.4, 0, Math.PI);\n                ctx.lineTo(-s * 0.4, -s * 0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n                break;\n            case 1: // or\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n                ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n                break;\n            case 2: // xor\n                // do the or's path...\n                ctx.beginPath();\n                ctx.moveTo(s * 0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n                ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.35);\n                ctx.quadraticCurveTo(s * 0, s * -0.15, s * 0.4, s * -0.35);\n                ctx.closePath();\n                ctx.stroke();\n                ctx.fill();\n                // and the extra thing\n                ctx.beginPath();\n                ctx.moveTo(s * -0.4, s * -0.5);\n                ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n                ctx.stroke();\n                break;\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        return [(this.state.whichGate === 1) ? !bits[0] : bits[0]];\n    };\n}\n\nclass NotSwitch extends UserGate {\n    constructor(x: number, y: number, size: number, rotation: number) {\n        super(x, y, size, rotation, 1, 2);\n        this.state = {\n            bits: [false],\n            whichGate: 0,\n        }\n    }\n    beforeUpdate: undefined;\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y * 0.75;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, this.size.y * -0.5);\n        ctx.lineTo(0, this.size.y * +0.5);\n        ctx.stroke();\n\n        if (this.state.whichGate === 1) {\n            // triangle for the not\n            ctx.beginPath();\n            ctx.moveTo(0, s * 0.2);\n            ctx.lineTo(s * -0.25, s * -0.35);\n            ctx.lineTo(s * 0.25, s * -0.35);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n            ctx.stroke();\n            ctx.fill();\n        }\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        return [(this.state.whichGate === 1) ? !bits[0] : bits[0]];\n    }\n}\n\nexport {NotSwitch, BinarySwitch};\n","// MakeALUExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\nimport { NotSwitch, BinarySwitch } from './UserGates';\nimport Text from './Text';\n\nclass MakeALUExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 500, 500);\n\n        const adder = new Adder(180, 280, 4, 288, 120);\n        this.components.push(adder);\n\n        // need this up here...\n        const operBit = new InputBit(460, 70, true, 40);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(30 + 36*i, 60, false, 25);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[3-i].x, y: bit.position.y + 120 - 25*i},\n                {x: bit.position.x, y: bit.position.y + 120 - 25*i},\n            ]));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            // right side is more complicated\n            const bit2 = new InputBit(380 - 60*i, 60, false, 25);\n            const gate = new BinarySwitch(bit2.position.x + 6, bit2.position.y + 70, 40, 0);\n            gate.inputWires.push(new Wire(bit2, 0));\n            gate.inputWires.push(new Wire(operBit, 0, [\n                {x: gate.position.x + 6, y: gate.position.y - 30, node: (i !== 3)},\n                {x: operBit.position.x, y: gate.position.y - 30, node: true},\n            ]));\n            adder.inputWires.push(new Wire(gate, 0, [\n                {x: adder.position.x + adder.inputSockets[4+i].x, y: gate.position.y + 70 - 10*i},\n                {x: gate.position.x, y: gate.position.y + 70 - 10*i},\n            ]));\n            this.components.push(gate, bit2);\n            inputB.push(bit2);\n        }\n\n        // operation control\n        const operSwitch = new NotSwitch(operBit.position.x, operBit.position.y + 100, 50, 0);\n        const operText1 = new Text(operBit.position.x, operBit.position.y - 50, 20, \"OPER\");\n        const operText2 = new Text(operBit.position.x, operBit.position.y - 32, 20, function() {\n            return (operBit.state.bits[0]) ? \"(ADD)\" : \"(SUB)\";\n        });\n        operSwitch.inputWires.push(new Wire(operBit, 0));\n        adder.inputWires.push(new Wire(operSwitch, 0, [\n            {x: operSwitch.position.x, y: adder.position.y},\n        ]));\n        this.components.push(operSwitch, operBit, operText1, operText2);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 410, 25);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        // Displays\n        const displayA = new Display((inputA[1].position.x + inputA[2].position.x)/2, 25, inputA, true);\n        const displayB = new Display((inputB[1].position.x + inputB[2].position.x)/2, 25, inputB, true);\n        this.components.push(displayA, displayB, new Display(adder.position.x, 460, outputBits, true, 50));\n\n        // Error\n        const calc1 = new Text(370, 430, 30, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const op = operBit.state.bits[0];\n            const raw = op ? (a+b) : (a-b);\n            const overflow = ((raw + 24) % 16) - 8;\n            return `Actual: ${overflow}` + (raw === overflow ? \"\" : \"*\");\n        });\n        const overflowNote = new Text(370, 460, 20, \"* means overflow\");\n        this.components.push(calc1, overflowNote);\n    }\n}\n\nexport default MakeALUExploration;\n","// MultiplierExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Clock from './Clock';\nimport Display from './Display';\nimport {AndGate, OrGate, Not} from './Gates';\nimport ChoiceGate from './ChoiceGate';\nimport Text from './Text';\n\nclass MultiplierExploration extends Exploration {\n    countdown: Clock;\n    regSpacing: number;\n    regRight: number;\n    productRegister: OutputBit[];\n    numBits: number;\n    startButton: InputBit;\n\n    animated: boolean = true;\n\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n        canvas.width = 750;\n        canvas.height = 600;\n\n        const BITS = 6;\n        this.numBits = BITS;\n\n        const startButton = new InputBit(710, 60, false, 50);\n        this.startButton = startButton;\n        const startText = new Text(startButton.position.x, startButton.position.y - 35, 24, function() {\n            return (startButton.state.bits[0]) ? \"ABORT\" : \"START\";\n        });\n        this.components.push(startText);\n\n        const thisExploration = this;\n        startButton.onClick = function() {\n            startButton.constructor.prototype.onClick.apply(startButton, arguments);\n            if (startButton.state.active) {\n                thisExploration.resume();\n            }\n            return true;\n        };\n\n        const startNot = new Not(startButton.position.x - 60, 40, 30, 90);\n        startNot.inputWires.push(new Wire(startButton, 0));\n        this.components.push(startNot);\n\n        const clockX = startButton.position.x - 5;\n\n        const clockAnd = new AndGate(clockX, 110, 25, 0);\n        const clockNot = new Not(clockX, 150, 25, 0);\n        const clockBit = new OutputBit(clockX, 200);\n\n        clockAnd.inputWires.push(new Wire(clockNot, 0, [\n            {x: clockX - 5, y: startButton.position.y + 30},\n            {x: clockX - 15, y: startButton.position.y + 30},\n            {x: clockX - 15, y: clockNot.position.y + 30},\n            {x: clockX, y: clockNot.position.y + 30}\n        ]));\n        clockAnd.inputWires.push(new Wire(startButton, 0));\n        clockBit.inputWires.push(new Wire(clockNot, 0));\n        clockNot.inputWires.push(new Wire(clockAnd, 0));\n        this.components.push(clockAnd, clockNot, clockBit);\n        this.outputComponents.push(clockBit);\n\n        // ironic that I called the above a \"clock\"\n        // when the clock strikes 2*BITS + 1 it will end the operation\n        const countdown = new Clock(clockX - 20, 260, 14, 80, 50);\n        countdown.inputWires.push(new Wire(startButton, 0, [\n            {x: countdown.position.x, y: countdown.position.y - 40},\n            {x: clockX - 30, y: countdown.position.y - 40},\n            {x: clockX - 30, y: startButton.position.y},\n        ]));\n        this.countdown = countdown;\n\n        const adder = new Adder(180, 190, BITS, 270, 90);\n        //this.outputComponents.push(adder);\n\n        // The \"Register\" that really isn't.\n        // The Add and Shift steps should be successfully separated...\n        let productRegister = [];\n        this.regRight = 660;\n        this.regSpacing = 50;\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(this.regRight - this.regSpacing*i, 400, 20);\n            productRegister.push(reg);\n            this.outputComponents.unshift(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 32, 128)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.4)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.35)\"};\n\n        // Wires from the registers to the adder.\n        for (let i = 0; i < BITS; i++) {\n            const d = 3;\n            const bit = productRegister[i + BITS];\n            // basically, we want the most significant bit to be highest\n            const y1 = bit.position.y + 15 + d * (BITS - i);\n            adder.inputWires.push(new Wire(bit, 0, [\n                {x: adder.position.x + adder.inputSockets[i].x, y: 110 + d*i},\n                {x: 10 + d*i, y: 110 + d*i},\n                {x: 10 + d*i, y: y1},\n                {x: bit.position.x, y: y1},\n            ], {color: \"rgba(128, 0, 128, 0.75)\"}));\n        }\n\n        // And Gates coming out of the adder (for the clock).\n        let adderChoiceGates = [];\n        for (let i = 0; i <= BITS; i++) {\n            // and gate\n            //const x = adder.position.x + adder.outputSockets[i].x;\n            const y = adder.position.y + adder.outputSockets[0].y; // put them all on the same line\n            // space them a bit\n            const choice = new ChoiceGate(productRegister[i+BITS].position.x + 7, y + 50, 10);\n            // this will be input 0 temporarily but we will unshift later\n            choice.inputWires.push(new Wire(adder, i));\n            adderChoiceGates.push(choice);\n            this.components.push(choice);\n        }\n\n        // Shifting the Multiplication Register\n        for (let i = 0; i < 2*BITS + 1; i++) {\n            const regBit = productRegister[i];\n            /*const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));*/\n\n            const choice = new ChoiceGate(regBit.position.x, regBit.position.y - 40, 14);\n            // Selection Wire (from clock's NOT)\n            choice.inputWires.push(new Wire(clockNot, 0, [\n                {x: choice.position.x - 18, y: choice.position.y},\n                {x: choice.position.x - 18, y: choice.position.y - 38 - 2*i},\n                {x: 630 - 2*i, y: choice.position.y - 38 - 2*i},\n            ], tealFaded));\n            // Shifting\n            if (i < 2*BITS) {\n                choice.inputWires.push(new Wire(productRegister[i+1], 0, [\n                    {x: regBit.position.x - 7, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: choice.position.y - 20},\n                    {x: regBit.position.x - 24, y: regBit.position.y},\n                ], teal));\n            } else {\n                choice.inputWires.push(null);\n            }\n            if (i >= BITS) {\n                // Upper Half of the Register: Conditionally connect to the adder.\n                choice.inputWires.push(new Wire(adderChoiceGates[i - BITS], 0, [], purple));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                choice.inputWires.push(new Wire(regBit, 0, [\n                    {x: regBit.position.x + 7, y: choice.position.y - 20},\n                    {x: regBit.position.x + 20, y: choice.position.y - 20},\n                    {x: regBit.position.x + 20, y: regBit.position.y},\n                ], purple));\n            }\n\n            this.components.push(choice);\n            regBit.inputWires.push(new Wire(choice, 0));\n        }\n\n        // Input Numbers (A and B).\n        let inputA = [];\n        let inputB = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(320 - i*30, 60, false, 25);\n            this.components.push(input);\n            adder.inputWires.push(new Wire(input, 0));\n            inputA.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(630 - i*50, 60, false, 25);\n            this.components.push(input);\n            inputB.push(input);\n        }\n\n        // The second input register that is actually a register.\n        let multiplierRegister: RegisterBit[] = [];\n        let multiplierRegisterChoice = [];\n        for (let i = 0; i < BITS; i++) {\n            const reg = new RegisterBit(inputB[i].position.x - 4, 170, 20);\n            multiplierRegister.push(reg);\n            this.components.push(reg);\n            this.outputComponents.push(reg);\n        }\n        // Wiring to the Registers\n        for (let i = 0; i < BITS; i++) {\n            const reg = multiplierRegister[i];\n            const or = new OrGate(reg.position.x - 9, reg.position.y - 25, 20, 0);\n            const choice = new ChoiceGate(reg.position.x + 9, reg.position.y - 60, 12);\n            reg.inputWires.push(new Wire(or, 0), new Wire(choice, 0));\n\n            const wirePath = [\n                {x: reg.position.x - 13, y: choice.position.y, node: true},\n                {x: reg.position.x - 13, y: startNot.position.y, node: (i < BITS-1)},\n            ];\n            or.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n            or.inputWires.push(new Wire(clockNot, 0, [\n                {x: or.position.x + 10, y: or.position.y - 18 - i/2},\n                {x: clockNot.position.x - 40, y: or.position.y - 18 - i},\n            ], tealFaded));\n\n            // choice gate is [0] ? [1] : [2]\n            // the selection comes first\n            choice.inputWires.push(new Wire(startNot, 0, wirePath, {color: \"rgba(100, 100, 130, 0.75)\"}));\n\n            // If the clock is off, the registers need to use the input bits\n            choice.inputWires.push(new Wire(inputB[i], 0));\n            // Otherwise hold\n            choice.inputWires.push(new Wire(multiplierRegister[i+1] || null, 0, [\n                {x: reg.position.x + 15, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y - 80},\n                {x: reg.position.x - 22, y: reg.position.y + 10},\n            ]));\n\n            this.components.push(or, choice);\n        }\n\n        // Control Wire from the final register bit to the adder's output\n        const regLSB = multiplierRegister[0];\n        for (let i = 0; i <= BITS; i++) {\n            const choice = adderChoiceGates[i];\n            // Selector Wire\n            choice.inputWires.unshift(new Wire(regLSB, 0, [\n                {x: choice.position.x - 13, y: choice.position.y},\n                {x: choice.position.x - 13, y: choice.position.y - 20},\n                {x: 400, y: choice.position.y - 20},\n                {x: 400, y: regLSB.position.y + 20},\n                {x: regLSB.position.x, y: regLSB.position.y + 20},\n            ], {color: \"rgb(127, 127, 127)\"}));\n\n            // Else wire\n            const outBit = productRegister[i + BITS];\n            choice.inputWires.push(new Wire(outBit, 0, [\n                {x: choice.position.x + 4, y: choice.position.y - 10},\n                {x: choice.position.x + 11, y: choice.position.y - 10},\n                {x: outBit.position.x + 18, y: 305 + 2*i},\n                {x: outBit.position.x + 18, y: outBit.position.y - 18},\n            ], purpleFaded));\n        }\n\n        // Answer Register\n        const finalAnswer: RegisterBit[] = [];\n        for (let i = 0; i <= 2*BITS; i++) {\n            const offset = 5;\n            const bit = new RegisterBit(productRegister[i].position.x + offset, 510, 30);\n            this.components.push(bit);\n            this.outputComponents.push(bit);\n\n            // set wire: on at the 12th clock cycle\n            bit.inputWires.push(new Wire(countdown, 12, [\n                {x: bit.position.x - 15, y: bit.position.y - 15},\n                {x: bit.position.x - 15, y: bit.position.y - 30},\n                {x: clockX + 20, y: bit.position.y - 30},\n                {x: clockX + 20, y: countdown.position.y + 40},\n                {x: countdown.position.x + countdown.outputSockets[12].x, y: countdown.position.y + 40},\n            ], {color: \"rgb(128, 128, 128)\"}));\n\n            // what wire: from the corresponding from the product \"register\"\n            const from = productRegister[i];\n            const diagonal = 16;\n            bit.inputWires.push(new Wire(from, 0, [\n                {x: bit.position.x + diagonal, y: bit.position.y - diagonal},\n                {x: from.position.x + diagonal + offset, y: from.position.y + diagonal + offset},\n            ]));\n\n            finalAnswer.push(bit);\n        }\n\n        // finally, add displays\n        const displayA = new Display(245, 25, inputA, false, 30);\n        const displayB = new Display(510, 20, inputB, false, 30);\n        const displayEnd = new Display(400, 565, finalAnswer, false, 60);\n        displayEnd.size.x = 2*displayEnd.size.y;\n\n        // rendering trick, because input wires are drawn with a component\n        // so pushing these last makes them render last so it looks cleaner\n        this.components.push(adder, countdown, startButton, displayA, displayB, displayEnd);\n        this.productRegister = productRegister;\n    }\n\n    drawProductGuide(left: number, right: number, color: string, text: string) {\n        const ctx = this.context;\n        const x1 = (this.regRight - left*this.regSpacing) - 15;\n        const x2 = (this.regRight - right*this.regSpacing) + 15;\n        const y = 435;\n        ctx.save();\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"none\";\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(x1, y);\n        ctx.lineTo(x1 + 10, y + 10);\n        ctx.lineTo(x2 - 10, y + 10);\n        ctx.lineTo(x2, y);\n        ctx.stroke();\n\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.75)\";\n        ctx.lineWidth = 16;\n        ctx.fillStyle = color;\n        ctx.font = \"30px monospace\";\n        ctx.strokeText(text, (x1 + x2)/2, y + 25);\n        ctx.fillText(text, (x1 + x2)/2, y + 25);\n        ctx.restore();\n    }\n\n    afterRender = () => {\n        const ctx = this.context;\n\n        const cycle = this.countdown.state.clock;\n        if (cycle >= 0) {\n            const n = (cycle + 1) >> 1;\n            if (n <= 5) {\n                ctx.fillStyle = \"rgba(255,255,255,0.75)\";\n                const west = (this.regRight - this.regSpacing * (5-n)) - 20;\n                const north = 340, south = 480;\n                const east = (this.regRight) + 22;\n                ctx.beginPath();\n                ctx.moveTo(west, north);\n                ctx.lineTo(east, north);\n                ctx.lineTo(east, south);\n                ctx.lineTo(west, south);\n                ctx.fill();\n            }\n\n            if (n <= 6) {\n                // product value\n                let productValue = 0;\n                for (let i = 0; i < this.numBits + n; i++) {\n                    const bit = this.productRegister[i + (6-n)];\n                    productValue += Number(bit.state.bits[0]) * (1 << i);\n                }\n\n                this.drawProductGuide(2 * this.numBits, this.numBits - n, \"#33c\", `Product (${productValue})`);\n            }\n        }\n\n        if (cycle == 2*this.numBits + 1) {\n            this.startButton.state.active = false;\n            this.startButton.state.bits = [false];\n        }\n    }\n}\n\nexport default MultiplierExploration;\n","// MultiplierNaiveExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate} from './Gates';\nimport Display from './Display';\n\nclass MultiplierNaiveExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 600, 600);\n\n        const blue = {color: \"rgba(32,32,128,0.75)\"};\n        const teal = {color: \"rgba(96,160,160,1)\"};\n\n        const numBits = 4;\n\n        let inputA = [], inputB = [], outputBits = [];\n\n        for (let i = 0; i < numBits; i++) {\n            const bitA = new InputBit(140 - 35*i, 30, false, 30);\n            inputA.push(bitA);\n\n            const bitB = new InputBit(465 - 35*i, 30, false, 30);\n            inputB.push(bitB);\n        }\n\n        let adders = [];\n        for (let i = 0; i < numBits; i++) {\n            const adder = new Adder(430 - 75*i, 170 + 105*i, numBits, 200, 60);\n            adders.push(adder);\n\n            for (let j = 0; j < numBits; j++) {\n                const and = new AndGate(\n                    adder.position.x + adder.inputSockets[j].x,\n                    adder.position.y - adder.size.y/2 - 20,\n                    20,\n                    0\n                );\n                and.inputWires.push(new Wire(inputA[i], 0, [\n                    {x: and.position.x - 6, y: and.position.y - 20},\n                    {x: inputA[i].position.x, y: and.position.y - 20},\n                ], blue));\n\n                const d1 = 24 + 3*i - (8+i)*j;\n                and.inputWires.push(new Wire(inputB[j], 0, (i > 0) ? [\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: and.position.x + 4 - d1, y: and.position.y - 28 - d1},\n                    {x: and.position.x + 4 - d1, y: inputB[j].position.y + 30 + 8*j, node: true},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ] : [\n                    // don't need the bending\n                    {x: and.position.x + 4, y: and.position.y - 28},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j},\n                    {x: inputB[j].position.x, y: inputB[j].position.y + 30 + 8*j, node: true},\n                ], teal));\n                this.components.push(and);\n                adder.inputWires.push(new Wire(and, 0));\n            }\n\n            if (i > 0) {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(new Wire(adders[i-1], j + 1));\n                }\n            } else {\n                for (let j = 0; j < numBits; j++) {\n                    adder.inputWires.push(null);\n                }\n            }\n        }\n\n\n        for (let i = 0; i < 2*numBits; i++) {\n            const outBit = new OutputBit(440 - 50*i, 570, 25);\n            if (i < numBits) {\n                outBit.inputWires.push(new Wire(adders[i], 0));\n            } else {\n                outBit.inputWires.push(new Wire(adders[numBits-1], i - numBits + 1));\n            }\n            outputBits.push(outBit);\n        }\n\n\n        const displayA = new Display(200, 30, inputA, false, 32);\n        const displayB = new Display(525, 30, inputB, false, 32);\n        const displayOutput = new Display(550, 570, outputBits, false, 40);\n        this.components.push(...outputBits, ...adders, ...inputA, ...inputB);\n        this.components.push(displayA, displayB, displayOutput);\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default MultiplierNaiveExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass OnesComplementExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"1comp\");\n        const displayB = new Display(365, 30, inputB, \"1comp\");\n        const displayResult = new Display(200, 350, outputBits, \"1comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default OnesComplementExploration;\n","// BinaryExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass SignMagnitudeExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 480, 240);\n\n        const NUM_BITS = 6;\n        let bitArray = [];\n        for (let i = 0; i < NUM_BITS; i++) {\n            const bit = new InputBit(440 - 80*i, 80, false, 30);\n            bitArray.push(bit);\n\n            const text = new Text(bit.position.x, bit.position.y / 2, 30,\n                i == 5 ? \"±\" : String(2**i));\n            this.components.push(text);\n        }\n\n        this.components.push(...bitArray);\n        this.outputComponents.push(...bitArray);\n\n        const display = new Display(240, 160, bitArray, \"signmag\", 48);\n        this.components.push(display);\n        this.outputComponents.push(display);\n    }\n}\n\nexport default SignMagnitudeExploration;\n","// adderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport { Not } from './Gates';\n\nclass SubtractorExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 400);\n\n        const adder = new Adder(200, 200, 4, 216);\n        this.components.push(adder);\n\n        let inputA = [], inputB = [];\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(adder.position.x + adder.inputSockets[3-i].x, 60);\n            adder.inputWires.unshift(new Wire(bit, 0));\n            this.components.push(bit);\n            inputA.unshift(bit);\n\n            const bit2 = new InputBit(adder.position.x + adder.inputSockets[4+i].x, 60);\n            const not = new Not(bit2.position.x, bit2.position.y + 50, 30, 0);\n            not.inputWires.push(new Wire(bit2, 0));\n            adder.inputWires.push(new Wire(not, 0));\n            this.components.push(bit2, not);\n            inputB.push(bit2);\n        }\n        const floatingNot = new Not(320, 200, 30, 90);\n        adder.inputWires.push(new Wire(floatingNot, 0));\n        this.components.push(floatingNot);\n        const outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + adder.outputSockets[i].x, 310);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n        this.outputComponents.push(...outputBits);\n        this.components.push(...outputBits);\n\n        this.components.push(new Display(150, 25, inputA, true));\n        this.components.push(new Display(250, 25, inputB, true));\n        this.components.push(new Display(adder.position.x, 360, outputBits, true, 40));\n\n    }\n}\n\nexport default SubtractorExploration;\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport Display from './Display';\nimport Text from './Text';\n\nclass TwosCompAdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas, 400, 300);\n\n        const adder = new Adder(200, 160, 4);\n        this.components.push(adder);\n\n        let inputA = [];\n        let inputB = [];\n\n        for (let i = 0; i < 4; i++) {\n            const y = 90 - i*10;\n            const bitA = new InputBit(adder.position.x - 100 + i*25, 30);\n            adder.inputWires.unshift(new Wire(bitA, 0, [\n                {x: bitA.position.x + 12.5, y: y},\n                {x: bitA.position.x, y: y},\n            ]));\n            inputA.unshift(bitA);\n\n            const bitB = new InputBit(adder.position.x + 100 - i*25, 30);\n            adder.inputWires.push(new Wire(bitB, 0, [\n                {x: bitB.position.x - 12.5, y: y},\n                {x: bitB.position.x, y: y},\n            ]));\n            inputB.push(bitB);\n        }\n\n        let outputBits = [];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(adder.position.x + 37.5 - i*25, 260);\n            output.inputWires.push(new Wire(adder, i, []));\n            outputBits.push(output);\n        }\n\n        this.components.push(...inputA, ...inputB, ...outputBits);\n\n        const displayA = new Display(35, 30, inputA, \"2comp\");\n        const displayB = new Display(365, 30, inputB, \"2comp\");\n        const displayResult = new Display(200, 350, outputBits, \"2comp\", 40);\n\n        const calc1 = new Text(330, 230, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            return `Correct: ${a + b}`;\n        });\n        const calc2 = new Text(calc1.position.x, calc1.position.y + 25, 20, function() {\n            const displayed = displayResult.getValue();\n            return `Guess: ${displayed}`;\n        });\n        const calc3 = new Text(calc2.position.x, calc2.position.y + 25, 20, function() {\n            const a = Number(displayA.getValue());\n            const b = Number(displayB.getValue());\n            const sum = Number(displayResult.getValue());\n            const error = sum - a - b;\n            return `Error: ${(error <= 0 ? '' : '+')}${error}`;\n        });\n\n        this.components.push(displayA, displayB, displayResult, calc1, calc2, calc3);\n\n        this.outputComponents.push(...outputBits);\n    }\n}\n\nexport default TwosCompAdderExploration;\n","\nimport Exploration from './Exploration';\n\n// Alphabetized because... idunno\nimport AdderExploration from './AdderExploration';\nimport AdderFailExploration from './AdderFailExploration';\nimport BinaryExploration from './BinaryExploration';\nimport ChoiceExploration from './ChoiceExploration';\nimport ClockExploration from './ClockExploration';\nimport DividerExploration from './DividerExploration';\nimport FullAdderExploration1 from './FullAdderGates';\nimport FullSubtractorExploration1 from './FullSubtractorGates';\nimport GateExploration from './GateExploration';\nimport HalfAdderCheat from './HalfAdderCheat';\nimport MakeALUExploration from './MakeALUExploration';\nimport MultiplierExploration from './MultiplierExploration';\nimport MultiplierNaiveExploration from './MultiplierNaiveExploration';\nimport OnesComplementExploration from './OnesComplementExploration';\nimport RegisterExploration from './RegisterExploration';\nimport SignMagnitudeExploration from './SignMagnitudeExploration';\nimport SubtractorExploration from './SubtractorExploration';\nimport TwosCompAdderExploration from './TwosCompAdderExploration';\n\nfunction createCanvas(): HTMLCanvasElement {\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    return canvas;\n}\n\n// in milliseconds\nconst UPDATE_TIMES = [4000, 2500, 1600, 1000, 630, 400, 250]\n\nfunction createExploration(id: string, type: typeof Exploration): Exploration | undefined {\n    const element = document.getElementById(id);\n    if (!element) {\n        console.warn(\"Document element \" + id + \" not found.\");\n        return;\n    }\n\n    element.className += \" row\";\n\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.className = \"canvas-wrapper col-auto\";\n    const canvas = createCanvas();\n    canvasWrapper.appendChild(canvas);\n    element.appendChild(canvasWrapper);\n\n    const exploration = new type(canvas);\n    exploration.update();\n    canvas.addEventListener(\"click\", function(event) {\n        exploration.onClick(event.offsetX, event.offsetY);\n    });\n\n    // For animated explorations, have speed controls\n    if (exploration.animated) {\n        const controls = document.createElement(\"div\");\n        controls.className = \"controls col-auto\";\n        controls.innerHTML = `\n            <h4>Speed</h4>\n            <p style=\"margin-top: 0\">\n                Slow\n                <input id=\"speed-${id}\" name=\"speed\" type=\"range\" min=\"0\" max=\"${UPDATE_TIMES.length - 1}\" />\n                Fast\n            </p>\n            <div class=\"buttons\">\n                <button id=\"pause-${id}\">Pause</button>\n                <button id=\"resume-${id}\">Play</button>\n                <button id=\"step-${id}\">Step</button>\n            </div>\n        `;\n        // get those buttons\n        controls.querySelector(\"#speed-\" + id)!.addEventListener(\"change\", function(event) {\n            exploration.updateTime = UPDATE_TIMES[Number((event.target as HTMLInputElement).value)];\n        });\n        element.appendChild(controls);\n\n        const pauseButton = (controls.querySelector(\"#pause-\" + id) as HTMLButtonElement);\n        exploration.pause = function() {\n            exploration.constructor.prototype.pause.call(exploration);\n            pauseButton.disabled = true;\n            resumeButton.disabled = false;\n        };\n        pauseButton.addEventListener(\"click\", exploration.pause);\n        pauseButton.disabled = true;\n        const resumeButton = controls.querySelector(\"#resume-\" + id) as HTMLButtonElement;\n        exploration.resume = function() {\n            exploration.constructor.prototype.resume.call(exploration);\n            pauseButton.disabled = false;\n            resumeButton.disabled = true;\n        };\n        resumeButton.addEventListener(\"click\", exploration.resume);\n        controls.querySelector(\"#step-\" + id)!.addEventListener(\"click\", exploration.update.bind(exploration));\n\n        //exploration.resume();\n    }\n\n    return exploration;\n}\n\n\n\n// Explorations\n// {htmlId: Class}\nconst explorationMap: {[id: string]: typeof Exploration} = {\n    // part 1 (and maybe part 2 as well)\n    'binary-basic': BinaryExploration,\n    'adder': AdderExploration,\n    'gates': GateExploration,\n    'choice': ChoiceExploration,\n    'half-adder-cheat': HalfAdderCheat,\n    'gates-again': GateExploration,\n    'full-adder1': FullAdderExploration1,\n    'clock': ClockExploration,\n\n    // part 2\n    'signmag': SignMagnitudeExploration,\n    'adder-fail': AdderFailExploration,\n    'full-subtractor1': FullSubtractorExploration1,\n    'ones-complement': OnesComplementExploration,\n    'twos-comp-adder': TwosCompAdderExploration,\n    'subtractor': SubtractorExploration,\n    'make-alu': MakeALUExploration,\n\n    // part 3\n    'multiplier-naive': MultiplierNaiveExploration,\n    'multiplier-full': MultiplierExploration,\n    'divider-full': DividerExploration,\n};\nlet ALL_EXPLORATIONS: (Exploration | undefined)[] = [];\nfor (let id in explorationMap) {\n    ALL_EXPLORATIONS.push(createExploration(id, explorationMap[id]));\n}\n\nlet isDark = false;\n\nfunction renderLoop() {\n    // TODO: Put this in exploration\n    for (let i = 0; i < ALL_EXPLORATIONS.length; i++) {\n        const exploration = ALL_EXPLORATIONS[i];\n        if (exploration) {\n            exploration.render(isDark);\n        }\n    }\n    requestAnimationFrame(renderLoop);\n}\nrenderLoop();\n\n// some other stuff\nfunction fillInteractiveTable(table: HTMLTableElement | null) {\n    if (table === null) return;\n    const html = `<input type=\"number\" min=\"0\" max=\"1\" size=\"3\" />`;\n    const fillIn = table.tBodies[0].getElementsByTagName(\"tr\");\n    for (let i = 0; i < fillIn.length; i++) {\n        const out1 = document.createElement(\"td\");\n        out1.innerHTML = html;\n        const out2 = document.createElement(\"td\");\n        out2.innerHTML = html;\n        fillIn[i].appendChild(out1);\n        fillIn[i].appendChild(out2);\n    }\n}\nfillInteractiveTable(document.getElementById(\"fill-in\") as (HTMLTableElement | null));\n\nfunction setDark(on: boolean) {\n    if (on) {\n        document.body.style.backgroundColor = \"#212529\";\n        document.body.style.color = \"#909396\";\n        isDark = true;\n    } else {\n        document.body.style.backgroundColor = \"#fff\";\n        document.body.style.color = \"#212519\";\n        isDark = false;\n    }\n    renderLoop();\n}\n\nsetDark(false);\n"]}