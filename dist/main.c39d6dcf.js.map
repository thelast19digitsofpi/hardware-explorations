{"version":3,"sources":["Exploration.ts","InputBit.ts","OutputBit.ts","Adder.ts","Wire.ts","Gates.ts","AdderExploration.ts","MultiplierExploration.ts","RegisterBit.ts","RegisterExploration.ts","main.ts","../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src","sourcesContent":["// Exploration.ts\n//\n// This might be something a little more interesting\n\nimport Component from './Component';\n\nclass Exploration {\n    public canvas: HTMLCanvasElement;\n    public context: CanvasRenderingContext2D;\n    public components: Array<Component>;\n    // The idea is that all components update their state recursively starting here\n    public outputComponents: Array<Component>;\n\n    public updateTime: number = 1000;\n    public lastUpdated: number = Date.now();\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d')!;\n        this.components = [];\n        this.outputComponents = [];\n\n        // TS-safe way of putting a random debug name\n        let id = Math.floor(Math.random() * 1e6);\n        Object.defineProperty(window, \"exploration\" + id, {\n            value: this,\n        });\n        console.log(id, this);\n    }\n\n    // todo: addComponent() maybe?\n\n    render() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        for (let i = 0; i < this.components.length; i++) {\n            this.context.save();\n            // render wires first\n            const comp = this.components[i];\n            for (let j = 0; j < comp.inputWires.length; j++) {\n                const position = {\n                    x: comp.position.x + comp.inputSockets[j].x,\n                    y: comp.position.y + comp.inputSockets[j].y,\n                };\n                comp.inputWires[j].render(this.context, position);\n            }\n            this.components[i].render(this.context);\n            this.context.restore();\n        }\n    }\n\n    onClick(canvasX: number, canvasY: number) {\n        for (let i = 0; i < this.components.length; i++) {\n            const component = this.components[i];\n            const offsetX = canvasX - component.position.x;\n            const offsetY = canvasY - component.position.y;\n            if (Math.abs(offsetX) < component.size.x/2 && Math.abs(offsetY) < component.size.y/2) {\n                component.onClick(offsetX, offsetY);\n            }\n        }\n\n        // Right now I have nothing better than re-updating the whole tree\n        this.update();\n    }\n\n    update() {\n        // Recursively loop backwards through the tree\n        // stores a hash of component indices because we have to check the same component multiple times\n        const visitedNodes: {[i: number]: boolean} = {};\n        for (let i = 0; i < this.outputComponents.length; i++) {\n            this.updateComponent(this.outputComponents[i], visitedNodes);\n        }\n\n        this.lastUpdated = Date.now();\n    }\n\n    updateComponent(component: Component, visitedNodes: {[i: number]: boolean}) {\n        let index = this.components.indexOf(component); // if this gets too slow I can add IDs\n        if (!visitedNodes[index]) {\n            visitedNodes[index] = true; // prevents infinite loops, although cyclic explorations are invalid anyway\n            // has not been visited, so we need to evaluate it\n            //console.log(\"visiting \" + String(index), component);\n            let parentBits = [];\n            for (let i = 0; i < component.inputWires.length; i++) {\n                const wire = component.inputWires[i];\n                this.updateComponent(wire.toComponent, visitedNodes);\n                // all we need is this one bit\n                parentBits.push(wire.toComponent.state.bits[wire.toOutput]);\n            }\n            component.state.bits = component.evaluate(parentBits);\n        }\n    }\n};\n\nexport default Exploration;\n","// InputBit.ts\n// Can be clicked to change state\n\nimport Component from './Component';\n\nclass InputBit implements Component {\n    state: {bits: boolean[], active: boolean};\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: [];\n    inputWires: [];\n    outputSockets: {x: number, y: number}[];\n\n    constructor(x: number, y: number, value: boolean = false, size: number = 20) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            active: value,\n            bits: [value],\n        };\n\n        this.inputSockets = []; // it is input, it needs no input from elsewhere\n        this.inputWires = [];\n        this.outputSockets = [\n            {x: 0, y: 0}\n        ];\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        if (this.state.active !== this.state.bits[0]) {\n            // panic\n            throw new Error(\"[InputBit.render] State does not match bit array\");\n        }\n        ctx.fillStyle = (this.state.active ? \"#33ff33\" : \"#990000\");\n        ctx.strokeStyle = \"2px solid black\";\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.size.x / 2, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n    };\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        console.log(\"[InputBit] clicked\");\n        this.state.active = !this.state.active;\n        this.state.bits[0] = this.state.active;\n        // bits will be updated when everything is\n    };\n\n    evaluate(_: boolean[]): boolean[] {\n        return [this.state.active];\n    }\n}\n\nexport default InputBit;\n","// OutputBit.ts\n// Need a good way to distinguish from InputBits\n\nimport Component from './Component';\nimport Wire from './Wire';\n\nclass OutputBit implements Component {\n    state: { bits: boolean[] };\n    position: { x: number; y: number; };\n    size: { x: number; y: number; };\n    inputSockets: { x: number; y: number; }[];\n    outputSockets: { x: number; y: number; }[];\n    inputWires: Wire[];\n\n    constructor(x: number, y: number, size: number = 20) {\n        this.position = { x: x, y: y };\n        this.size = { x: size, y: size };\n        this.state = { bits: [false] };\n\n        this.inputSockets = [{x: 0, y: 0}];\n        // this might be convenient\n        this.outputSockets = [{x: 0, y: 0}];\n        this.inputWires = [];\n    }\n    render(ctx: CanvasRenderingContext2D): void {\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(left, top, this.size.x, this.size.y);\n        ctx.fillStyle = (this.state.bits[0] ? \"#33ff33\" : \"#990000\");\n        ctx.fillRect(\n            left + this.size.x * 0.1,\n            top + this.size.y * 0.1,\n            this.size.x * 0.8,\n            this.size.y * 0.8\n        );\n    };\n    onClick(offsetX: number, offsetY: number): void {\n        return;\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        //console.log(bits);\n        return bits;\n    };\n}\n\nexport default OutputBit;\n","// Adder.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass Adder implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public numBits: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, bits: number, width: number = bits*50) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: width,\n            y: 100,\n        };\n\n        this.state = {\n            bits: [],\n        };\n\n        this.numBits = bits;\n\n        this.inputSockets = [];\n        // spacing between the bits\n        const spacing = width / (2 * bits);\n        for (let i = 0; i < bits; i++) {\n            this.inputSockets.push({\n                x: -spacing * (i + 0.5) + width/2,\n                y: -this.size.y/2,\n            });\n            this.inputSockets.unshift({\n                x: spacing * (i + 0.5) - width/2,\n                y: -this.size.y/2,\n            });\n        }\n\n        this.outputSockets = [];\n        for (let i = 0; i < bits; i++) {\n            this.outputSockets.push({\n                x: -spacing * (i - (bits-1)/2),\n                y: this.size.y/2,\n            });\n        }\n        // carry\n        this.outputSockets.push({\n            x: -this.size.x*0.375,\n            y: 0,\n        });\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.beginPath();\n        ctx.moveTo(left,                    top);\n        ctx.lineTo(left + this.size.x,      top);\n        ctx.lineTo(left + this.size.x*0.75, top + this.size.y);\n        ctx.lineTo(left + this.size.x*0.25, top + this.size.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        for (let i = 0; i < this.inputSockets.length; i++) {\n            let socket = this.inputSockets[i];\n            ctx.fillStyle = \"#3333cc\";\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.fillStyle = \"black\";\n            ctx.fillText(String(i), this.position.x + socket.x, this.position.y + socket.y - 15);\n        }\n\n        for (let i = 0; i < this.outputSockets.length; i++) {\n            let socket = this.outputSockets[i];\n            ctx.fillStyle = \"#333333\";\n            ctx.strokeStyle = (this.state.bits[i] ? '#33ff33' : '#990000');\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.arc(this.position.x + socket.x, this.position.y + socket.y, 6, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        let num1 = 0, num2 = 0;\n        for (let i = 0; i < this.numBits; i++) {\n            const wire1 = this.inputWires[i], wire2 = this.inputWires[i + this.numBits];\n            num1 += (wire1.toComponent.state.bits[wire1.toOutput] ? 1 : 0) * (1 << i);\n            num2 += (wire2.toComponent.state.bits[wire2.toOutput] ? 1 : 0) * (1 << i);\n        }\n        const textSize = Math.round(Math.min(this.size.x * 0.125, this.size.y * 0.5));\n        ctx.font = textSize + \"px monospace\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(String(num1) + \" + \" + String(num2), this.position.x, this.position.y);\n\n        ctx.restore();\n    }\n\n    evaluate(bits: boolean[]): boolean[] {\n        let num1 = 0, num2 = 0;\n        // cheating here but that's not the point\n        for (let i = 0; i < this.numBits; i++) {\n            num1 += Number(bits[i]) * (1 << i);\n            num2 += Number(bits[i + this.numBits]) * (1 << i);\n        }\n\n        const answer = num1 + num2;\n        let answerBits = Array(this.numBits + 1);\n        for (let i = 0; i <= this.numBits; i++) {\n            answerBits[i] = (answer & (1 << i)) > 0;\n        }\n        //console.log(answerBits);\n        return answerBits;\n    }\n}\n\nexport default Adder;\n","// Wire.ts\n\nimport Component from \"./Component\"\n\ntype WireOptions = {color?: string};\n\n// not sure a wire really is a component but it uses them\nclass Wire {\n    // I use \"from\" and \"to\" because \"input\" and \"output\" are ambiguous\n    toComponent: Component;\n    toOutput: number;\n\n    color: string;\n\n    // in case you want the wire to bend\n    waypoints: Array<{x: number, y: number}> = [];\n\n    constructor(\n        to: Component,\n        toOutput: number,\n        waypoints: {x: number, y: number}[] = [],\n        options: WireOptions = {}\n    ) {\n        this.toComponent = to;\n        this.toOutput = toOutput;\n        this.waypoints = waypoints;\n\n        this.color = options.color ?? \"#333\";\n    }\n\n    get(): boolean {\n        // coerce undefined to false\n        return this.toComponent.state.bits[this.toOutput] || false;\n    }\n\n    addWaypoint(x: number, y: number) {\n        this.waypoints.push({x: x, y: y});\n    }\n\n    render(ctx: CanvasRenderingContext2D, from: {x: number, y: number}) {\n        ctx.save();\n        ctx.strokeStyle = this.color;\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        for (let i = 0; i < this.waypoints.length; i++) {\n            ctx.lineTo(this.waypoints[i].x, this.waypoints[i].y);\n        }\n        const endOffset = this.toComponent.outputSockets[this.toOutput];\n        ctx.lineTo(endOffset.x + this.toComponent.position.x, endOffset.y + this.toComponent.position.y);\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n\nexport default Wire;\n","// Gates.ts\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nabstract class Gate implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n    public rotation: number;\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number, rotation: number, bits: number) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        this.rotation = rotation * Math.PI / 180;\n\n        const cosine = Math.cos(this.rotation);\n        const sine = Math.sin(this.rotation);\n        // transform [±0.3, -0.5]\n        if (bits == 2) {\n            this.inputSockets = [\n                {\n                    x: size * (-0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine - 0.2*sine),\n                },\n                {\n                    x: size * (0.2*cosine + 0.5*sine),\n                    y: size * (-0.5*cosine + 0.2*sine)\n                }\n            ];\n        } else {\n            this.inputSockets = [{\n                x: size * 0.5*sine,\n                y: size * -0.5*cosine,\n            }]\n        }\n\n        this.outputSockets = [\n            {\n                x: size * 0.4*sine,\n                y: size * 0.4*cosine,\n            }\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    abstract drawGate(ctx: CanvasRenderingContext2D): void;\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        // base\n        ctx.fillStyle = \"#cccccc\";\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation);\n        // draw the wires coming in\n        ctx.beginPath();\n        if (this.inputSockets.length === 2) {\n            ctx.moveTo(this.size.x * -0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * -0.2, 0);\n            ctx.moveTo(this.size.x * 0.2, this.size.y * -0.5);\n            ctx.lineTo(this.size.x * 0.2, 0);\n            ctx.stroke();\n        }\n\n        this.drawGate(ctx);\n\n        ctx.restore();\n    }\n\n    abstract evaluate(bits: boolean[]): boolean[];\n}\n\nclass AndGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        ctx.beginPath();\n        ctx.moveTo(this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.lineTo(this.size.x * 0.4, 0);\n        ctx.arc(0, 0, this.size.x * 0.4, 0, Math.PI);\n        ctx.lineTo(-this.size.x * 0.4, -this.size.y * 0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] && bits[1]];\n    };\n}\n\nclass OrGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] || bits[1]];\n    };\n}\n\nclass XorGate extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 2);\n    }\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.x;\n        // do the or's path...\n        ctx.beginPath();\n        ctx.moveTo(s * 0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0.4, s * 0.1, 0, s * 0.4);\n        ctx.quadraticCurveTo(s * -0.4, s * 0.1, s * -0.4, s * -0.4);\n        ctx.quadraticCurveTo(s * 0, s * -0.2, s * 0.4, s * -0.4);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n        // and the extra thing\n        ctx.beginPath();\n        ctx.moveTo(s * -0.4, s * -0.5);\n        ctx.quadraticCurveTo(s * 0, s * -0.3, s * 0.4, s * -0.5);\n        ctx.stroke();\n    };\n    evaluate(bits: boolean[]): boolean[] {\n        return [bits[0] !== bits[1]];\n    };\n}\n// Doesn't extend Gate because it only has 1 input and is smaller\nclass Not extends Gate {\n    constructor(x: number, y: number, size: number, degrees: number) {\n        super(x, y, size, degrees, 1);\n    }\n\n    drawGate(ctx: CanvasRenderingContext2D) {\n        const s = this.size.y;\n        // wire in\n        ctx.beginPath();\n        ctx.moveTo(0, s * -0.5);\n        ctx.lineTo(0, 0);\n        ctx.stroke();\n        // triangle for the not\n        ctx.beginPath();\n        ctx.moveTo(0, s * 0.2);\n        ctx.lineTo(s * -0.25, s * -0.35);\n        ctx.lineTo(s * 0.25, s * -0.35);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.arc(0, s * 0.3, s * 0.1, 0, 2*Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        Gate.prototype.render.call(this, ctx);\n    };\n    onClick(offsetX: number, offsetY: number) {};\n    evaluate(bits: boolean[]): boolean[] {\n        return [!bits[0]];\n    };\n}\n\nexport {AndGate, OrGate, XorGate, Not};\n","// AdderExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\n\n// for testing\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass AdderExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const adder = new Adder(200, 200, 4);\n        this.components.push(adder);\n\n        for (let i = 0; i < 4; i++) {\n            const bit = new InputBit(40 + i*40, 30);\n            adder.inputWires.unshift(new Wire(bit, 0, [\n                {x: 112.5 + i*25, y: 120 - i*20},\n                {x: 40 + i*40, y: 120 - i*20},\n            ]));\n            this.components.push(bit);\n\n            const bit2 = new InputBit(360 - i*40, 40);\n            adder.inputWires.push(new Wire(bit2, 0, []));\n            this.components.push(bit2);\n        }\n\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(245 - i*30, 300);\n            output.inputWires.push(new Wire(adder, i, []));\n            this.components.push(output);\n            this.outputComponents.push(output);\n        }\n\n        const andGate = new AndGate(365, 240, 60, 0);\n        const orGate = new OrGate(425, 240, 60, 0);\n        const xorGate = new XorGate(485, 240, 60, 0);\n        const not = new Not(545, 240, 60, 0);\n\n        this.components.push(andGate);\n        this.components.push(orGate);\n        this.components.push(xorGate);\n        this.components.push(not);\n\n        for (let i = 0; i < 7; i++) {\n            const bit = new InputBit(350 + i*30, 180);\n            this.components.push(bit);\n\n            if (i < 2) {\n                andGate.inputWires.push(new Wire(bit, 0, []));\n            } else if (i < 4) {\n                orGate.inputWires.push(new Wire(bit, 0, []));\n            } else if (i < 6) {\n                xorGate.inputWires.push(new Wire(bit, 0, []));\n            } else {\n                not.inputWires.push(new Wire(bit, 0, []));\n            }\n        }\n\n        const testGates = [andGate, orGate, xorGate, not];\n        for (let i = 0; i < 4; i++) {\n            const output = new OutputBit(365 + 60*i, 300);\n            this.components.push(output);\n            this.outputComponents.push(output);\n            output.inputWires.push(new Wire(testGates[i], 0, []));\n        }\n    }\n}\n\nexport default AdderExploration;\n","// MultiplierExploration.ts\n\nimport Exploration from './Exploration';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport RegisterBit from './RegisterBit';\nimport Adder from './Adder';\nimport Wire from './Wire';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass MultiplierExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const BITS = 6;\n\n        const startButton = new InputBit(50, 50, false, 40);\n        this.components.push(startButton);\n\n        const clockAnd = new AndGate(50, 100, 25, 0);\n        const clockNot = new Not(50, 150, 25, 0);\n        const clockBit = new OutputBit(50, 200);\n\n\n        clockAnd.inputWires.push(new Wire(clockNot, 0, [\n            {x: 45, y: 75},\n            {x: 30, y: 75},\n            {x: 30, y: 175},\n            {x: 50, y: 175}\n        ]));\n        clockAnd.inputWires.push(new Wire(startButton, 0));\n        clockBit.inputWires.push(new Wire(clockNot, 0));\n        clockNot.inputWires.push(new Wire(clockAnd, 0));\n        this.components.push(clockAnd, clockNot, clockBit);\n        this.outputComponents.push(clockBit);\n\n        const adder = new Adder(300, 200, BITS, 240);\n        for (let i = 0; i < BITS; i++) {\n            const d = 3;\n            adder.inputWires.push(new Wire(adder, i, [\n                {x: adder.position.x + adder.inputSockets[i].x, y: 110 + d*i},\n                {x: 110 + d*i, y: 110 + d*i},\n                {x: 110 + d*i, y: 290 - d*i},\n                {x: adder.position.x + adder.outputSockets[i].x, y: 290 - d*i},\n            ], {color: \"rgba(0, 128, 128, 0.75)\"}));\n        }\n\n        // Two inputs.\n        let inputA = [];\n        let inputB = [];\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(400 - i*25, 50);\n            adder.inputWires.push(new Wire(input, 0, []));\n            this.components.push(input);\n            inputA.push(input); // in case we need it\n        }\n        for (let i = 0; i < BITS; i++) {\n            const input = new InputBit(600 - i*25, 50);\n            //adder.inputWires.push(new Wire(input, 0, []));\n            this.components.push(input);\n            inputB.push(input);\n        }\n\n        for (let i = 0; i < BITS; i++) {\n            const output = new OutputBit(270 + i*20, 350);\n            this.outputComponents.push(output);\n            output.inputWires.push(new Wire(adder, i, []));\n        }\n\n        // Registers\n        let productRegister = [];\n        for (let i = 0; i < 2*BITS+1; i++) {\n            const reg = new OutputBit(600 - 45*i, 400, 20);\n            productRegister.push(reg);\n            this.outputComponents.push(reg); // todo: is needed?\n            this.components.push(reg);\n        }\n\n        // Wire Coloring\n        const purple = {color: \"rgb(128, 0, 128)\"};\n        const purpleFaded = {color: \"rgba(128, 0, 128, 0.25)\"};\n        const teal = {color: \"rgb(0, 128, 128)\"};\n        const tealFaded = {color: \"rgba(0, 128, 128, 0.25)\"};\n\n        // Shifting the Multiplication Register\n        for (let i = 0; i < 2*BITS + 1; i++) {\n            const regBit = productRegister[i];\n            const or = new OrGate(regBit.position.x, regBit.position.y - 30, 20, 0);\n            this.components.push(or);\n            regBit.inputWires.push(new Wire(or, 0));\n\n            const and1 = new AndGate(regBit.position.x - 10, regBit.position.y - 60, 20, 0);\n            and1.inputWires.push(new Wire(clockNot, 0, [], purpleFaded));\n            // Shifting\n            if (i < 2*BITS) {\n                and1.inputWires.push(new Wire(productRegister[i+1], 0, [\n                    {x: regBit.position.x - 6, y: regBit.position.y - 80},\n                    {x: regBit.position.x - 21, y: regBit.position.y - 80},\n                    {x: regBit.position.x - 21, y: regBit.position.y},\n                ], purple));\n            }\n            const and2 = new AndGate(regBit.position.x + 10, regBit.position.y - 60, 20, 0);\n            and2.inputWires.push(new Wire(clockAnd, 0, [], tealFaded));\n            this.components.push(and1, and2);\n\n            if (i >= BITS && i < 2*BITS) {\n                // Upper Half of the Register: Connect to the adder.\n                and2.inputWires.push(new Wire(adder, i - BITS, [], teal));\n            } else {\n                // Lower Half of the Register: Connect to itself.\n                and2.inputWires.push(new Wire(regBit, 0, [\n                    {x: regBit.position.x + 14, y: regBit.position.y - 75},\n                    {x: regBit.position.x + 21, y: regBit.position.y - 75},\n                    {x: regBit.position.x + 21, y: regBit.position.y},\n                ], teal));\n            }\n\n            or.inputWires.push(new Wire(and1, 0));\n            or.inputWires.push(new Wire(and2, 0));\n        }\n\n        this.components.push(adder);\n    }\n}\n\nexport default MultiplierExploration;\n","// RegisterBit.ts\n//\n// Has an \"on\" input and an \"off\" input.\n// Does nothing if both are on or both are off.\n\nimport Component from \"./Component\";\nimport Wire from \"./Wire\";\n\nclass RegisterBit implements Component {\n    public state: {bits: boolean[]};\n    public position: {x: number, y: number};\n    public size: {x: number, y: number};\n    public inputSockets: {x: number, y: number}[];\n    public inputWires: Wire[];\n    public outputSockets: {x: number, y: number}[];\n\n    // bits=8 means an 8-bit plus 8-bit\n    constructor(x: number, y: number, size: number = 30) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n\n        this.size = {\n            x: size,\n            y: size,\n        };\n\n        this.state = {\n            bits: [false],\n        };\n\n        // [0] is the off switch and [1] is the on switch\n        const offset = size * 0.44;\n        this.inputSockets = [\n            {x: -offset, y: -offset},\n            {x:  offset, y: -offset}\n        ];\n\n        this.outputSockets = [\n            {x: 0, y: size/2},\n        ];\n\n        this.inputWires = [];\n    }\n\n    onClick(_offsetX: number, _offsetY: number): void {\n        return;\n    };\n\n    render(ctx: CanvasRenderingContext2D) {\n        ctx.save();\n\n        const left = this.position.x - this.size.x/2;\n        const top = this.position.y - this.size.y/2;\n        ctx.translate(left, top);\n        // base\n        ctx.fillStyle = this.state.bits[0] ? \"#33ff33\" : \"#990000\";\n        ctx.beginPath();\n        ctx.moveTo(this.size.x*0.5, 0);\n        ctx.lineTo(this.size.x*1.0, this.size.y*0.5);\n        ctx.lineTo(this.size.x*0.5, this.size.y);\n        ctx.lineTo(this.size.x*0.0, this.size.y*0.5);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n        // red input\n        ctx.fillStyle = \"#ccffff\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.25, this.size.y * 0.25, this.size.x * 0.25, 135*Math.PI/180, 315*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();\n        /*ctx.fillStyle = \"#33ff33\";\n        ctx.beginPath();\n        ctx.arc(this.size.x * 0.75, this.size.y * 0.25, this.size.x * 0.25, -135*Math.PI/180, 45*Math.PI/180);\n        ctx.fill();\n        ctx.stroke();*/\n        if (this.inputWires[0] && this.inputWires[0].get()) {\n            ctx.beginPath();\n            ctx.moveTo(this.size.x * 0.75, this.size.y * 0.25);\n            ctx.lineTo(this.size.x * 1.0, 0);\n            ctx.stroke();\n        }\n\n        ctx.restore();\n    }\n    // If the \"set\" input is on, change to the \"what\" input\n    evaluate(bits: boolean[]): boolean[] {\n        return bits[0] ? [bits[1]] : this.state.bits;\n    }\n}\n\nexport default RegisterBit;\n","// RegisterExploration\n//\n// Exploration that shows how a register bit works.\n// Most of these (not multipliers and dividers) have the expanded version on the left and a compact version on the right.\n\nimport Exploration from './Exploration';\nimport Wire from './Wire';\nimport RegisterBit from './RegisterBit';\nimport InputBit from './InputBit';\nimport OutputBit from './OutputBit';\nimport {AndGate, OrGate, XorGate, Not} from './Gates';\n\nclass RegisterExploration extends Exploration {\n    constructor(canvas: HTMLCanvasElement) {\n        super(canvas);\n\n        const inputSet = new InputBit(50, 100);\n        this.components.push(inputSet);\n\n        const inputWhat = new InputBit(150, 100);\n        this.components.push(inputWhat);\n\n        const inverter = new Not(50, 150, 30, 0);\n        this.components.push(inverter);\n        inverter.inputWires.push(new Wire(inputSet, 0));\n\n        // recursive components are a bit weird\n        const andWhat = new AndGate(140, 150, 50, 0);\n        const andStay = new AndGate(80, 200, 50, 0);\n        const or = new OrGate(100, 250, 50, 0);\n\n        andWhat.inputWires= [\n            new Wire(inputSet, 0, [\n                {x: 50, y: 125},\n            ]),\n            new Wire(inputWhat, 0, [])\n        ];\n        andStay.inputWires = [\n            new Wire(or, 0, [\n                {x: 50, y: 175},\n                {x: 50, y: 270},\n            ]),\n            new Wire(inverter, 0, [\n                {x: 90, y: 165},\n                {x: 50, y: 165},\n            ])\n        ];\n        or.inputWires = [\n            new Wire(andStay, 0, []),\n            new Wire(andWhat, 0, []),\n        ];\n        this.components.push(andWhat, andStay, or);\n\n\n        const output = new OutputBit(100, 300);\n        output.inputWires.push(new Wire(or, 0))\n        this.components.push(output);\n        this.outputComponents.push(output);\n\n        // the simplified version\n        const inputOff2 = new InputBit(250, 150);\n        const inputOn2 = new InputBit(350, 150);\n        const register = new RegisterBit(300, 200, 40);\n        const output2 = new OutputBit(300, 250);\n        register.inputWires.push(new Wire(inputOff2, 0));\n        register.inputWires.push(new Wire(inputOn2, 0));\n        output2.inputWires.push(new Wire(register, 0));\n\n        this.components.push(inputOn2, inputOff2, register, output2);\n        this.outputComponents.push(output2);\n    }\n\n}\n\nexport default RegisterExploration;\n","\nimport Exploration from './Exploration';\n//import TestExploration from './TestExploration';\nimport AdderExploration from './AdderExploration';\nimport MultiplierExploration from './MultiplierExploration';\nimport RegisterExploration from './RegisterExploration';\n\nfunction createCanvas(width: number, height: number): HTMLCanvasElement {\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\n\nfunction createExploration(id: string, width: number, height: number, type: typeof Exploration): Exploration {\n    const element = document.getElementById(id);\n    if (!element) {\n        throw new Error(\"Document element \" + id + \" not found.\");\n    }\n\n    const canvas = createCanvas(width, height);\n    element.appendChild(canvas);\n\n    const exploration = new type(canvas);\n    exploration.update();\n    canvas.addEventListener(\"click\", function(event) {\n        exploration.onClick(event.offsetX, event.offsetY);\n    });\n\n    const controls = document.createElement(\"div\");\n    controls.innerHTML = `\n        <form>\n            <p><strong>Speed:</strong> Slow\n                <input id=\"speed-${id}\" name=\"speed\" type=\"range\" min=\"0.5\" max=\"2\" step=\"0.25\" />\n                Fast\n            </p>\n        </form>\n    `;\n    controls.querySelector(\"#speed-\" + id)!.addEventListener(\"change\", function(event) {\n        exploration.updateTime = 1000 / Number((event.target as HTMLInputElement).value);\n    });\n    element.appendChild(controls);\n\n    return exploration;\n}\n\n\n// Explorations\nlet ALL_EXPLORATIONS: Exploration[] = [];\nALL_EXPLORATIONS.push(createExploration('1', 640, 480, AdderExploration));\nALL_EXPLORATIONS.push(createExploration('2', 640, 480, MultiplierExploration));\nALL_EXPLORATIONS.push(createExploration('3', 400, 400, RegisterExploration));\n\nfunction renderLoop() {\n    for (let i = 0; i < ALL_EXPLORATIONS.length; i++) {\n        const exploration = ALL_EXPLORATIONS[i];\n        exploration.render();\n        if (Date.now() - exploration.lastUpdated > exploration.updateTime) {\n            exploration.update();\n        }\n    }\n    requestAnimationFrame(renderLoop);\n}\nrenderLoop();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}